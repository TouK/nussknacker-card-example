{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "This is the ISO20022.plus JSON schema for the message definition cain.001.001.02-AuthorisationInitiationV02.\nAll rights reserved. Without warranty. Generated by https://ISO20022.plus/ from eRepository on https://ISO20022.org/. ",
	"type": "object",
	"additionalProperties": false,
	"required": ["Document" ],
	"properties": {
		"@context" : { "type": "object" },
		"@type" : { "type": "string" },
		"Document": {
			"$ref": "#/definitions/cain.001.001.02-AuthorisationInitiationV02"
		}
	},
	"definitions": {
		"Header42": {
			"additionalProperties": false,
			"description": "Set of characteristics related to the protocol.",
			"properties": {
				"MessageFunction": {
					"$ref": "#/definitions/MessageFunction16Code",
					"description": "Identifies the type of process related to the message."
				},
				"ProtocolVersion": {
					"$ref": "#/definitions/Max2048Text",
					"description": "Version of the acquirer to issuer protocol specifications."
				},
				"ExchangeIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Unique identification of an exchange of messages between two parties."
				},
				"ReTransmissionCounter": {
					"$ref": "#/definitions/Max3NumericText",
					"description": "Number of retransmission of the message. Incremented by one for each retransmission."
				},
				"CreationDateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time at which the message was sent."
				},
				"BatchManagementInformation": {
					"$ref": "#/definitions/BatchManagementInformation1",
					"description": "Information related to the batch and the collection to which the message belongs if any."
				},
				"InitiatingParty": {
					"$ref": "#/definitions/GenericIdentification172",
					"description": "Unique identification of the partner that has initiated the exchange."
				},
				"RecipientParty": {
					"$ref": "#/definitions/GenericIdentification172",
					"description": "Unique identification of the partner that is the recipient of the message exchange."
				},
				"TraceData": {
					"items": {
						"$ref": "#/definitions/AdditionalData1"
					},
					"description": "Information sent in the request message to be returned in the response one, for instance to help in the retrieval of the context of the exchange.\r\n\r\nISO 8583:93/2003 bit 59",
					"type": "array"
				},
				"Traceability": {
					"items": {
						"$ref": "#/definitions/Traceability7"
					},
					"description": "Identification of partners involved in exchange from the merchant to the issuer, with the relative timestamp of their exchanges.",
					"type": "array"
				}
			},
			"required": ["MessageFunction","ProtocolVersion","CreationDateTime","InitiatingParty"],
			"type": "object"
		},
		"MessageFunction16Code": {
			"description": "Identifies the type of process related to a financial initiation and financial response message.\r\nISO 8583 MTI",
		
			"enum":["REQU"	,"ADVC"	,"CAAD"	,"CANO"	,"NOTI"	],				
			"type": "string"
		},
		"Max2048Text": {
			"description": "Specifies a character string with a maximum length of 2048 characters.",
			"minLength": 1,
			"maxLength": 2048,
			"type": "string"
		},
		"Max35Text": {
			"description": "Specifies a character string with a maximum length of 35 characters.",
			"minLength": 1,
			"maxLength": 35,
			"type": "string"
		},
		"Max3NumericText": {
			"description": "Specifies a numeric string with a maximum length of 3 digits.",
			"pattern": "^[0-9]{1,3}$",
			"type": "string"
		},
		"ISODateTime" : {
			"description": "A particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed.",
				
			"type":"string"
		},
		"BatchManagementInformation1": {
			"additionalProperties": false,
			"description": "Elements of identification of a batch management transaction.",
			"properties": {
				"CollectionIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the collection to which the batch belongs.\r\n\r\nISO 8583:2003 bit 69-2"
				},
				"BatchIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the batch to which the message belongs.\r\n\r\nISO 8583:2003 bit 69-2"
				},
				"MessageSequenceNumber": {
					"$ref": "#/definitions/Max15NumericText",
					"description": "Sequence number of the message inside the batch.\r\n\r\nISO 8583:87/93 bit 71\r\nISO 8583:2003 bit 68-2"
				},
				"MessageChecksumInputValue": {
					"$ref": "#/definitions/Max140Binary",
					"description": "Value of the message to use for the computation of the checksum of the batch or collection of messages."
				}
			},
			"required": ["BatchIdentification"],
			"type": "object"
		},
		"Max15NumericText": {
			"description": "Specifies a numeric string with a maximum length of 15 digits.",
			"pattern": "^[0-9]{1,15}$",
			"type": "string"
		},
		"Max140Binary" : {
			"description": "Specifies a binary string with a maximum length of 140 binary bytes.",
			"minLength": 1,
			"maxLength": 140,
				
			"type":"string"
		},
		"GenericIdentification172": {
			"additionalProperties": false,
			"description": "Identification of an entity.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the entity."
				},
				"Type": {
					"$ref": "#/definitions/PartyType17Code",
					"description": "Type of identified entity."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of identification."
				},
				"Assigner": {
					"$ref": "#/definitions/PartyType18Code",
					"description": "Entity type in charge of assigning an identification."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Country of the entity (ISO 3166-1 alpha-2 or alpha-3)."
				},
				"ShortName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name of the entity."
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"PartyType17Code": {
			"description": "Type of role assigned.",
		
			"enum":["CISS"	,"ACQR"	,"ACQP"	,"CISP"	,"AGNT"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"PartyType18Code": {
			"description": "Type of role assigned.",
		
			"enum":["CISS"	,"ACQR"	,"CSCH"	,"AGNT"	],				
			"type": "string"
		},
		"Min2Max3AlphaText": {
			"description": "Specifies an alpha string with a minimum length of 2 characters and a maximum length of 3 characters.",
			"pattern": "^[a-zA-Z]{2,3}$",
			"type": "string"
		},
		"AdditionalData1": {
			"additionalProperties": false,
			"description": "Contains additional data.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of information."
				},
				"Value": {
					"$ref": "#/definitions/Max2048Text",
					"description": "Value of a specific type of data."
				}
			},
			"type": "object"
		},
		"Traceability7": {
			"additionalProperties": false,
			"description": "Identification of partners involved in exchange from the merchant to the issuer, with the relative timestamp of their exchanges.",
			"properties": {
				"RelayIdentification": {
					"$ref": "#/definitions/GenericIdentification172",
					"description": "Identification of a partner of a message exchange."
				},
				"TraceDateTimeIn": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time of incoming data exchange for relaying or processing."
				},
				"TraceDateTimeOut": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time of the outgoing exchange for relaying or processing."
				}
			},
			"required": ["RelayIdentification"],
			"type": "object"
		},
		"AuthorisationInitiation1": {
			"additionalProperties": false,
			"description": "Information related to the authorisation initiation message.",
			"properties": {
				"Environment": {
					"$ref": "#/definitions/Environment1",
					"description": "Contains or describes the information pertaining to the actors interacting with the transaction."
				},
				"Context": {
					"$ref": "#/definitions/Context1",
					"description": "Contains or describes conditions and characteristics of the transaction."
				},
				"Transaction": {
					"$ref": "#/definitions/Transaction77",
					"description": "Card transaction for which an authorisation is requested."
				},
				"AddendumData": {
					"$ref": "#/definitions/AddendumData1",
					"description": "Component contains data structures applicable to certain industries that require specific data within transaction messages."
				},
				"ProcessingResult": {
					"$ref": "#/definitions/ProcessingResult1",
					"description": "Outcome of the processing of the authorisation."
				},
				"ICCRelatedData": {
					"$ref": "#/definitions/Max10KHexBinaryText",
					"description": "Data related to an integrated circuit card application embedded in the payment card of the cardholder.\r\n\r\nISO 8583 bit 55"
				},
				"ProtectedData": {
					"items": {
						"$ref": "#/definitions/ProtectedData1"
					},
					"description": "Contains protected data and the attributes used to protect the data.",
					"type": "array"
				},
				"SupplementaryData": {
					"items": {
						"$ref": "#/definitions/SupplementaryData1"
					},
					"description": "Additional information that can not be captured in the structured fields and/or other specific block.",
					"type": "array"
				}
			},
			"required": ["Environment","Context","Transaction"],
			"type": "object"
		},
		"Environment1": {
			"additionalProperties": false,
			"description": "Environment of the transaction.",
			"properties": {
				"Acquirer": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Identification of the acquirer.\r\nISO 8583 bit 32."
				},
				"Sender": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Party sending the message to another intermediary agent or to the final destination.\r\nISO 8583 bit 33"
				},
				"Receiver": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Party receiving the message from the origin or from an intermediary agent.\r\nISO 8583 bit 100."
				},
				"Acceptor": {
					"$ref": "#/definitions/PartyIdentification203",
					"description": "Card acceptor performing the card transaction."
				},
				"Payer": {
					"$ref": "#/definitions/PartyIdentification211",
					"description": "Person initiating a payment to the benefit of a payee."
				},
				"Payee": {
					"$ref": "#/definitions/PartyIdentification211",
					"description": "Person to the benefit of whom a payment is performed.\r\n\r\nISO 8583:87/93/2003 bit 98"
				},
				"Terminal": {
					"$ref": "#/definitions/Terminal1",
					"description": "Payment terminal or ATM performing the transaction."
				},
				"Card": {
					"$ref": "#/definitions/CardData1",
					"description": "Card or payment token performing the transaction."
				},
				"CustomerDevice": {
					"$ref": "#/definitions/CustomerDevice2",
					"description": "Identification of the customer device performing the transaction."
				},
				"Wallet": {
					"$ref": "#/definitions/Wallet1",
					"description": "Container for tenders used by the customer to perform the payment transaction."
				},
				"Token": {
					"$ref": "#/definitions/Token1",
					"description": "Details of payment token."
				},
				"Cardholder": {
					"$ref": "#/definitions/Cardholder15",
					"description": "Cardholder performing the card payment transaction."
				}
			},
			"required": ["Acquirer","Card"],
			"type": "object"
		},
		"PartyIdentification197": {
			"additionalProperties": false,
			"description": "Identification of a party.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the party.\r\n\r\n\r\n"
				},
				"Assigner": {
					"$ref": "#/definitions/Max35Text",
					"description": "Entity in charge of assigning an identification to a party."
				},
				"Country": {
					"$ref": "#/definitions/ISO3NumericCountryCode",
					"description": "Country of the party."
				},
				"ShortName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Short name of the party."
				},
				"AdditionalIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional identification of the party."
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"ISO3NumericCountryCode": {
			"description": "Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Numeric-3 code). The code is checked against the list of country names coded with three digit characters, defined in the standard.",
			"pattern": "^[0-9]{3,3}$",			
			"type": "string"
		},
		"PartyIdentification203": {
			"additionalProperties": false,
			"description": "Identification of a party.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the acceptor.\r\nISO 8583 bit 42"
				},
				"Assigner": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the entity assigning an identification to the acceptor."
				},
				"Country": {
					"$ref": "#/definitions/ISO3NumericCountryCode",
					"description": "Country code of the acceptor.\r\n\r\nISO 8583:87/93 bit 43 & 8583:2003 bit 43-71 (when used for Acceptor Country Code)\r\n"
				},
				"ShortName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Short name of the acceptor."
				},
				"AdditionalIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional identification assigned by an agent to an acceptor."
				},
				"NameAndLocation": {
					"$ref": "#/definitions/Max99Text",
					"description": "Name and location of acceptor.\r\n\r\nISO 8583:87/93 bit 43 & 8583:2003 bit 43-71 (when used for Acceptor name and location)"
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the entity.\r\n\r\nISO 8583:93 bit 43 & 8583:2003 bit 43-71 (when used for acceptor address)"
				},
				"Email": {
					"$ref": "#/definitions/Max256Text",
					"description": "Electronic mail address.\r\n\r\nISO 8583:2003 bit 43-71 (when used for Acceptor email address)"
				},
				"URLAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Universal Resource Locator (URL) address.\r\n\r\nISO 8583:2003 bit 43-71 (when used for Acceptor URL)"
				},
				"PhoneNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Collection of information that identifies  a phone number as defined by telecom services.\r\n\r\nISO 8583:2003 bit 43-71 (when used for Acceptor phone number)"
				},
				"CustomerService": {
					"$ref": "#/definitions/Max35Text",
					"description": "Phone number of the customer service.\r\n\r\nISO 8583:2003 bit 43-71 (when used for Acceptor customer service phone number)"
				},
				"AdditionalContactInformation": {
					"$ref": "#/definitions/Max256Text",
					"description": "Additional information used to facilitate contact with the card acceptor, for instance sales agent name, dispute manager name.\r\n\r\nISO 8583:2003 bit 43-71 (when used for Acceptor additional contact information)"
				},
				"TaxRegistrationIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of a party by its tax registration number."
				},
				"AdditionalData": {
					"items": {
						"$ref": "#/definitions/AdditionalData1"
					},
					"description": "Contains additional data.",
					"type": "array"
				},
				"SponsoredMerchant": {
					"items": {
						"$ref": "#/definitions/SponsoredMerchant1"
					},
					"description": "Sponsored merchant is a merchant that uses the payment services of another entity that acts as the card acceptor.",
					"type": "array"
				}
			},
			"required": ["Identification","NameAndLocation"],
			"type": "object"
		},
		"Max99Text": {
			"description": "Specifies a character string with a maximum length of 99 characters.",
			"minLength": 1,
			"maxLength": 99,
			"type": "string"
		},
		"Address1": {
			"additionalProperties": false,
			"description": "Structured postal address.",
			"properties": {
				"AddressLine1": {
					"$ref": "#/definitions/Max70Text",
					"description": "First line of information that locates and identifies a specific address, as defined by postal services."
				},
				"AddressLine2": {
					"$ref": "#/definitions/Max70Text",
					"description": "Second line of information that locates and identifies a specific address, as defined by postal services."
				},
				"StreetName": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of a street or thoroughfare."
				},
				"BuildingNumber": {
					"$ref": "#/definitions/Max16Text",
					"description": "Number that identifies the position of a building on a street."
				},
				"PostalCode": {
					"$ref": "#/definitions/Max16Text",
					"description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail."
				},
				"TownName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name of a built-up area, with defined boundaries, and a local government."
				},
				"CountrySubDivisionMinor": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies a minor subdivision of a country, for instance county, prefecture."
				},
				"CountrySubDivisionMajor": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies a major subdivision of a country, for instance state, province."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Nation with its own government occupying a particular territory."
				}
			},
			"type": "object"
		},
		"Max70Text": {
			"description": "Specifies a character string with a maximum length of 70characters.",
			"minLength": 1,
			"maxLength": 70,
			"type": "string"
		},
		"Max16Text": {
			"description": "Specifies a character string with a maximum length of 16 characters.",
			"minLength": 1,
			"maxLength": 16,
			"type": "string"
		},
		"Max256Text": {
			"description": "Specifies a character string with a maximum length of 256 characters.",
			"minLength": 1,
			"maxLength": 256,
			"type": "string"
		},
		"SponsoredMerchant1": {
			"additionalProperties": false,
			"description": "Merchant using the payment services of the card acceptor. The sponsored merchant is not acting as the card acceptor; the latter remaining the only party liable for the transaction vis-à-vis the acquirer.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Identification of the sponsored merchant.\r\n"
				},
				"AdditionalIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional identification information pertaining to the sponsored merchant."
				},
				"CommonName": {
					"$ref": "#/definitions/Max140Text",
					"description": "Contains the full name of the sponsored merchant."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the sponsored merchant. "
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"Max140Text": {
			"description": "Specifies a character string with a maximum length of 140 characters.",
			"minLength": 1,
			"maxLength": 140,
			"type": "string"
		},
		"PartyIdentification211": {
			"additionalProperties": false,
			"description": "Identification of a party.",
			"properties": {
				"FinancialInstitution": {
					"$ref": "#/definitions/FinancialInstitution4",
					"description": "Financial institution-related data required by business and/or regulation (for example, money or funds transfer)."
				},
				"Customer": {
					"$ref": "#/definitions/Customer3",
					"description": "Customer-related data required by business and/or regulation (for example, money or funds transfer)."
				}
			},
			"type": "object"
		},
		"FinancialInstitution4": {
			"additionalProperties": false,
			"description": "Information related to a financial institution required by business or regulation (for example, in money or funds transfer).",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the financial institution."
				},
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the financial institution."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the financial institution."
				},
				"Email": {
					"$ref": "#/definitions/Max256Text",
					"description": "Electronic mail address of the financial institution."
				},
				"URLAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Universal Resource Locator (URL) address of the financial institution."
				},
				"PhoneNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Collection of information that identifies a phone number, as defined by telecom services."
				},
				"CustomerService": {
					"$ref": "#/definitions/Max35Text",
					"description": "Phone number of the customer services."
				},
				"AdditionalContactInformation": {
					"$ref": "#/definitions/Max256Text",
					"description": "Additional information used to facilitate contact with the financial institution, for instance dispute manager name."
				}
			},
			"type": "object"
		},
		"Customer3": {
			"additionalProperties": false,
			"description": "Identifies the customer in a transfer of money.",
			"properties": {
				"CustomerIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the customer assigned by a party."
				},
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the financial customer."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the financial customer."
				},
				"Credentials": {
					"items": {
						"$ref": "#/definitions/Credentials1"
					},
					"description": "Credentials of the financial customer.",
					"type": "array"
				},
				"AdditionalInformation": {
					"$ref": "#/definitions/Max256Text",
					"description": "Additional information related to the customer."
				},
				"DateOfBirth": {
					"$ref": "#/definitions/ISODate",
					"description": "Date of birth of the party."
				}
			},
			"type": "object"
		},
		"Credentials1": {
			"additionalProperties": false,
			"description": "Contains credential information.",
			"properties": {
				"IdentificationCode": {
					"$ref": "#/definitions/Identification2Code",
					"description": "Identification of the type of credential."
				},
				"OtherIdentificationCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Used when OtherNational or OtherPrivate value is selected in identification code list. "
				},
				"IdentificationValue": {
					"$ref": "#/definitions/Max70Text",
					"description": "Value of identification."
				}
			},
			"required": ["IdentificationCode","IdentificationValue"],
			"type": "object"
		},
		"Identification2Code": {
			"description": "Identification of an individual.",
		
			"enum":["SSYN"	,"NTID"	,"PASS"	,"DRID"	,"ARNB"	,"EMAL"	,"PHNB"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"ISODate" : {
			"description": "A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.",
				
			"type":"string"
		},
		"Terminal1": {
			"additionalProperties": false,
			"description": "Payment terminal or ATM performing the transaction",
			"properties": {
				"TerminalIdentification": {
					"$ref": "#/definitions/TerminalIdentification1",
					"description": "Identification of the terminal performing the transaction."
				},
				"Type": {
					"$ref": "#/definitions/TerminalType1Code",
					"description": "Type of terminal."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of terminal."
				},
				"Capabilities": {
					"$ref": "#/definitions/Capabilities1",
					"description": "Capabilities of the terminal"
				},
				"TerminalIntegration": {
					"$ref": "#/definitions/TerminalIntegrationCategory1Code",
					"description": "Type of terminal integration at a point of service location."
				},
				"OutdoorIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the terminal is operated outdoor or indoor at the point of service.\r\nTrue: The terminal is operated outdoor\r\nFalse: The terminal is operated indoor"
				},
				"OffPremisesIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the terminal is operated on- or off-premises at the point of service.\r\nTrue: The terminal is operated off premises.\r\nFalse: The terminal is operated on premises.\r\n\r\nISO 8583:93 bit 22-4, ISO 8583:2003 bit 22-3."
				},
				"OnBoardIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the transaction was performed on board.\r\n\r\nTrue: The terminal is located on board.\r\nFalse: The terminal is not located on board."
				},
				"POIComponent": {
					"items": {
						"$ref": "#/definitions/PointOfInteractionComponent8"
					},
					"description": "Data related to the components of the POI (Point Of Interaction) performing the transactions.",
					"type": "array"
				}
			},
			"required": ["TerminalIdentification"],
			"type": "object"
		},
		"TerminalIdentification1": {
			"additionalProperties": false,
			"description": "Identification of the terminal performing the transaction.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max16Text",
					"description": "Identification of the terminal.\r\n\r\nISO 8583 bit 41"
				},
				"Assigner": {
					"$ref": "#/definitions/Max35Text",
					"description": "Assignor of the terminal identification."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Country of the terminal."
				},
				"ShortName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Short name of the terminal."
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"TerminalType1Code": {
			"description": "Type of terminal to perform the transaction.",
		
			"enum":["ATMT"	,"POST"	,"MPOS"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"Capabilities1": {
			"additionalProperties": false,
			"description": "Capabilities of the terminal.",
			"properties": {
				"CardReadingCapability": {
					"items": {
						"$ref": "#/definitions/CardDataReading7Code"
					},
					"description": "Card reading capabilities of the terminal performing the transaction.\r\nISO 8583:93 bit 22-2; ISO 8583:2003 bit 27-1",
					"type": "array"
				},
				"OtherCardReadingCapabilities": {
					"items": {
						"$ref": "#/definitions/Max35Text"
					},
					"description": "Other types of card reading capabilities.",
					"type": "array"
				},
				"CardWritingCapabilities": {
					"items": {
						"$ref": "#/definitions/CardDataWriting1Code"
					},
					"description": "Card writing or output capabilities of the terminal performing the transaction.\r\nISO 8583:93 bit 22-10, ISO 8583:2003 bit 27-8_9.",
					"type": "array"
				},
				"OtherCardWritingCapabilities": {
					"items": {
						"$ref": "#/definitions/Max35Text"
					},
					"description": "Other card writing or output capabilities of the terminal performing the transaction.",
					"type": "array"
				},
				"PINLengthCapabilities": {
					"$ref": "#/definitions/Number",
					"description": "Maximum number of digits that the Point of Interaction is able to accept when the cardholder enters its PIN.\r\n\r\nISO 8583:87 bit 26, ISO 8583:93 bit 22-12, ISO 8583:2003 bit 27-11.\r\n\r\n"
				},
				"ApprovalCodeLength": {
					"$ref": "#/definitions/Number",
					"description": "Maximum number of characters of the approval code that the acquirer is able to manage.\r\nISO 8583:87 & 93 bit 27,  ISO 8583:2003-1 bit 27-3"
				},
				"MaxScriptLength": {
					"$ref": "#/definitions/Number",
					"description": "Maximum data length in bytes that a card issuer can return to the ICC at the terminal.\r\n\r\nISO 8583:2003 bit 27-8"
				},
				"PINPadInoperative": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "PIN pad is inoperative.\r\n\r\nDefault: False - PIN pad is operative or not applicable.\r\nTrue: PIN pas is inoperative."
				},
				"CardCaptureCapable": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the terminal can capture cards or not.\r\nTrue: The terminal is able to capture cards\r\nFalse: The terminal is not able to capture cards.\r\n\r\nISO 8583:87 bit 25, ISO 8583:93 bit 22-3, ISO 8583:2003 bit 27-10."
				},
				"OnLineCapabilities": {
					"$ref": "#/definitions/OnLineCapability2Code",
					"description": "Capability of the terminal to go online."
				},
				"MessageCapabilities": {
					"items": {
						"$ref": "#/definitions/DisplayCapabilities6"
					},
					"description": "Capability of the terminal to display or print messages to the cardholder or the merchant.\r\n\r\nISO 8583:93 bit 22-11, ISO 8583:2003-1 bit 27-4,5, 6, 7",
					"type": "array"
				},
				"CardholderVerificationCapability": {
					"items": {
						"$ref": "#/definitions/CardholderVerificationCapabilities1"
					},
					"description": "Cardholder verification capabilities performing the transaction at the point of service.\r\nISO 8583:93 bit 22-2, ISO 8583:2003 bit 27-2",
					"type": "array"
				}
			},
			"type": "object"
		},
		"CardDataReading7Code": {
			"description": "Card  reading capabilities of the terminal performing the transaction. \r\n ISO 8583:93 bit 22-2, ISO 8583:2003 bit 27-1",
		
			"enum":["MGST"	,"CDFL"	,"ICCY"	,"ICPY"	,"MICR"	,"MLEY"	,"MSIP"	,"OCRR"	,"OPTC"	,"OTHN"	,"OTHP"	,"RFID"	,"UNSP"	,"KEEN"	],				
			"type": "string"
		},
		"CardDataWriting1Code": {
			"description": "Card  writing capabilities of the terminal performing the transaction. \r\n ISO 8583:93 bit 22-10, ISO 8583:2003 bit 27-8_9",
		
			"enum":["MGST"	,"ICCY"	,"ICPY"	,"MSIP"	,"OTHN"	,"OTHP"	,"UNSP"	],				
			"type": "string"
		},
		"Number" : {
			"description": "Number of objects represented as an integer.",
			
			"oneOf":[
				{ 
					"type":"number"
				},{
					"type": "object",
					"additionalProperties": false,
					"required":["@value","@type"],
					"properties":{
						"@value": {
							"pattern": "^[+-]?[0-9]+(.[0-9]+)?$",
							"type": "string"
						},
						"@type": {
							"enum":["xsd:decimal"],				
							"type": "string"
						}
						
					}
				}
			]
			
		},
		"TrueFalseIndicator" : {
			"description": "A flag indicating a True or False value.",
				
			"type":"boolean"
		},
		"OnLineCapability2Code": {
			"description": "On-line and off-line capabilities of the POI (Point Of Interaction).",
		
			"enum":["OFLN"	,"ONLN"	,"BOTH"	],				
			"type": "string"
		},
		"DisplayCapabilities6": {
			"additionalProperties": false,
			"description": "Capabilities of the display components performing the transaction.",
			"properties": {
				"Destination": {
					"$ref": "#/definitions/UserInterface1Code",
					"description": "Destination of the message to present."
				},
				"AvailableFormat": {
					"items": {
						"$ref": "#/definitions/OutputFormat1Code"
					},
					"description": "Available message format.",
					"type": "array"
				},
				"NumberOfLines": {
					"$ref": "#/definitions/Number",
					"description": "Number of lines of the display."
				},
				"LineWidth": {
					"$ref": "#/definitions/Number",
					"description": "Number of columns of the display or printer."
				},
				"AvailableLanguage": {
					"items": {
						"$ref": "#/definitions/LanguageCode"
					},
					"description": "Available language for the message. Reference ISO 639-1 (alpha-2) et ISO 639-2 (alpha-3).",
					"type": "array"
				}
			},
			"required": ["Destination"],
			"type": "object"
		},
		"UserInterface1Code": {
			"description": "Type of user interface to display or print information.",
		
			"enum":["CDSP"	,"CRCP"	,"MDSP"	,"MRCP"	],				
			"type": "string"
		},
		"OutputFormat1Code": {
			"description": "Message format.",
		
			"enum":["TEXT"	,"MREF"	,"HTML"	],				
			"type": "string"
		},
		"LanguageCode": {
			"description": "Specifies a language.",			
			"type": "string"
		},
		"CardholderVerificationCapabilities1": {
			"additionalProperties": false,
			"description": "Cardholder verification capabilities performing the transaction at the point of service.\r\n\r\nISO 8583:87 bit 22-3, ISO 8583;93 bit 22-2, ISO 8583:2003 bit 27-2",
			"properties": {
				"Capability": {
					"$ref": "#/definitions/CardholderVerificationCapability5Code",
					"description": "Cardholder verification capabilities performing the transaction at the point of service.\r\n\r\nISO 8583:93 bit 22-2, ISO 8583:2003-1 bit 27-2"
				},
				"OtherCapability": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other types of cardholder verification capabilities."
				}
			},
			"required": ["Capability"],
			"type": "object"
		},
		"CardholderVerificationCapability5Code": {
			"description": "Capability of verifying the cardholder's identity or authenticity.",
		
			"enum":["NPIN"	,"FCPN"	,"FEPN"	,"FDSG"	,"FBIO"	,"FBIG"	,"APKI"	,"PKIS"	,"NOVF"	,"NBIO"	,"OTHN"	,"OTHP"	,"SIGN"	,"UNSP"	,"VORN"	,"NOPN"	,"NOOP"	],				
			"type": "string"
		},
		"TerminalIntegrationCategory1Code": {
			"description": "Terminal category code of the place where the merchant actually performed the transaction.",
		
			"enum":["MPOI"	,"MSLE"	,"SSLE"	],				
			"type": "string"
		},
		"PointOfInteractionComponent8": {
			"additionalProperties": false,
			"description": "Data related to a component of the POI (Point Of Interaction) performing the transaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/POIComponentType5Code",
					"description": "Type of component belonging to a POI (Point Of Interaction) Terminal."
				},
				"Identification": {
					"$ref": "#/definitions/PointOfInteractionComponentIdentification1",
					"description": "Identification of the POI (Point Of Interaction) component."
				},
				"Status": {
					"$ref": "#/definitions/PointOfInteractionComponentStatus3",
					"description": "Status of the POI (Point Of Interaction) component."
				},
				"StandardCompliance": {
					"items": {
						"$ref": "#/definitions/GenericIdentification48"
					},
					"description": "Identification of the standard for which the component complies with.",
					"type": "array"
				},
				"Characteristics": {
					"$ref": "#/definitions/PointOfInteractionComponentCharacteristics4",
					"description": "Characteristics of a POI (Point Of Interaction) component."
				},
				"Assessment": {
					"items": {
						"$ref": "#/definitions/PointOfInteractionComponentAssessment1"
					},
					"description": "Assessments for the component of the point of interaction.",
					"type": "array"
				}
			},
			"required": ["Type","Identification"],
			"type": "object"
		},
		"POIComponentType5Code": {
			"description": "Type of component belonging to a POI (Point of Interaction) Terminal.",
		
			"enum":["EMVK"	,"EMVO"	,"SECM"	,"MRPR"	,"AQPP"	,"APPR"	,"DVCE"	,"DRVR"	,"MDWR"	,"OPST"	,"APLI"	,"SCPR"	,"SERV"	,"TERM"	,"TLPR"	,"CRTF"	,"TMSP"	,"SAPR"	,"SACP"	],				
			"type": "string"
		},
		"PointOfInteractionComponentIdentification1": {
			"additionalProperties": false,
			"description": "Identification of a POI (Point of Interaction) component.",
			"properties": {
				"ItemNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Hierarchical identification of a hardware component inside all the hardware component of the POI. It is composed of all item numbers of the upper level components, separated by the '.' character, ended by the item number of the current component."
				},
				"ProviderIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies the provider of the software, hardware or parameters of the POI component."
				},
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the POI component assigned by its provider."
				},
				"SerialNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Serial number identifying an occurrence of an hardware component."
				}
			},
			"type": "object"
		},
		"PointOfInteractionComponentStatus3": {
			"additionalProperties": false,
			"description": "Status of a POI component (Point of Interaction).",
			"properties": {
				"VersionNumber": {
					"$ref": "#/definitions/Max256Text",
					"description": "Current version of the component that might include the release number."
				},
				"Status": {
					"$ref": "#/definitions/POIComponentStatus1Code",
					"description": "Current status of the component."
				},
				"ExpiryDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Expiration date of the component."
				}
			},
			"type": "object"
		},
		"POIComponentStatus1Code": {
			"description": "Status of a component belonging to a POI Terminal (Point of Interaction).",
		
			"enum":["WAIT"	,"OPER"	,"OUTD"	,"DACT"	],				
			"type": "string"
		},
		"GenericIdentification48": {
			"additionalProperties": false,
			"description": "Information related to an identification.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Proprietary information, often a code, issued by the data source scheme issuer."
				},
				"Version": {
					"$ref": "#/definitions/Max35Text",
					"description": "Version of the identification."
				},
				"Issuer": {
					"$ref": "#/definitions/Max35Text",
					"description": "Entity that assigns the identification."
				}
			},
			"required": ["Identification","Version","Issuer"],
			"type": "object"
		},
		"PointOfInteractionComponentCharacteristics4": {
			"additionalProperties": false,
			"description": "Physical and logical characteristics of a POI component (Point of Interaction).",
			"properties": {
				"Memory": {
					"items": {
						"$ref": "#/definitions/MemoryCharacteristics1"
					},
					"description": "Memory characteristics of the component.",
					"type": "array"
				},
				"Communication": {
					"items": {
						"$ref": "#/definitions/CommunicationCharacteristics3"
					},
					"description": "Low level communication of the hardware or software component toward another component or an external entity.",
					"type": "array"
				},
				"SecurityAccessModules": {
					"$ref": "#/definitions/Number",
					"description": "Number of security access modules (SAM)."
				},
				"SubscriberIdentityModules": {
					"$ref": "#/definitions/Number",
					"description": "Number of subscriber identity modules (SIM)."
				},
				"SecurityElement": {
					"items": {
						"$ref": "#/definitions/CryptographicKey13"
					},
					"description": "Security characteristics of the component.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"MemoryCharacteristics1": {
			"additionalProperties": false,
			"description": "Characteristics of a hardware memory module.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification or name of the memory."
				},
				"TotalSize": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "Total size of the memory unit."
				},
				"FreeSize": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "Total size of the available memory."
				},
				"Unit": {
					"$ref": "#/definitions/MemoryUnit1Code",
					"description": "Memory unit of the sizes."
				}
			},
			"required": ["Identification","TotalSize","FreeSize","Unit"],
			"type": "object"
		},
		"DecimalNumber" : {
			"description": "Number of objects represented as a decimal number, for example 0.75 or 45.6.",
			
			"oneOf":[
				{ 
					"type":"number"
				},{
					"type": "object",
					"additionalProperties": false,
					"required":["@value","@type"],
					"properties":{
						"@value": {
							"pattern": "^[+-]?[0-9]+(.[0-9]+)?$",
							"type": "string"
						},
						"@type": {
							"enum":["xsd:decimal"],				
							"type": "string"
						}
						
					}
				}
			]
			
		},
		"MemoryUnit1Code": {
			"description": "Unit of the memory size.",
		
			"enum":["EXAB"	,"PETA"	,"TERA"	,"GIGA"	,"MEGA"	,"KILO"	,"BYTE"	],				
			"type": "string"
		},
		"CommunicationCharacteristics3": {
			"additionalProperties": false,
			"description": "Low level communication of the hardware or software component toward another component or an external entity.",
			"properties": {
				"CommunicationType": {
					"$ref": "#/definitions/POICommunicationType2Code",
					"description": "Type of low level communication."
				},
				"RemoteParty": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/PartyType7Code"
					},
					"description": "Entity that communicate with the current component, using this communication device.",
					"type": "array"
				},
				"Active": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Communication hardware is activated."
				}
			},
			"required": ["CommunicationType","RemoteParty","Active"],
			"type": "object"
		},
		"POICommunicationType2Code": {
			"description": "Low level communication of the hardware or software component toward another component or an external entity.",
		
			"enum":["USBH"	,"USBD"	,"ETHR"	,"WIFI"	,"PSTN"	,"BLTH"	,"GSMF"	,"GPRS"	,"RS23"	,"WT2G"	,"WT3G"	,"WT4G"	,"WT5G"	],				
			"type": "string"
		},
		"PartyType7Code": {
			"description": "Party that communicate with a POI component (Point of Interaction), using a communication device.",
		
			"enum":["SALE"	,"PCPT"	,"ACQR"	,"ITAG"	,"TMGT"	],				
			"type": "string"
		},
		"CryptographicKey13": {
			"additionalProperties": false,
			"description": "Cryptographic Key.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max140Text",
					"description": "Name of the cryptographic key."
				},
				"AdditionalIdentification": {
					"$ref": "#/definitions/Max35Binary",
					"description": "Additional identification of the key.\r\nUsage\r\nFor derived unique key per transaction (DUKPT) keys, the key serial number (KSN) with the 21 bits of the transaction counter set to zero."
				},
				"Version": {
					"$ref": "#/definitions/Max256Text",
					"description": "Version of the cryptographic key."
				},
				"Type": {
					"$ref": "#/definitions/CryptographicKeyType3Code",
					"description": "Type of algorithm used by the cryptographic key."
				},
				"Function": {
					"items": {
						"$ref": "#/definitions/KeyUsage1Code"
					},
					"description": "Allowed usage of the key.",
					"type": "array"
				},
				"ActivationDate": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time on which the key must be activated."
				},
				"DeactivationDate": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time on which the key must be deactivated."
				},
				"KeyValue": {
					"$ref": "#/definitions/ContentInformationType19",
					"description": "Encrypted cryptographic key."
				},
				"KeyCheckValue": {
					"$ref": "#/definitions/Max35Binary",
					"description": "Value for checking a cryptographic key security parameter."
				},
				"AdditionalManagementInformation": {
					"items": {
						"$ref": "#/definitions/GenericInformation1"
					},
					"description": "Additional Information needed by the receiver to securely process the management of the security element.",
					"type": "array"
				}
			},
			"required": ["Identification","Version"],
			"type": "object"
		},
		"Max35Binary" : {
			"description": "Specifies a binary string with a maximum length of 35 binary bytes.",
			"minLength": 1,
			"maxLength": 35,
				
			"type":"string"
		},
		"CryptographicKeyType3Code": {
			"description": "Codes for qualifying the type of cryptographic keys.",
		
			"enum":["AES2"	,"EDE3"	,"DKP9"	,"AES9"	,"AES5"	,"EDE4"	],				
			"type": "string"
		},
		"KeyUsage1Code": {
			"description": "Allowed usages of the key.",
		
			"enum":["ENCR"	,"DCPT"	,"DENC"	,"DDEC"	,"TRNX"	,"TRNI"	,"MACG"	,"MACV"	,"SIGG"	,"SUGV"	,"PINE"	,"PIND"	,"PINV"	,"KEYG"	,"KEYI"	,"KEYX"	,"KEYD"	],				
			"type": "string"
		},
		"ContentInformationType19": {
			"additionalProperties": false,
			"description": "General cryptographic message syntax (CMS) containing protected data.",
			"properties": {
				"ContentType": {
					"$ref": "#/definitions/ContentType2Code",
					"description": "Type of data protection."
				},
				"EnvelopedData": {
					"$ref": "#/definitions/EnvelopedData5",
					"description": "Data protection by encryption, with a session key."
				},
				"AuthenticatedData": {
					"$ref": "#/definitions/AuthenticatedData5",
					"description": "Data protection by a message authentication code (MAC)."
				},
				"SignedData": {
					"$ref": "#/definitions/SignedData5",
					"description": "Data protected by a digital signatures."
				},
				"DigestedData": {
					"$ref": "#/definitions/DigestedData5",
					"description": "Data protected by a digest."
				}
			},
			"required": ["ContentType"],
			"type": "object"
		},
		"ContentType2Code": {
			"description": "Identification of the type of a Cryptographic Message Syntax (CMS) data structure.",
		
			"enum":["DATA"	,"SIGN"	,"EVLP"	,"DGST"	,"AUTH"	],				
			"type": "string"
		},
		"EnvelopedData5": {
			"additionalProperties": false,
			"description": "Encrypted data with encryption key.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"OriginatorInformation": {
					"$ref": "#/definitions/OriginatorInformation1",
					"description": "Provides certificates of the originator."
				},
				"Recipient": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/Recipient6Choice"
					},
					"description": "Session key or identification of the protection key used by the recipient.",
					"type": "array"
				},
				"EncryptedContent": {
					"$ref": "#/definitions/EncryptedContent4",
					"description": "Data protection by encryption (digital envelope), with an encryption key."
				}
			},
			"required": ["Recipient"],
			"type": "object"
		},
		"OriginatorInformation1": {
			"additionalProperties": false,
			"description": "Provides information about the originator. It is present only if required by the key management algorithm.",
			"properties": {
				"Certificate": {
					"items": {
						"$ref": "#/definitions/Max5000Binary"
					},
					"description": "It may contain originator certificates associated with several different key management algorithms.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"Max5000Binary" : {
			"description": "Specifies a binary string with a maximum length of 5000 binary bytes.",
			"minLength": 1,
			"maxLength": 5000,
				
			"type":"string"
		},
		"Recipient6Choice": {
			"description": "Transport key or key encryption key (KEK) for the recipient.",
			"oneOf":[
				{
					"type": "object",
					"additionalProperties": false,
					"required":["KeyTransport"],
					"properties":{
				"KeyTransport": {
					"$ref": "#/definitions/KeyTransport5",
					"description": "Encryption key using previously distributed asymmetric public key."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["KEK"],
					"properties":{
				"KEK": {
					"$ref": "#/definitions/KEK5",
					"description": "Key encryption key using previously distributed symmetric key."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["KeyIdentifier"],
					"properties":{
				"KeyIdentifier": {
					"$ref": "#/definitions/KEKIdentifier2",
					"description": "Identification of a protection key without a session key, shared and previously exchanged between the initiator and the recipient."
				}}
				}
			],
			"type": "object"
		},
		"KeyTransport5": {
			"additionalProperties": false,
			"description": "Key encryption key (KEK), encrypted with a previously distributed asymmetric public key.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"RecipientIdentification": {
					"$ref": "#/definitions/Recipient5Choice",
					"description": "Identification of a cryptographic asymmetric key for the recipient."
				},
				"KeyEncryptionAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification19",
					"description": "Algorithm to encrypt the key encryption key (KEK)."
				},
				"EncryptedKey": {
					"$ref": "#/definitions/Max5000Binary",
					"description": "Encrypted key encryption key (KEK)."
				}
			},
			"required": ["RecipientIdentification","KeyEncryptionAlgorithm","EncryptedKey"],
			"type": "object"
		},
		"Recipient5Choice": {
			"description": "Identification of a cryptographic asymmetric key.",
			"oneOf":[
				{
					"type": "object",
					"additionalProperties": false,
					"required":["IssuerAndSerialNumber"],
					"properties":{
				"IssuerAndSerialNumber": {
					"$ref": "#/definitions/IssuerAndSerialNumber1",
					"description": "Certificate issuer name and serial number (see ITU X.509)."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["KeyIdentifier"],
					"properties":{
				"KeyIdentifier": {
					"$ref": "#/definitions/KEKIdentifier2",
					"description": "Identifier of a cryptographic asymmetric key, previously exchanged between initiator and recipient."
				}}
				}
			],
			"type": "object"
		},
		"IssuerAndSerialNumber1": {
			"additionalProperties": false,
			"description": "Certificate issuer name and serial number (see X.509).",
			"properties": {
				"Issuer": {
					"$ref": "#/definitions/CertificateIssuer1",
					"description": "Certificate issuer name (see X.509)."
				},
				"SerialNumber": {
					"$ref": "#/definitions/Max35Binary",
					"description": "Certificate serial number (see X.509)."
				}
			},
			"required": ["Issuer","SerialNumber"],
			"type": "object"
		},
		"CertificateIssuer1": {
			"additionalProperties": false,
			"description": "Certificate issuer name (see X.509).",
			"properties": {
				"RelativeDistinguishedName": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/RelativeDistinguishedName1"
					},
					"description": "Relative distinguished name inside a X.509 certificate.",
					"type": "array"
				}
			},
			"required": ["RelativeDistinguishedName"],
			"type": "object"
		},
		"RelativeDistinguishedName1": {
			"additionalProperties": false,
			"description": "Relative distinguished name defined by X.500 and X.509.",
			"properties": {
				"AttributeType": {
					"$ref": "#/definitions/AttributeType1Code",
					"description": "Type of attribute of a distinguished name (see X.500)."
				},
				"AttributeValue": {
					"$ref": "#/definitions/Max140Text",
					"description": "Value of the attribute of a distinguished name (see X.500)."
				}
			},
			"required": ["AttributeType","AttributeValue"],
			"type": "object"
		},
		"AttributeType1Code": {
			"description": "Type of attribute of a distinguished name (DN).",
		
			"enum":["CNAT"	,"LATT"	,"OATT"	,"OUAT"	,"CATT"	],				
			"type": "string"
		},
		"KEKIdentifier2": {
			"additionalProperties": false,
			"description": "Identification of a key encryption key (KEK), using previously distributed symmetric key.",
			"properties": {
				"KeyIdentification": {
					"$ref": "#/definitions/Max140Text",
					"description": "Identification of the cryptographic key."
				},
				"KeyVersion": {
					"$ref": "#/definitions/Max140Text",
					"description": "Version of the cryptographic key."
				},
				"SequenceNumber": {
					"$ref": "#/definitions/Number",
					"description": "Number of usages of the cryptographic key."
				},
				"DerivationIdentification": {
					"$ref": "#/definitions/Min5Max16Binary",
					"description": "Identification used for derivation of a unique key from a master key provided for the data protection."
				}
			},
			"required": ["KeyIdentification","KeyVersion"],
			"type": "object"
		},
		"Min5Max16Binary" : {
			"description": "Specifies a binary string with a minimum length of 5 bytes, and a maximum length of 16 bytes.",
			"minLength": 5,
			"maxLength": 16,
				
			"type":"string"
		},
		"AlgorithmIdentification19": {
			"additionalProperties": false,
			"description": "Cryptographic algorithms and parameters for the protection of transported keys by an asymmetric key.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm7Code",
					"description": "Asymmetric encryption algorithm of a transport key."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter10",
					"description": "Parameters of the encryption algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Algorithm7Code": {
			"description": "Asymmetric encryption algorithm of a transport key.",
		
			"enum":["ERSA"	,"RSAO"	],				
			"type": "string"
		},
		"Parameter10": {
			"additionalProperties": false,
			"description": "Parameters of the asymmetric encryption algorithm.",
			"properties": {
				"EncryptionFormat": {
					"$ref": "#/definitions/EncryptionFormat2Code",
					"description": "Format of data before encryption, if the format is not plaintext or implicit."
				},
				"DigestAlgorithm": {
					"$ref": "#/definitions/Algorithm16Code",
					"description": "Identification of the digest algorithm."
				},
				"MaskGeneratorAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification18",
					"description": "Mask generator function cryptographic algorithm and parameters."
				}
			},
			"type": "object"
		},
		"EncryptionFormat2Code": {
			"description": "Format of data before encryption, if the format is not plaintext or implicit.",
		
			"enum":["TR31"	,"TR34"	,"I238"	],				
			"type": "string"
		},
		"Algorithm16Code": {
			"description": "Identification of a digest algorithm.",
		
			"enum":["HS25"	,"HS38"	,"HS51"	,"HS01"	,"SH31"	,"SH32"	,"SH33"	,"SH35"	,"SHK1"	,"SHK2"	],				
			"type": "string"
		},
		"AlgorithmIdentification18": {
			"additionalProperties": false,
			"description": "Mask generator function cryptographic algorithm and parameters.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm8Code",
					"description": "Mask generator function cryptographic algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter9",
					"description": "Parameters associated to the mask generator function cryptographic algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Algorithm8Code": {
			"description": "Mask generator functions of the RSAES-OAEP encryption algorithm (RSA Encryption Scheme: Optimal Asymmetric Encryption Padding).",
		
			"enum":["MGF1"	],				
			"type": "string"
		},
		"Parameter9": {
			"additionalProperties": false,
			"description": "Parameters associated to a mask generator cryptographic function.",
			"properties": {
				"DigestAlgorithm": {
					"$ref": "#/definitions/Algorithm16Code",
					"description": "Digest algorithm used in the mask generator function."
				}
			},
			"type": "object"
		},
		"KEK5": {
			"additionalProperties": false,
			"description": "Key encryption key (KEK), using previously distributed symmetric key.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"KEKIdentification": {
					"$ref": "#/definitions/KEKIdentifier2",
					"description": "Identification of the key encryption key (KEK)."
				},
				"KeyEncryptionAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification23",
					"description": "Algorithm to encrypt the key encryption key (KEK)."
				},
				"EncryptedKey": {
					"$ref": "#/definitions/Max500Binary",
					"description": "Encrypted key encryption key (KEK)."
				}
			},
			"required": ["KEKIdentification","KeyEncryptionAlgorithm","EncryptedKey"],
			"type": "object"
		},
		"AlgorithmIdentification23": {
			"additionalProperties": false,
			"description": "Cryptographic algorithm and parameters for the protection of the transported key.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm18Code",
					"description": "Identification of the algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter12",
					"description": "Parameters associated to the encryption algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Algorithm18Code": {
			"description": "Cryptographic algorithms for the protection of transported keys.",
		
			"enum":["UKPT"	,"E3DC"	,"EA2C"	,"DKP9"	,"UKA1"	,"EA5C"	,"EA9C"	,"DA12"	,"DA25"	,"DA19"	,"N108"	,"EA2R"	,"EA9R"	,"EA5R"	,"E3DR"	,"E36C"	,"E36R"	,"SD5C"	],				
			"type": "string"
		},
		"Parameter12": {
			"additionalProperties": false,
			"description": "Parameters associated to a cryptographic encryption algorithm.",
			"properties": {
				"EncryptionFormat": {
					"$ref": "#/definitions/EncryptionFormat2Code",
					"description": "Format of data before encryption, if the format is not plaintext or implicit."
				},
				"InitialisationVector": {
					"$ref": "#/definitions/Max500Binary",
					"description": "Initialisation vector of a cipher block chaining (CBC) mode encryption."
				},
				"BytePadding": {
					"$ref": "#/definitions/BytePadding1Code",
					"description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit."
				}
			},
			"type": "object"
		},
		"Max500Binary" : {
			"description": "Specifies a binary string with a maximum length of 500 binary bytes.",
			"minLength": 1,
			"maxLength": 500,
				
			"type":"string"
		},
		"BytePadding1Code": {
			"description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit.",
		
			"enum":["LNGT"	,"NUL8"	,"NULG"	,"NULL"	,"RAND"	],				
			"type": "string"
		},
		"EncryptedContent4": {
			"additionalProperties": false,
			"description": "Encrypted data with an encryption key.",
			"properties": {
				"ContentType": {
					"$ref": "#/definitions/ContentType2Code",
					"description": "Type of data which have been encrypted."
				},
				"ContentEncryptionAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification24",
					"description": "Algorithm used to encrypt the data."
				},
				"EncryptedData": {
					"$ref": "#/definitions/Max100KBinary",
					"description": "Encrypted data, result of the content encryption."
				}
			},
			"required": ["ContentType","EncryptedData"],
			"type": "object"
		},
		"AlgorithmIdentification24": {
			"additionalProperties": false,
			"description": "Cryptographic algorithm and parameters for encryptions with a symmetric cryptographic key.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm18Code",
					"description": "Identification of the encryption algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter12",
					"description": "Parameters associated with the CBC (Chain Block Chaining) encryption algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Max100KBinary" : {
			"description": "Binary data of 100K maximum.",
			"minLength": 1,
			"maxLength": 102400,
				
			"type":"string"
		},
		"AuthenticatedData5": {
			"additionalProperties": false,
			"description": "Message authentication code (MAC), computed on the data to protect with an encryption key.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"Recipient": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/Recipient6Choice"
					},
					"description": "Session key or protection key identification used by the recipient.",
					"type": "array"
				},
				"MACAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification22",
					"description": "Algorithm to compute message authentication code (MAC)."
				},
				"EncapsulatedContent": {
					"$ref": "#/definitions/EncapsulatedContent3",
					"description": "Data to authenticate."
				},
				"MAC": {
					"$ref": "#/definitions/Max140Binary",
					"description": "Message authentication code value."
				}
			},
			"required": ["Recipient","MACAlgorithm","EncapsulatedContent","MAC"],
			"type": "object"
		},
		"AlgorithmIdentification22": {
			"additionalProperties": false,
			"description": "Identification of a cryptographic algorithm and parameters for the MAC computation.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm17Code",
					"description": "Identification of the MAC algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter7",
					"description": "Parameters associated to the MAC algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Algorithm17Code": {
			"description": "Cryptographic algorithms for the MAC (Message Authentication Code).",
		
			"enum":["MACC"	,"MCCS"	,"CMA1"	,"MCC1"	,"CMA9"	,"CMA5"	,"CMA2"	,"CM31"	,"CM32"	,"CM33"	,"MCS3"	,"CCA1"	,"CCA2"	,"CCA3"	],				
			"type": "string"
		},
		"Parameter7": {
			"additionalProperties": false,
			"description": "Parameters associated to the MAC algorithm.",
			"properties": {
				"InitialisationVector": {
					"$ref": "#/definitions/Max500Binary",
					"description": "Initialisation vector of a cipher block chaining (CBC) mode encryption."
				},
				"BytePadding": {
					"$ref": "#/definitions/BytePadding1Code",
					"description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit."
				}
			},
			"type": "object"
		},
		"EncapsulatedContent3": {
			"additionalProperties": false,
			"description": "Data to authenticate.",
			"properties": {
				"ContentType": {
					"$ref": "#/definitions/ContentType2Code",
					"description": "Type of data which have been authenticated."
				},
				"Content": {
					"$ref": "#/definitions/Max100KBinary",
					"description": "Actual data to authenticate."
				}
			},
			"required": ["ContentType"],
			"type": "object"
		},
		"SignedData5": {
			"additionalProperties": false,
			"description": "Digital signatures of data from one or several signers.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"DigestAlgorithm": {
					"items": {
						"$ref": "#/definitions/AlgorithmIdentification21"
					},
					"description": "Identification of digest algorithm applied before signature.",
					"type": "array"
				},
				"EncapsulatedContent": {
					"$ref": "#/definitions/EncapsulatedContent3",
					"description": "Data to sign."
				},
				"Certificate": {
					"items": {
						"$ref": "#/definitions/Max5000Binary"
					},
					"description": "Chain of X.509 certificates.",
					"type": "array"
				},
				"Signer": {
					"items": {
						"$ref": "#/definitions/Signer4"
					},
					"description": "Digital signature and identification of a signer.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"AlgorithmIdentification21": {
			"additionalProperties": false,
			"description": "Cryptographic algorithm and parameters of digests.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm16Code",
					"description": "Identification of the digest algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Signer4": {
			"additionalProperties": false,
			"description": "Entity who has signed the data and its digital signature.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the Cryptographic Message Syntax (CMS) data structure."
				},
				"SignerIdentification": {
					"$ref": "#/definitions/Recipient5Choice",
					"description": "Identification of the entity who has signed the data."
				},
				"DigestAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification21",
					"description": "Identification of a digest algorithm to apply before signature."
				},
				"SignedAttributes": {
					"items": {
						"$ref": "#/definitions/GenericInformation1"
					},
					"description": "Collection of attributes that are signed.",
					"type": "array"
				},
				"SignatureAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification20",
					"description": "Cryptographic digital signature algorithm."
				},
				"Signature": {
					"$ref": "#/definitions/Max3000Binary",
					"description": "Digital signature."
				}
			},
			"required": ["DigestAlgorithm","SignatureAlgorithm","Signature"],
			"type": "object"
		},
		"GenericInformation1": {
			"additionalProperties": false,
			"description": "GenericInformation exchanged with a name and value.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the generic information to exchange."
				},
				"Value": {
					"$ref": "#/definitions/Max140Text",
					"description": "Value of the generic information to exchange."
				}
			},
			"required": ["Name"],
			"type": "object"
		},
		"AlgorithmIdentification20": {
			"additionalProperties": false,
			"description": "Identification of a cryptographic algorithm and parameters for digital signatures.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm19Code",
					"description": "Identification of the algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter11",
					"description": "Parameters of the RSASSA-PSS digital signature algorithm (RSA signature algorithm with appendix: Probabilistic Signature Scheme)."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Algorithm19Code": {
			"description": "Cryptographic algorithms for digital signatures.",
		
			"enum":["ERS2"	,"ERS1"	,"RPSS"	,"ECC1"	,"ECC2"	,"ECC3"	,"ECC4"	,"ECC5"	,"ERS3"	,"ECP2"	,"ECP3"	,"ECP5"	],				
			"type": "string"
		},
		"Parameter11": {
			"additionalProperties": false,
			"description": "Parameters of the RSASSA-PSS digital signature algorithm (RSA signature algorithm with appendix: Probabilistic Signature Scheme).",
			"properties": {
				"DigestAlgorithm": {
					"$ref": "#/definitions/Algorithm16Code",
					"description": "Identification of the digest algorithm."
				},
				"MaskGeneratorAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification12",
					"description": "Mask generator function cryptographic algorithm and parameters."
				},
				"SaltLength": {
					"$ref": "#/definitions/Number",
					"description": "Length of the salt to include in the signature."
				},
				"TrailerField": {
					"$ref": "#/definitions/Number",
					"description": "Trailer field number."
				}
			},
			"required": ["DigestAlgorithm","MaskGeneratorAlgorithm","SaltLength"],
			"type": "object"
		},
		"AlgorithmIdentification12": {
			"additionalProperties": false,
			"description": "Mask generator function cryptographic algorithm and parameters.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm8Code",
					"description": "Mask generator function cryptographic algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter5",
					"description": "Parameters associated to the mask generator function cryptographic algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Parameter5": {
			"additionalProperties": false,
			"description": "Parameters associated to a mask generator cryptographic function.",
			"properties": {
				"DigestAlgorithm": {
					"$ref": "#/definitions/Algorithm11Code",
					"description": "Digest algorithm used in the mask generator function."
				}
			},
			"type": "object"
		},
		"Algorithm11Code": {
			"description": "Identification of a digest algorithm.",
		
			"enum":["HS25"	,"HS38"	,"HS51"	,"HS01"	],				
			"type": "string"
		},
		"Max3000Binary" : {
			"description": "Specifies a binary string with a maximum length of 3000 binary bytes.",
			"minLength": 1,
			"maxLength": 3000,
				
			"type":"string"
		},
		"DigestedData5": {
			"additionalProperties": false,
			"description": "Digest computed on the identified data.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"DigestAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification21",
					"description": "Identification of the digest algorithm."
				},
				"EncapsulatedContent": {
					"$ref": "#/definitions/EncapsulatedContent3",
					"description": "Data on which the digest is computed."
				},
				"Digest": {
					"$ref": "#/definitions/Max140Binary",
					"description": "Result of data-digesting process."
				}
			},
			"required": ["DigestAlgorithm","EncapsulatedContent","Digest"],
			"type": "object"
		},
		"PointOfInteractionComponentAssessment1": {
			"additionalProperties": false,
			"description": "Assessments for the component of the point of interaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/POIComponentAssessment1Code",
					"description": "Type of assessment of the component."
				},
				"Assigner": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/Max35Text"
					},
					"description": "Body which has delivered the assessment.",
					"type": "array"
				},
				"DeliveryDate": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date when the assessment has been delivered."
				},
				"ExpirationDate": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date when the assessment will expire."
				},
				"Number": {
					"$ref": "#/definitions/Max35Text",
					"description": "Unique assessment number for the component."
				}
			},
			"required": ["Type","Assigner","Number"],
			"type": "object"
		},
		"POIComponentAssessment1Code": {
			"description": "Type of assessment of a POI component (Point of Interaction).",
		
			"enum":["EVAL"	,"CERT"	,"APPL"	],				
			"type": "string"
		},
		"CardData1": {
			"additionalProperties": false,
			"description": "Non-protected sensitive data associated with the card or payment token performing the transaction.",
			"properties": {
				"PAN": {
					"$ref": "#/definitions/Max19NumericText",
					"description": "Primary Account Number (PAN) of the card or a surrogate of the PAN such as a payment token.\r\nISO 8583 bit 2"
				},
				"ProtectedPANIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "To indicate whether the PAN is using ProtectedData for encryption or not.\r\nFalse: The PAN is used in plain text \r\nTrue: The PAN is encrypted by using ProtectedData\r\nDefault: False"
				},
				"CardSequenceNumber": {
					"$ref": "#/definitions/Min2Max3NumericText",
					"description": "Distinguishes between instances of the same payment card.\r\nISO 8583 bit 23"
				},
				"EffectiveDate": {
					"$ref": "#/definitions/Max10Text",
					"description": "Date as from which the card can be used, expressed in one of the following formats: YYYY-MM-DD, YYYY-MM, YY-MM-DD.\r\n\r\nISO 8583:93 & ISO 8583:2003-1 bit 13"
				},
				"ExpiryDate": {
					"$ref": "#/definitions/Exact4NumericText",
					"description": "Expiry date of the card or payment token.\r\n\r\nISO 8583 bit 14."
				},
				"ServiceCode": {
					"$ref": "#/definitions/Exact3NumericText",
					"description": "Service attached to the card as defined in ISO 7813.\r\n\r\nISO 8583 bit 40."
				},
				"Track1": {
					"$ref": "#/definitions/Max76Text",
					"description": "ISO track 1 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The format conforms to ISO 7813, removing beginning and ending sentinels and longitudinal redundancy check characters.\r\n\r\n\r\nISO 8583 bit 45"
				},
				"Track2": {
					"$ref": "#/definitions/Track2Data1Choice",
					"description": "ISO track 2 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The format  conforms to ISO 7813, removing beginning and ending sentinels and longitudinal redundancy check characters.\r\n\r\n\r\nISO 8583 bit 35"
				},
				"Track3": {
					"$ref": "#/definitions/Max104Text",
					"description": "ISO track 3 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The content conforms to ISO 4909, removing beginning and ending sentinels and longitudinal redundancy check characters.\r\n\r\n\r\nISO 8583 bit 36"
				},
				"PaymentAccountReference": {
					"$ref": "#/definitions/Max35Text",
					"description": "Unique non-financial reference assigned to a given PAN. May be used to link the transaction activity to that PAN.\r\n\r\nISO 8583:87 bit 56 (TLV tag 01/dataset 71)\r\nISO 8583:93 bit 112 (TLV tag 01/dataset 71)\r\nISO 8583:2003 bit 51 (TLV tag 01/dataset 71)\r\n\r\n\r\n"
				},
				"CardCountryCode": {
					"$ref": "#/definitions/ISO3NumericCountryCode",
					"description": "Country code assigned to the card by the card issuer.\r\nISO 8583 bit 20"
				},
				"CardProductType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of card product."
				},
				"CardProductSubType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Subtype of card product."
				},
				"CardPortfolioIdentifier": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies the card portfolio. "
				},
				"AdditionalCardData": {
					"$ref": "#/definitions/Max70Text",
					"description": "Additional card issuer specific data."
				}
			},
			"required": ["PAN"],
			"type": "object"
		},
		"Max19NumericText": {
			"description": "Specifies a numeric string with a maximum length of 19 digits.",
			"pattern": "^[0-9]{1,19}$",
			"type": "string"
		},
		"Min2Max3NumericText": {
			"description": "Specifies a numeric string with a minimum length of 2 digits, and a maximum length of 3 digits.",
			"pattern": "^[0-9]{2,3}$",
			"type": "string"
		},
		"Max10Text": {
			"description": "Specifies a character string with a maximum length of 10 characters.",
			"minLength": 1,
			"maxLength": 10,
			"type": "string"
		},
		"Exact4NumericText": {
			"description": "Specifies a numeric string with an exact length of 4 digits.",
			"pattern": "^[0-9]{4}$",
			"type": "string"
		},
		"Exact3NumericText": {
			"description": "Specifies a numeric string with an exact length of 3 digits.",
			"pattern": "^[0-9]{3}$",
			"type": "string"
		},
		"Max76Text": {
			"description": "Specifies a character string with a maximum length of 76 characters.",
			"minLength": 1,
			"maxLength": 76,
			"type": "string"
		},
		"Track2Data1Choice": {
			"description": "ISO track 2 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The format  conforms to ISO 7813, removing beginning and ending sentinels and longitudinal redundancy check characters.\r\n\r\n\r\nISO 8583 bit 35",
			"oneOf":[
				{
					"type": "object",
					"additionalProperties": false,
					"required":["TextValue"],
					"properties":{
				"TextValue": {
					"$ref": "#/definitions/Max37Text",
					"description": "Value of track 2 data expressed in text form."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["HexadecimalBinaryValue"],
					"properties":{
				"HexadecimalBinaryValue": {
					"$ref": "#/definitions/Max19HexBinaryText",
					"description": "Value of track 2 data expressed in a hex binary form.\r\n\r\nBinary, length of 19 with maximum 37 hexadecimal text characters.\r\n\r\nWhen an odd number of hexadecimal text characters is present, a zero must be appended to the end of the string to pad to an even number of hexadecimal text characters.\r\n"
				}}
				}
			],
			"type": "object"
		},
		"Max37Text": {
			"description": "Specifies a character string with a maximum length of 37 characters.",
			"minLength": 1,
			"maxLength": 37,
			"type": "string"
		},
		"Max19HexBinaryText": {
			"description": "Specifies a character string with a maximum length of 19 binary bytes (38 hexadecimal text characters). \r\n\r\nUsed only for hex binary data only, supports only characters A-F and 0-9.",
			"pattern": "^([0-9A-F][0-9A-F]){1,19}$",
			"type": "string"
		},
		"Max104Text": {
			"description": "Specifies a character string with a maximum length of 104 characters.",
			"minLength": 1,
			"maxLength": 104,
			"type": "string"
		},
		"CustomerDevice2": {
			"additionalProperties": false,
			"description": "Details of the customer device.",
			"properties": {
				"Device": {
					"$ref": "#/definitions/Device1",
					"description": "Information about the customer device."
				},
				"Identification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Identification of the customer device."
				},
				"Provider": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provider of the customer device."
				}
			},
			"type": "object"
		},
		"Device1": {
			"additionalProperties": false,
			"description": "Identification of the customer device.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/CustomerDeviceType1Code",
					"description": "Type of customer device."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of customer device in free text."
				},
				"Language": {
					"$ref": "#/definitions/LanguageCode",
					"description": "Preferred language set on the device"
				},
				"PhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Phone number associated with the device."
				},
				"Location": {
					"$ref": "#/definitions/GeographicCoordinates1",
					"description": "Geographical location of the device."
				},
				"IPAddress": {
					"$ref": "#/definitions/Max70Text",
					"description": "Internet Protocol address associated with the device."
				},
				"Email": {
					"$ref": "#/definitions/Max256Text",
					"description": "Electronic mail address associated with the device."
				}
			},
			"required": ["Type"],
			"type": "object"
		},
		"CustomerDeviceType1Code": {
			"description": "Type of customer device.",
		
			"enum":["SECR"	,"NSCR"	,"MOBL"	,"TBLT"	,"PECR"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"PhoneNumber": {
			"description": "The collection of information which identifies a specific phone or FAX number as defined by telecom services.\nIt consists of a \"+\" followed by the country code (from 1 to 3 characters) then a \"-\" and finally, any combination of numbers, \"(\", \")\", \"+\" and \"-\" (up to 30 characters).",
			"pattern": "^\\+[0-9]{1,3}-[0-9()+\\-]{1,30}$",
			"type": "string"
		},
		"GeographicCoordinates1": {
			"additionalProperties": false,
			"description": "Location on the Earth specified by two numbers representing vertical and horizontal position.",
			"properties": {
				"Latitude": {
					"$ref": "#/definitions/Max16Text",
					"description": "Latitude measured in degrees, minutes and seconds, following by 'N' for the north and 'S' for the south of the equator (for example 48°51'29\" N for the Eiffel Tower latitude)."
				},
				"Longitude": {
					"$ref": "#/definitions/Max16Text",
					"description": "Angular measurement of the distance of a location on the earth east or west of the Greenwich observatory.\r\nThe longitude is measured in degrees, minutes and seconds, following by 'E' for the east and 'W' for the west (for example 2°17'40\" E for the Eiffel Tower longitude)."
				}
			},
			"required": ["Latitude","Longitude"],
			"type": "object"
		},
		"Wallet1": {
			"additionalProperties": false,
			"description": "Container for tenders used by the customer to perform the payment transaction.",
			"properties": {
				"Provider": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Identification of the provider of the wallet."
				},
				"AdditionalWalletData": {
					"$ref": "#/definitions/Max256Text",
					"description": "Additional data associated with wallet."
				}
			},
			"type": "object"
		},
		"Token1": {
			"additionalProperties": false,
			"description": "Unencrypted sensitive data of a token.",
			"properties": {
				"PaymentToken": {
					"$ref": "#/definitions/Max19NumericText",
					"description": "Surrogate value of the PAN."
				},
				"TokenExpiryDate": {
					"$ref": "#/definitions/Exact4NumericText",
					"description": "Expiry date of the payment token.\r\nISO 8583 bit 14."
				},
				"TokenRequestorIdentification": {
					"$ref": "#/definitions/Max11NumericText",
					"description": "Identification of a party requesting a token."
				},
				"TokenAssuranceData": {
					"$ref": "#/definitions/Max140Text",
					"description": "Supporting information for the Token Assurance Method."
				},
				"TokenAssuranceMethod": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Value that allows a Token Service Provider to indicate the identification and verification performed representing the binding of the payment token to the underlying PAN and cardholder."
				},
				"TokenInitiatedIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Original transaction was initiated by Token."
				}
			},
			"type": "object"
		},
		"Max11NumericText": {
			"description": "Specifies a numeric string with a maximum length of 11 digits.",
			"pattern": "^[0-9]{1,11}$",
			"type": "string"
		},
		"Max2NumericText": {
			"description": "Specifies a numeric string with a maximum length of 2 digits.",
			"pattern": "^[0-9]{1,2}$",
			"type": "string"
		},
		"Cardholder15": {
			"additionalProperties": false,
			"description": "Unprotected sensitive detailed information about the cardholder.",
			"properties": {
				"CardholderName": {
					"$ref": "#/definitions/CardholderName1",
					"description": "Contains the registered cardholder name that issuer knows to be correct."
				},
				"Identification": {
					"items": {
						"$ref": "#/definitions/Credentials1"
					},
					"description": "Identification of the cardholder.\r\n\r\nISO 8583:87 bit 56 (TLV tag 03/dataset 73)\r\nISO 8583:93 bit 112 (TLV tag 03/dataset 73)\r\nISO 8583:2003 bit 51 (TLV tag 03/dataset 73)",
					"type": "array"
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Complete address of the cardholder."
				},
				"ContactInformation": {
					"$ref": "#/definitions/Contact1",
					"description": "Contact information.\r\n\r\nISO 8583:87 bit 56 (TLV tag 02/dataset 72)\r\nISO 8583:93 bit 112 (TLV tag 02/dataset 72)\r\nISO 8583:2003 bit 51 (TLV tag 02/dataset 72)"
				},
				"DateOfBirth": {
					"$ref": "#/definitions/ISODate",
					"description": "Date of birth of the party."
				}
			},
			"type": "object"
		},
		"CardholderName1": {
			"additionalProperties": false,
			"description": "Complete name of the cardholder.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Exact replication of the name of the cardholder as it appears on the card.\r\n\r\n"
				},
				"GivenName": {
					"$ref": "#/definitions/Max35Text",
					"description": "First name of the cardholder."
				},
				"MiddleInitials": {
					"$ref": "#/definitions/Max35Text",
					"description": "Middle initials present in the name of a person."
				},
				"LastName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Family name of the cardholder."
				}
			},
			"type": "object"
		},
		"Contact1": {
			"additionalProperties": false,
			"description": "Contact person details.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the contact person."
				},
				"HomePhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Home phone number of contact."
				},
				"BusinessPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Business phone number of contact."
				},
				"MobilePhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Mobile phone number of contact."
				},
				"OtherPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Other phone number of contact."
				},
				"PersonalEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Personal email address of contact."
				},
				"BusinessEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Business email address of contact."
				},
				"OtherEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Other email address of contact."
				},
				"Language": {
					"$ref": "#/definitions/ISO2ALanguageCode",
					"description": "Language of the contact person."
				}
			},
			"type": "object"
		},
		"ISO2ALanguageCode": {
			"description": "Identification of the language name according to the ISO 639-1 codes. The type is validated by the list of values coded with two alphabetic characters, defined in the standard.",
			"pattern": "^[a-z]{2,2}$",			
			"type": "string"
		},
		"Context1": {
			"additionalProperties": false,
			"description": "Context in which the card payment transaction is performed.",
			"properties": {
				"PointOfServiceContext": {
					"$ref": "#/definitions/PointOfServiceContext1",
					"description": "Contains point of interaction information specific to a given transaction that may change from transaction to transaction."
				},
				"TransactionContext": {
					"$ref": "#/definitions/TransactionContext1",
					"description": "Context of the card payment transaction."
				},
				"Verification": {
					"items": {
						"$ref": "#/definitions/Verification1"
					},
					"description": "Contain validation result and/or data to be validated.",
					"type": "array"
				},
				"RiskContext": {
					"items": {
						"$ref": "#/definitions/RiskContext1"
					},
					"description": "Context of risk associated with the transaction.",
					"type": "array"
				},
				"SaleContext": {
					"$ref": "#/definitions/SaleContext7",
					"description": "Context of the sale associated with the card payment transaction."
				}
			},
			"required": ["PointOfServiceContext","TransactionContext"],
			"type": "object"
		},
		"PointOfServiceContext1": {
			"additionalProperties": false,
			"description": "Context of the transaction at the point of service.",
			"properties": {
				"CardPresent": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the transaction has been initiated by a card physically present or not.\r\n\r\nTrue: Card physically present during the transaction\r\nFalse: Card physically absent during the transaction.\r\n\r\nISO 8583:87 bit 25, ISO 8583:93 bit 22-6."
				},
				"CardholderPresent": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the transaction has been initiated in presence of the cardholder or not.\r\n\r\nTrue: Cardholder present during the transaction\r\nFalse: Cardholder absent during the transaction.\r\n\r\nISO 8583:87 bit 25, ISO 8583:93 bit 22-5"
				},
				"CardholderActivated": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the automated device was operated solely by the cardholder or not (for example, vending machine, automated fuel dispenser, ATM, kiosk, etc.).\r\n\r\nTrue: Device operated solely by the cardholder\r\nFalse: Device not operated solely by the cardholder.\r\n\r\nISO 8583:2003 bit 22-3"
				},
				"TransponderInitiated": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Transaction initiated through a transponder or not.\r\nTrue: Transaction initiated through a transponder.\r\nFalse: Transaction not initiated through a transponder."
				},
				"AttendedIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Card acceptor representative in attendance at the point of service during the transaction.\r\nWhen an acceptor’s terminal is semi-attended (for example, multiple terminals supervised by a single clerk), it will be identified as ‘attended’.\r\n\r\nTrue: Attended transaction at the terminal\r\nFalse: Non-attended transaction at the terminal\r\n\r\nISO 8583:87 bit 25, ISO 8583:93 bit 22-4, ISO 8583:2003 bit 22-3"
				},
				"UnattendedLevelCategory": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Transaction category level on an unattended terminal."
				},
				"ECommerceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the point of service is an e-commerce one or not:\r\nTrue: e-commerce \r\nFalse: non e-commerce \r\nDefault: False\r\n\r\nISO 8583:2003 bit 22-3"
				},
				"ECommerceData": {
					"items": {
						"$ref": "#/definitions/ECommerceData1"
					},
					"description": "Contains electronic commerce data. ",
					"type": "array"
				},
				"MOTOIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the context of the point of service is a MOTO one or not.\r\nTrue: MOTO \r\nFalse: non-MOTO \r\nDefault: False\r\n\r\nISO 8583:2003 bit 25\r\nISO 8583:2003 bit 22-5\r\nISO 8583:2003 bit 22-3"
				},
				"PartialApprovalSupported": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the point of service supports partial approval or not.\r\nTrue: partial approval is supported\r\nFalse: partial approval is not supported"
				},
				"DelayedAuthorisationIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether the authorisation was delayed due to an on-board initiated transaction.\r\n\r\nTrue: The authorisation was delayed\r\nFalse: The authorisation was not delayed"
				},
				"SecurityCharacteristics": {
					"items": {
						"$ref": "#/definitions/SecurityCharacteristics1Code"
					},
					"description": "Security characteristics of the communication link in the card acceptance process.\r\n\r\nISO 8583:2003 bit 22-4",
					"type": "array"
				},
				"OtherSecurityCharacteristics": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other security characteristics."
				},
				"CardDataEntryMode": {
					"$ref": "#/definitions/CardDataReading7Code",
					"description": "Entry mode of the card data for the transaction\r\n\r\nISO 8583:87 bit 22 (1-2), ISO 8583:93 bit 22-7, ISO 8583:2003 bit 22-1"
				},
				"OtherCardDataEntryMode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of card data entry mode."
				},
				"StorageLocation": {
					"$ref": "#/definitions/Max35Text",
					"description": "Storage location of payment credential (for example, Acceptor or third party wallet)."
				},
				"SpecialConditions": {
					"items": {
						"$ref": "#/definitions/SpecialConditions1"
					},
					"description": "Data used to assign specific conditions at the card acceptor location and decided by bilateral agreements.",
					"type": "array"
				}
			},
			"required": ["CardDataEntryMode"],
			"type": "object"
		},
		"Max35NumericText": {
			"description": "Specifies a numeric string with a maximum length of 35 digits.",
			"pattern": "^[0-9]{1,35}$",
			"type": "string"
		},
		"ECommerceData1": {
			"additionalProperties": false,
			"description": "Contains electronic commerce data. ",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of the ecommerce data (for example ,ECI level, downgrade reason, etc).\r\n\r\n"
				},
				"Value": {
					"$ref": "#/definitions/Max2048Text",
					"description": "Value related to a specific ecommerce type."
				}
			},
			"required": ["Type","Value"],
			"type": "object"
		},
		"SecurityCharacteristics1Code": {
			"description": "Security characteristics of the communication link.",
		
			"enum":["PRVN"	,"OPNN"	,"CMAC"	,"PMAC"	,"ETEE"	,"CENC"	,"PRAE"	,"PKIE"	,"PRAM"	,"STAM"	,"CETE"	,"CPTE"	,"METE"	,"MPTE"	,"AETE"	,"APTE"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"SpecialConditions1": {
			"additionalProperties": false,
			"description": "Data used to assign specific conditions such as liability shift or preferential interchange fees.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the special condition."
				},
				"Value": {
					"$ref": "#/definitions/Max35Text",
					"description": "Level of the condition."
				}
			},
			"type": "object"
		},
		"TransactionContext1": {
			"additionalProperties": false,
			"description": "Context of the card payment transaction.",
			"properties": {
				"MerchantCategoryCode": {
					"$ref": "#/definitions/Exact4NumericText",
					"description": "Category code related to the type of services or goods the merchant provides for the transaction.\r\n\r\nISO 8583:87 bit 18, ISO 8583:93 bit 18 & 26, ISO 8583:2003 bit 26\r\nISO 18245"
				},
				"MerchantCategorySpecificData": {
					"$ref": "#/definitions/Max35Text",
					"description": "Further details about the merchant that is used in with the merchant category code (MCC) for the particular purchase."
				},
				"CustomerConsent": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Notifies the express consent of the customer for a given service (used in DCC, funds transfers, money lending, etc.).\r\n\r\nTrue: Explicit customer consent obtained\r\nFalse: Implicit customer consent obtained"
				},
				"ICCFallbackIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates a chip data fallback.\r\nTrue: Fallback\r\nFalse: No fallback\r\nDefault: False"
				},
				"MagneticStripeFallbackIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates a magnetic stripe fallback.\r\nTrue: Fallback\r\nFalse: No fallback\r\nDefault: False"
				},
				"LatePresentmentIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates a late presentment as defined by each specific implementation.\r\nTrue: Transaction was presented late\r\nFalse: Transaction was not presented late\r\nDefault: False"
				},
				"FinalAuthorisationIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Identifies final authorisation messages for the purpose of managing open-to buy or available balance. "
				},
				"DeferredDeliveryIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates a deferred delivery as defined by each specific implementation.\r\n\r\nTrue: deferred delivery.\r\nFalse: Delivery is not identified as deffered.\r\nDefault: False."
				},
				"TransactionInitiator": {
					"$ref": "#/definitions/TransactionInitiator1Code",
					"description": "Identifies the transaction initiator."
				},
				"CardProgramme": {
					"$ref": "#/definitions/CardProgramme1",
					"description": "Card programme or brand related to the transaction."
				},
				"SettlementService": {
					"$ref": "#/definitions/SettlementService1",
					"description": "Type of settlement service for specific services requiring settlement."
				},
				"Reconciliation": {
					"$ref": "#/definitions/Reconciliation3",
					"description": "Identification of the reconciliation period between the acquirer and the issuer or their respective agents."
				},
				"CaptureDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date the transaction was completed and captured.\r\nISO 8583 bit 17"
				}
			},
			"required": ["MerchantCategoryCode"],
			"type": "object"
		},
		"TransactionInitiator1Code": {
			"description": "Identifies the transaction initiator.",
		
			"enum":["MERC"	,"CUST"	],				
			"type": "string"
		},
		"CardProgramme1": {
			"additionalProperties": false,
			"description": "Card programme or brand related to the transaction.",
			"properties": {
				"CardProgrammeProposed": {
					"items": {
						"$ref": "#/definitions/CardProgrammeMode2"
					},
					"description": "Card programme or brand proposed for the transaction.",
					"type": "array"
				},
				"CardProgrammeApplied": {
					"$ref": "#/definitions/CardProgrammeMode1",
					"description": "Card programme or brand actually applied to the transaction.\r\n\r\nISO 8583:87 bit 24"
				}
			},
			"type": "object"
		},
		"CardProgrammeMode2": {
			"additionalProperties": false,
			"description": "Programme or brand of the card for the transaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of card programme or brand."
				},
				"Identification": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/Max35Text"
					},
					"description": "Identification of the card programme or brand.",
					"type": "array"
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"CardProgrammeMode1": {
			"additionalProperties": false,
			"description": "Programme or brand of the card for the transaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of card programme or brand."
				},
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the card programme or brand."
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"SettlementService1": {
			"additionalProperties": false,
			"description": "Attributes of a settlement service.",
			"properties": {
				"SettlementServiceProposed": {
					"$ref": "#/definitions/SettlementServiceMode1",
					"description": "Type of settlement service proposed."
				},
				"SettlementServiceApplied": {
					"$ref": "#/definitions/SettlementServiceMode1",
					"description": "Settlement service actually applied to the transaction."
				},
				"SettlementServiceDates": {
					"$ref": "#/definitions/SettlementServiceDate1",
					"description": "Dates related to the settlement service related to the transaction."
				},
				"SettlementReportingEntity": {
					"$ref": "#/definitions/SettlementReportingEntity1",
					"description": "Entity in charge of the settlement reporting service."
				}
			},
			"type": "object"
		},
		"SettlementServiceMode1": {
			"additionalProperties": false,
			"description": "Settlement service for specific settlement types of requirements.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of settlement service."
				},
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of settlement service."
				},
				"ShortName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Short name of the Settlement Service."
				},
				"SettlementPriority": {
					"$ref": "#/definitions/Priority3Code",
					"description": "Priority to process a settlement."
				}
			},
			"type": "object"
		},
		"Priority3Code": {
			"description": "Specifies the priority level of an event.",
		
			"enum":["URGT"	,"HIGH"	,"NORM"	],				
			"type": "string"
		},
		"SettlementServiceDate1": {
			"additionalProperties": false,
			"description": "Date related to the settlement of the transaction.",
			"properties": {
				"RequestedSettlementDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date requested for settlement."
				},
				"SettlementDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Actual date of settlement.\r\nISO 8583 bit 15."
				},
				"SettlementTime": {
					"$ref": "#/definitions/ISOTime",
					"description": "Actual time of settlement."
				},
				"SettlementPeriod": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies the settlement period, cycle or group. May contain settlement frequency or the identification of specific settlement period. For example, daily, monthly or settlementperiod123acd."
				},
				"SettlementCutOffTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Identifies the effective end time of the settlement date and/or period. \r\n"
				}
			},
			"type": "object"
		},
		"ISOTime" : {
			"description": "A particular point in the progression of time in a calendar day expressed in either UTC time format (hh:mm:ss.sssZ), local time with UTC offset format (hh:mm:ss.sss+/-hh:mm), or local time format (hh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed.",
				
			"type":"string"
		},
		"SettlementReportingEntity1": {
			"additionalProperties": false,
			"description": "Entity in charge of the settlement reporting service.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies the type of settlement reporting entity"
				},
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the settlement reporting entity."
				}
			},
			"type": "object"
		},
		"Reconciliation3": {
			"additionalProperties": false,
			"description": "Identification of the reconciliation period between an acquirer and an issuer or their respective agents.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the reconciliation."
				},
				"Date": {
					"$ref": "#/definitions/ISODate",
					"description": "Date of the reconciliation.\r\nISO 8583:93/2003 bit 28"
				},
				"CheckpointReference": {
					"$ref": "#/definitions/Max35Text",
					"description": "A value used to allow a period within a reconciliation date.  Refer to ISO8583:2003 Field 29"
				}
			},
			"type": "object"
		},
		"Verification1": {
			"additionalProperties": false,
			"description": "Method and data intended to be verified as well as the related results.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/AuthenticationMethod11Code",
					"description": "Type of authentication or verification."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of authentication or verification."
				},
				"SubType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of authentication for a given method (for example, three domain authentication, scheme proprietary solution, type of cryptogram, etc.)."
				},
				"VerificationInformation": {
					"items": {
						"$ref": "#/definitions/VerificationInformation1"
					},
					"description": "Contains verification or authentication data.",
					"type": "array"
				},
				"VerificationResult": {
					"items": {
						"$ref": "#/definitions/VerificationResult1"
					},
					"description": "Result of verifications performed prior or after the transaction.\r\n\r\nISO 8583:93 bit 39\r\nISO 8583:2003 bit 39 & 49-72",
					"type": "array"
				}
			},
			"type": "object"
		},
		"AuthenticationMethod11Code": {
			"description": "Type of authentication method.",
		
			"enum":["NPIN"	,"FPIN"	,"CPSG"	,"PPSG"	,"MANU"	,"SCRT"	,"SCNL"	,"PSWD"	,"ADDB"	,"BIOM"	,"CDHI"	,"CRYP"	,"CSCV"	,"PSVE"	,"CSEC"	,"ADDS"	,"TOKN"	,"TOKP"	,"TOKA"	,"MOBL"	,"ADVF"	,"ARNB"	,"ARQC"	,"BTHD"	,"CHDN"	,"CUID"	,"DRVI"	,"DRLN"	,"EMAL"	,"EMIN"	,"EMRN"	,"IDCN"	,"OTPW"	,"OCHI"	,"PASN"	,"PCDV"	,"SHAF"	,"SHAT"	,"CHSA"	,"NVSC"	,"OTHN"	,"OTHP"	,"PLOB"	,"SSNB"	,"TXIN"	,"APKI"	,"ARPC"	,"ATCC"	,"FBIG"	,"FBIO"	,"OLDA"	,"OLDS"	,"OFPE"	,"FCPN"	,"NBIG"	,"PHOM"	,"PWOR"	,"PKIS"	,"QWAC"	,"THDS"	],				
			"type": "string"
		},
		"VerificationInformation1": {
			"additionalProperties": false,
			"description": "Contains verification information.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of the verification or authentication.\r\n\r\nISO 8583:2003 bit 34"
				},
				"Value": {
					"$ref": "#/definitions/VerificationValue1Choice",
					"description": "Value of the data to be verified or authenticated."
				},
				"Reason": {
					"items": {
						"$ref": "#/definitions/Max35Text"
					},
					"description": "Reason to perform the verification.",
					"type": "array"
				},
				"DateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time when the verification was performed."
				},
				"ValidityEndDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Contains end date of the verification that has been performed. "
				},
				"ValidityEndTime": {
					"$ref": "#/definitions/ISOTime",
					"description": "Contains end time of the verification that has been performed. "
				}
			},
			"type": "object"
		},
		"VerificationValue1Choice": {
			"description": "Contains the data to be authenticated or verified.",
			"oneOf":[
				{
					"type": "object",
					"additionalProperties": false,
					"required":["TextValue"],
					"properties":{
				"TextValue": {
					"$ref": "#/definitions/Max2048Text",
					"description": "Value of the data expressed in text form."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["BinaryValue"],
					"properties":{
				"BinaryValue": {
					"$ref": "#/definitions/Max5000Binary",
					"description": "Value of the data expressed in BASE-64 encoded binary form."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["HexadecimalBinaryValue"],
					"properties":{
				"HexadecimalBinaryValue": {
					"$ref": "#/definitions/Max9999HexBinaryText",
					"description": "Value of the data expressed in hexadecimal encoded binary form."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["PINData"],
					"properties":{
				"PINData": {
					"$ref": "#/definitions/PINData1",
					"description": "Personal Identification Number data.\r\nISO 13492 and ISO 9564-1\r\n\r\nISO 8583:87 bit 52 & bit 53 or bit 110\r\nISO 8583:93 bit 52 & bit 53 or bit 111\r\nISO 8583:2003 bit 52 & bit 53 or bit 50"
				}}
				}
			],
			"type": "object"
		},
		"Max9999HexBinaryText": {
			"description": "Specifies a character string with a maximum length of 9999 binary bytes (19998 hexadecimal text characters).\r\n\r\nUsed only for hex binary data only, supports only characters A-F and 0-9.",
			"pattern": "^([0-9A-F][0-9A-F]){1,9999}$",
			"type": "string"
		},
		"PINData1": {
			"additionalProperties": false,
			"description": "Attributes of a cardholder PIN.",
			"properties": {
				"Control": {
					"$ref": "#/definitions/Exact1HexBinaryText",
					"description": "Identifies the key management scheme and associated control field format.\r\nISO 13492\r\nBinary, length of 1"
				},
				"KeySetIdentifier": {
					"$ref": "#/definitions/Max8NumericText",
					"description": "key-set identifier is a number that uniquely identifies a group of related keys that are all different but have certain characteristics in common.\r\nISO 13492\r\n\r\nlengths of 6 or 8 "
				},
				"DerivedInformation": {
					"$ref": "#/definitions/Max32HexBinaryText",
					"description": "Contains Derived Info or Device ID and Transaction Counter.\r\nISO 13492\r\n\r\nBinary, lengths of 5, 8, 16 or 32 \r\n "
				},
				"Algorithm": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Used to select the encryption algorithm to encipher the keys contained in the associated key management data element. \r\nISO 13492\r\n"
				},
				"KeyLength": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Specifies the length of the keys being transported, not the encrypting key.\r\nISO 13492"
				},
				"KeyProtection": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Mechanism used to provide key confidentiality and integrity. \r\nISO 13492\r\n"
				},
				"KeyIndex": {
					"$ref": "#/definitions/Max5NumericText",
					"description": "Identifies a unique key set when multiple keys with the same key set identifier are used (for example, key rotation).\r\n\r\nISO 13492\r\n\r\nLength of 2 or 5"
				},
				"PINBlockFormat": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "As defined in ISO 9564-1. "
				},
				"EncryptedPINBlock": {
					"$ref": "#/definitions/Max16HexBinaryText",
					"description": "As defined in ISO 9564-1. \r\n\r\nBinary, length of 8 or 16\r\n"
				}
			},
			"required": ["PINBlockFormat","EncryptedPINBlock"],
			"type": "object"
		},
		"Exact1HexBinaryText": {
			"description": "Specifies a character string with an exact length of 1 binary bytes (2 hexadecimal text characters).\r\n\r\nUsed only for hex binary data only, supports only characters A-F and 0-9.",
			"pattern": "^([0-9A-F][0-9A-F]){1}$",
			"type": "string"
		},
		"Max8NumericText": {
			"description": "Specifies a numeric string with a maximum length of 8 digits.",
			"pattern": "^[0-9]{1,8}$",
			"type": "string"
		},
		"Max32HexBinaryText": {
			"description": "Specifies a character string with a maximum length of 32 binary bytes (64 hexadecimal text characters).\r\n\r\nUsed only for hex binary data only, supports only characters A-F and 0-9.",
			"pattern": "^([0-9A-F][0-9A-F]){1,32}$",
			"type": "string"
		},
		"Max4NumericText": {
			"description": "Specifies a numeric string with a maximum length of 4 digits.",
			"pattern": "^[0-9]{1,4}$",
			"type": "string"
		},
		"Max5NumericText": {
			"description": "Specifies a numeric string with a maximum length of 5 digits.",
			"pattern": "^[0-9]{1,5}$",
			"type": "string"
		},
		"Max16HexBinaryText": {
			"description": "Specifies a character string with a maximum length of 16 binary bytes (32 hexadecimal text characters).\r\n\r\nUsed only for hex binary data only, supports only characters A-F and 0-9.",
			"pattern": "^([0-9A-F][0-9A-F]){1,16}$",
			"type": "string"
		},
		"VerificationResult1": {
			"additionalProperties": false,
			"description": "Result of verifications performed prior or after the transaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of the verification or authentication."
				},
				"Entity": {
					"$ref": "#/definitions/VerificationEntity1Code",
					"description": "Entity who actually performed the verification.\r\n\r\nISO 8583:93 bit 22-9"
				},
				"OtherEntity": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other national or private entity in charge of the verification."
				},
				"Result": {
					"$ref": "#/definitions/Verification2Code",
					"description": "Result of the verification.\r\nISO 8583 : 2003 bit 49 dataset 72"
				},
				"OtherResult": {
					"$ref": "#/definitions/Max500Text",
					"description": "Additional result of the verification, for instance for electronic commerce."
				},
				"ResultDetails": {
					"items": {
						"$ref": "#/definitions/AdditionalData1"
					},
					"description": "Details of the result.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"VerificationEntity1Code": {
			"description": "Type of verification entity.",
		
			"enum":["ACQR"	,"AGNT"	,"ISSR"	,"MERC"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"Verification2Code": {
			"description": "Result of the verification process.",
		
			"enum":["ERRR"	,"SUCC"	,"PART"	,"NOVF"	,"MISS"	,"FAIL"	,"FUTA"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"Max500Text": {
			"description": "Specifies a character string with a maximum length of 500 characters.",
			"minLength": 1,
			"maxLength": 500,
			"type": "string"
		},
		"RiskContext1": {
			"additionalProperties": false,
			"description": "Context of the risk associated with the transaction.",
			"properties": {
				"RiskInputData": {
					"items": {
						"$ref": "#/definitions/RiskInputData1"
					},
					"description": "Input data to be considered in a risk assessment.",
					"type": "array"
				},
				"RiskAssessment": {
					"items": {
						"$ref": "#/definitions/RiskAssessment1"
					},
					"description": "Indicates to the card issuer the level of risk associated with the transaction.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"RiskInputData1": {
			"additionalProperties": false,
			"description": "Additional data to be considered for risk assessment.",
			"properties": {
				"Entity": {
					"$ref": "#/definitions/RiskAssessmentDataEntityProvider1",
					"description": "Entity providing the information required for a risk assessment."
				},
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies the type of risk assessment associated with the input data in the message."
				},
				"Value": {
					"$ref": "#/definitions/Max10KText",
					"description": "Value of input data for risk assessment."
				}
			},
			"required": ["Type","Value"],
			"type": "object"
		},
		"RiskAssessmentDataEntityProvider1": {
			"additionalProperties": false,
			"description": "Entity providing data for risk assessment",
			"properties": {
				"Type": {
					"$ref": "#/definitions/PartyType28Code",
					"description": "Type of entity providing data for risk assessment."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of entity providing risk assessment data."
				}
			},
			"type": "object"
		},
		"PartyType28Code": {
			"description": "Type of entity involved in a card payment transaction.",
		
			"enum":["ISUR"	,"ACCP"	,"ACQR"	,"AGNT"	,"OTHN"	,"OTHP"	,"WLPR"	],				
			"type": "string"
		},
		"Max10KText": {
			"description": "Specifies a character string with a maximum length of 10 000 characters.",
			"minLength": 1,
			"maxLength": 10000,
			"type": "string"
		},
		"RiskAssessment1": {
			"additionalProperties": false,
			"description": "Indicates to the card issuer the level of risk associated with the transaction.",
			"properties": {
				"RiskAssessmentEntity": {
					"$ref": "#/definitions/PartyIdentification200",
					"description": "Entity providing an intermediate result of a risk assessment process."
				},
				"RiskAssessmentType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of risk assessment."
				},
				"Reason": {
					"items": {
						"$ref": "#/definitions/Max35Text"
					},
					"description": "Reason for indicating a certain level of risk for the transaction.",
					"type": "array"
				},
				"Result": {
					"$ref": "#/definitions/Max35Text",
					"description": "Risk assessment result."
				},
				"AdditionalRiskData": {
					"items": {
						"$ref": "#/definitions/AdditionalRiskData1"
					},
					"description": "Additional risk data associated with the transaction.",
					"type": "array"
				},
				"RecommendedAction": {
					"items": {
						"$ref": "#/definitions/ActionType8Code"
					},
					"description": "Recommended action based on risk assessment.",
					"type": "array"
				},
				"OtherRecommendedAction": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other recommended action based on risk assessment defined at national or private level."
				},
				"RecommendedActionDetails": {
					"$ref": "#/definitions/Max256Text",
					"description": "Additional details of recommended action or other recommended action. "
				}
			},
			"type": "object"
		},
		"PartyIdentification200": {
			"additionalProperties": false,
			"description": "Identification of a party.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the party."
				},
				"Type": {
					"$ref": "#/definitions/PartyType28Code",
					"description": "Type of entity."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other party type defined at national or private level."
				},
				"Assigner": {
					"$ref": "#/definitions/PartyType18Code",
					"description": "Entity in charge of assigning an identification to a party."
				},
				"Country": {
					"$ref": "#/definitions/ISO3NumericCountryCode",
					"description": "Country of the party."
				},
				"ShortName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Short name of the party."
				}
			},
			"type": "object"
		},
		"AdditionalRiskData1": {
			"additionalProperties": false,
			"description": "Additional data related to risk assessment of the transaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the additional risk data type related to the transaction."
				},
				"Value": {
					"$ref": "#/definitions/Max10KText",
					"description": "Data value of the additional risk data associated with the transaction."
				}
			},
			"required": ["Type","Value"],
			"type": "object"
		},
		"ActionType8Code": {
			"description": "Recommended action for the card issuer.",
		
			"enum":["RFRL"	,"CPTR"	,"RQID"	,"DCLN"	,"NDCL"	,"BLCK"	,"APPV"	,"OTHN"	,"OTHP"	,"STUA"	],				
			"type": "string"
		},
		"SaleContext7": {
			"additionalProperties": false,
			"description": "Context of the sale involved in a card transaction.",
			"properties": {
				"SaleIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the sale terminal (electronic cash register or point of sale terminal) or the sale system."
				},
				"SaleReferenceIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Global reference of the sale transaction for the sale system."
				},
				"SaleReferenceNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identify a sale transaction assigned by the sale system."
				},
				"GoodsAndServicesType": {
					"$ref": "#/definitions/GoodsAndServices1Code",
					"description": "Type of goods and/or services."
				},
				"GoodAndServicesSubType": {
					"$ref": "#/definitions/GoodsAndServicesSubType1Code",
					"description": "Sub type of goods and/or services."
				},
				"GoodAndServicesOtherSubType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other goods and services sub type applied to the transaction."
				},
				"SplitPaymentIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Also referred to as split tender. Indicates whether the payment transaction is a partial payment of the sale transaction.\r\nTrue: Partial payment of a sale transaction\r\nFalse: Not a partial payment of a sale transaction."
				},
				"ReceiptRequestIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether a receipt from the goods or services provider was requested.\r\nTrue: Receipt requested\r\nFalse: Receipt not requested."
				},
				"ReceiptType": {
					"items": {
						"$ref": "#/definitions/ReceiptType1Code"
					},
					"description": "Type of receipt requested or communication channel used.",
					"type": "array"
				},
				"ReceiptDestination": {
					"$ref": "#/definitions/Max70Text",
					"description": "Destination of the receipt (for example, e-mail address, SMS number, etc.)."
				}
			},
			"type": "object"
		},
		"GoodsAndServices1Code": {
			"description": "Type of goods and services purchased.",
		
			"enum":["PHYS"	,"ELEC"	,"ELPH"	],				
			"type": "string"
		},
		"GoodsAndServicesSubType1Code": {
			"description": "Sub type of goods and services purchased.",
		
			"enum":["SECS"	,"FORX"	,"CRCU"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"ReceiptType1Code": {
			"description": "Way of transmitting receipt information to recipient.",
		
			"enum":["PAPR"	,"SMSM"	,"EMAL"	,"URID"	,"OTHR"	],				
			"type": "string"
		},
		"Transaction77": {
			"additionalProperties": false,
			"description": "Contains transaction details.",
			"properties": {
				"TransactionType": {
					"$ref": "#/definitions/Exact2AlphaNumericText",
					"description": "Type of transaction associated with the main service.\r\n\r\nISO 8583:87/93/2003 bit 3"
				},
				"TransactionSubType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides further granularity of purpose of TransactionType"
				},
				"AdditionalService": {
					"items": {
						"$ref": "#/definitions/AdditionalService1"
					},
					"description": "Additional functions or services to be performed in conjunction with the transaction.",
					"type": "array"
				},
				"TransactionAttribute": {
					"$ref": "#/definitions/TransactionAttribute1Code",
					"description": "Attribute of the transaction.\r\n\r\nISO 8583:87 bit 25\r\nISO 8583:2003 bit 22-3 & bit 24"
				},
				"OtherTransactionAttribute": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other transaction attribute defined at national or private level."
				},
				"MessageReason": {
					"items": {
						"$ref": "#/definitions/Exact4NumericText"
					},
					"description": "Reason to send the message.\r\nISO 8583:93/2003 bit 25\r\n\r\nThe ISO 8583 maintenance agency (MA) manages this code list.",
					"type": "array"
				},
				"AlternateMessageReason": {
					"items": {
						"$ref": "#/definitions/Max35Text"
					},
					"description": "Supports message reason codes that are not defined in external code list. ",
					"type": "array"
				},
				"PreAuthorisationTimeLimit": {
					"$ref": "#/definitions/Max6NumericText",
					"description": "Contains the period (expressed in minutes) within which a merchant is expected to complete the transaction.\r\nISO8583:1993 and ISO 8583:2003 Bit 57"
				},
				"AssociatedDataIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates that additional data will be provided in a separate addendum message."
				},
				"AssociatedDataReference": {
					"$ref": "#/definitions/Max70Text",
					"description": "Reference to additional transaction details to be conveyed separately from this message."
				},
				"AssociatedDataDestination": {
					"$ref": "#/definitions/Max35Text",
					"description": "Destination value to be used in the subsequent addendum message."
				},
				"SpecialProgrammeQualification": {
					"items": {
						"$ref": "#/definitions/SpecialProgrammeQualification1"
					},
					"description": "Data to qualify for incentive or other related programmes.",
					"type": "array"
				},
				"TransactionIdentification": {
					"$ref": "#/definitions/TransactionIdentification8",
					"description": "Identification of the transaction."
				},
				"DisputeData": {
					"items": {
						"$ref": "#/definitions/DisputeData1"
					},
					"description": "Information about the dispute.",
					"type": "array"
				},
				"TransactionAmounts": {
					"$ref": "#/definitions/TransactionAmounts1",
					"description": "Amounts of the card transaction."
				},
				"AdditionalAmounts": {
					"items": {
						"$ref": "#/definitions/AdditionalAmounts1"
					},
					"description": "Amounts that are not part of the transaction amount and not included in reconciliation.\r\n\r\nISO 8583 bit 54",
					"type": "array"
				},
				"AdditionalFees": {
					"items": {
						"$ref": "#/definitions/AdditionalFee1"
					},
					"description": "Fees not included in the transaction amount.",
					"type": "array"
				},
				"OriginalAdditionalFees": {
					"items": {
						"$ref": "#/definitions/AdditionalFee1"
					},
					"description": "Fees not included in the original transaction amount.\r\n\r\nISO 8583:93/2003 bit 66\r\n\r\n",
					"type": "array"
				},
				"DepositDetails": {
					"items": {
						"$ref": "#/definitions/DepositDetails1"
					},
					"description": "Contains ATM deposit details.",
					"type": "array"
				},
				"FundsServices": {
					"$ref": "#/definitions/FundingService1",
					"description": "Financial services related to the account."
				},
				"AccountFrom": {
					"$ref": "#/definitions/AccountDetails2",
					"description": "Identifies a customer account or a relationship to its account affected for debit, inquiries and the source of funding for transfers."
				},
				"AccountTo": {
					"$ref": "#/definitions/AccountDetails2",
					"description": "Identifies a customer account or a relationship to its account affected for credits, inquiries and the destination account for funds transfers."
				},
				"TransactionDescription": {
					"$ref": "#/definitions/Max1000Text",
					"description": "Transaction data related to programmes and services, content and format based on bilateral agreements.\r\n\r\nISO 8583:87/93 bit 104\r\nISO 8583:2003 bit 104-71"
				},
				"AdditionalData": {
					"items": {
						"$ref": "#/definitions/AdditionalData1"
					},
					"description": "Contains additional data.",
					"type": "array"
				}
			},
			"required": ["TransactionType","TransactionIdentification","TransactionAmounts"],
			"type": "object"
		},
		"Exact2AlphaNumericText": {
			"description": "Specifies an alphanumeric string with an exact length of 2 characters.",
			"pattern": "^[a-zA-Z0-9]{2}$",
			"type": "string"
		},
		"AdditionalService1": {
			"additionalProperties": false,
			"description": "Additional functions or services to be performed in conjunction with the transaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/AdditionalServiceType1Code",
					"description": "Type of additional service applied to the transaction."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other additional service applied to the transaction."
				}
			},
			"required": ["Type"],
			"type": "object"
		},
		"AdditionalServiceType1Code": {
			"description": "Type of additional service.",
		
			"enum":["CACT"	,"CSHB"	,"DCCV"	,"INTP"	,"INTT"	,"LOYT"	,"OTHN"	,"OTHP"	,"PRST"	],				
			"type": "string"
		},
		"TransactionAttribute1Code": {
			"description": "Attribute of the transaction.",
		
			"enum":["RCPT"	,"INST"	,"AGGR"	,"DBRP"	,"DFRD"	,"OTHN"	,"CADB"	,"OTHP"	,"TPUP"	,"PPYT"	,"PAUT"	,"PACP"	,"CPLT"	,"INCR"	,"FRCP"	,"SUBR"	],				
			"type": "string"
		},
		"Max6NumericText": {
			"description": "Specifies a numeric string with a maximum length of 6 digits.",
			"pattern": "^[0-9]{1,6}$",
			"type": "string"
		},
		"SpecialProgrammeQualification1": {
			"additionalProperties": false,
			"description": "Data to qualify for incentive or other related programmes.",
			"properties": {
				"Programme": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name of special programme."
				},
				"Detail": {
					"items": {
						"$ref": "#/definitions/SpecialProgrammeDetails1"
					},
					"description": "Name and value associated with a special programme.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"SpecialProgrammeDetails1": {
			"additionalProperties": false,
			"description": "Set of values assigned to a special programme.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name of the special programme detail."
				},
				"Value": {
					"$ref": "#/definitions/Max35Text",
					"description": "Special programme detail value."
				}
			},
			"type": "object"
		},
		"TransactionIdentification8": {
			"additionalProperties": false,
			"description": "Identification of the transaction",
			"properties": {
				"LocalDateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Local date and time the transaction takes place at the card acceptor location.\r\n\r\nISO 8583:87 bit 12 and 13, ISO 8583:93/2003 bit 12"
				},
				"TimeZone": {
					"$ref": "#/definitions/Max70Text",
					"description": "Time zone name (for example, as defined by IANA - Internet Assigned Numbers Authority - in the time zone database)."
				},
				"TransactionReference": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the transaction by the card acceptor. It may appear on the receipt of the cardholder. It remains unchanged throughout the lifetime of the transaction."
				},
				"TransmissionDateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time expressed in UTC of the message as sent by the initiator.\r\n\r\nISO 8583 bit 7"
				},
				"SystemTraceAuditNumber": {
					"$ref": "#/definitions/Max12NumericText",
					"description": "Number assigned by a transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages within a two-message exchange (for example, request/repeat and response).\r\n\r\nISO 8583 bit 11."
				},
				"RetrievalReferenceNumber": {
					"$ref": "#/definitions/Exact12Text",
					"description": "Reference supplied by the system retaining the original source information and used to assist in locating that information or a copy thereof.\r\nISO 8583 bit 37"
				},
				"LifeCycleSupport": {
					"$ref": "#/definitions/LifeCycleSupport1Code",
					"description": "Indicate the point in the transaction lifecycle at which the lifecycle identifier was assigned."
				},
				"LifeCycleTraceIdentificationData": {
					"$ref": "#/definitions/TransactionLifeCycleIdentification1",
					"description": "Unique global identification structure used to match transactions throughout their lifecycle.\r\nISO 8583:2003 bit 21"
				},
				"LifeCycleTraceIdentificationMissing": {
					"$ref": "#/definitions/Max70Text",
					"description": "Reason for not providing a lifecycle trace identification information."
				},
				"AcquirerReferenceData": {
					"$ref": "#/definitions/Max140Text",
					"description": "Data supplied by an acquirer in an authorisation or financial request, advice or notification that may be required to be provided in a subsequent transaction.\r\n\r\nISO 8583:93 bit 31"
				},
				"AcquirerReferenceNumber": {
					"$ref": "#/definitions/Max23NumericText",
					"description": "Data supplied by an acquirer to assist in identifying a transaction (for example, for researching retrievals and chargebacks).\r\n\r\nISO 8583:2003 bit 31"
				},
				"CardIssuerReferenceData": {
					"$ref": "#/definitions/Max1000Text",
					"description": "Data supplied by a card issuer in an authorisation response, financial response message or in a chargeback transaction that the acquirer may be required to provide in subsequent transactions.\r\nISO 8583:1993 and ISO 8583:2003 bit 95."
				},
				"OriginalDataElements": {
					"$ref": "#/definitions/OriginalDataElements1",
					"description": "Data elements contained in the original message.\r\nISO 8583:1987 bit 90 and ISO 8583:1993/2003 bit 56"
				}
			},
			"required": ["LocalDateTime","SystemTraceAuditNumber","RetrievalReferenceNumber"],
			"type": "object"
		},
		"Max12NumericText": {
			"description": "Specifies a numeric string with a maximum length of 12 digits",
			"pattern": "^[0-9]{1,12}$",
			"type": "string"
		},
		"Exact12Text": {
			"description": "Specifies a character string with an exact length of 10 characters.",
			"minLength": 12,
			"maxLength": 12,
			"type": "string"
		},
		"LifeCycleSupport1Code": {
			"description": "Indicates the point in the transaction lifecycle at which the lifecycle identifier was assigned.",
		
			"enum":["AUTH"	,"FINC"	],				
			"type": "string"
		},
		"TransactionLifeCycleIdentification1": {
			"additionalProperties": false,
			"description": "Unique global identification structure used to match transactions throughout their lifecycle (for example, authorisation to financial, financial to chargebacks, etc.). \r\nIt shall contain the same value in all messages throughout a transaction's lifecycle.\r\nISO 8583:2003 bit 21",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Exact15Text",
					"description": "Unique transaction identifier.\r\nISO 8583:2003 bit 21-2"
				},
				"AuthorisationSequenceNumber": {
					"$ref": "#/definitions/Exact2NumericText",
					"description": "Contains authorisation sequence number."
				},
				"PresentmentSequenceNumber": {
					"$ref": "#/definitions/Exact2NumericText",
					"description": "Number used with trace identifier to uniquely identify where a single authorisation was obtained covering a number of financial presentments.\r\nISO 8583:2003 bit 21-3"
				},
				"PresentmentSequenceCount": {
					"$ref": "#/definitions/Exact2NumericText",
					"description": "Expected maximum number of presentments for this transaction."
				},
				"AuthenticationToken": {
					"$ref": "#/definitions/Max35Text",
					"description": "Code calculated using an algorithm against key transaction data elements that are common to both authorisation and financial messages.\r\nISO 8583:2003 bit 21-4"
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"Exact15Text": {
			"description": "Specifies a character string with an exact length of 15 characters.",
			"minLength": 15,
			"maxLength": 15,
			"type": "string"
		},
		"Exact2NumericText": {
			"description": "Specifies a numeric string with an exact length of 2 digits.",
			"pattern": "^[0-9]{2}$",
			"type": "string"
		},
		"Max23NumericText": {
			"description": "Specifies a numeric string with a maximum length of 23 digits",
			"pattern": "^[0-9]{1,23}$",
			"type": "string"
		},
		"Max1000Text": {
			"description": "Specifies a character string with a maximum length of 1000 characters.",
			"minLength": 1,
			"maxLength": 1000,
			"type": "string"
		},
		"OriginalDataElements1": {
			"additionalProperties": false,
			"description": "Data elements contained in the original message.\r\nISO 8583:1987 bit 90 and ISO 8583 1993/2003 bit 56.",
			"properties": {
				"MessageClass": {
					"$ref": "#/definitions/MessageClass1Code",
					"description": "Message class of the original message."
				},
				"TransactionType": {
					"$ref": "#/definitions/Exact2AlphaNumericText",
					"description": "Type of transaction associated with the main service.\r\n\r\nISO 8583:87/93/2003 bit 3"
				},
				"AcquirerIdentification": {
					"$ref": "#/definitions/Max11NumericText",
					"description": "Code identifying the acquirer of the original message.\r\nISO 8583 bit 32"
				},
				"SenderIdentification": {
					"$ref": "#/definitions/Max11NumericText",
					"description": "Code identifying the sender of the original message.\r\nISO 8583 bit 33."
				},
				"LocalDateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Local date and time the transaction takes place at the acceptor location.\r\nISO 8583 bit 12."
				},
				"TimeZone": {
					"$ref": "#/definitions/Max70Text",
					"description": "Time zone name (for example, as defined by IANA - Internet Assigned Numbers Authority) in the time zone data base."
				},
				"TransactionReference": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the transaction by the card acceptor. It may appear on the receipt of the cardholder. It remains unchanged throughout the lifetime of the transaction."
				},
				"TransmissionDateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time expressed in UTC of the message as sent by the initiator.\r\nISO 8583 bit 7"
				},
				"SystemTraceAuditNumber": {
					"$ref": "#/definitions/Max12NumericText",
					"description": "Transaction reference of the original message.\r\n ISO 8583 bit 11."
				},
				"RetrievalReferenceNumber": {
					"$ref": "#/definitions/Exact12Text",
					"description": "Reference supplied by the system retaining the original source information and used to assist in locating that information or a copy thereof.\r\nISO 8583 bit 37"
				},
				"LifeCycleSupport": {
					"$ref": "#/definitions/LifeCycleSupport1Code",
					"description": "Indicate the point in the transaction lifecycle at which the lifecycle identifier was assigned."
				},
				"LifeCycleTraceIdentificationData": {
					"$ref": "#/definitions/TransactionLifeCycleIdentification1",
					"description": "Unique global identification structure used to match transactions throughout their lifecycle.\r\nISO 8583:2003 bit 21"
				},
				"LifeCycleTraceIdentificationMissing": {
					"$ref": "#/definitions/Max70Text",
					"description": "Reason for not providing a lifecycle trace identification information."
				},
				"AcquirerReferenceData": {
					"$ref": "#/definitions/Max140Text",
					"description": "Data supplied by an acquirer in an authorisation or financial request, advice or notification that may be required to be provided in a subsequent transaction."
				},
				"AcquirerReferenceNumber": {
					"$ref": "#/definitions/Max23NumericText",
					"description": "Data supplied by an acquirer to assist in identifying a transaction (for example, for researching retrievals and chargebacks).\r\nISO 8583:2003 bit 31"
				},
				"CardIssuerReferenceData": {
					"$ref": "#/definitions/Max1000Text",
					"description": "Data supplied by a card issuer in an authorisation response, financial response message or in a chargeback transaction that the acquirer may be required to provide in subsequent transactions.\r\nISO 8583:1993 and ISO 8583:2003 bit 95."
				}
			},
			"required": ["RetrievalReferenceNumber"],
			"type": "object"
		},
		"MessageClass1Code": {
			"description": "Identifies a class of messages with the same high level function.",
		
			"enum":["ADDE"	,"AMDT"	,"AUTH"	,"CMGT"	,"CBCK"	,"FEEC"	,"FINL"	,"INQY"	,"VERI"	],				
			"type": "string"
		},
		"DisputeData1": {
			"additionalProperties": false,
			"description": "Data to be present in a dispute.",
			"properties": {
				"PresentmentCycle": {
					"$ref": "#/definitions/Exact1NumericText",
					"description": "Indicates the cycle of presentment or of the chargeback  (1= first cycle for chargeback, 2= second cycle of presentment or chargeback, etc.)."
				},
				"DisputeCondition": {
					"$ref": "#/definitions/Max35Text",
					"description": "Condition of the dispute."
				},
				"DisputeStatus": {
					"$ref": "#/definitions/Max35Text",
					"description": "Status of dispute."
				},
				"PartialDispute": {
					"$ref": "#/definitions/YesNoIndicator",
					"description": "Partial dispute indicator."
				},
				"DisputeReference": {
					"items": {
						"$ref": "#/definitions/DisputeReference1"
					},
					"description": "Reference for the dispute.",
					"type": "array"
				},
				"DocumentationStatus": {
					"$ref": "#/definitions/Max35Text",
					"description": "Status of the dispute documentation."
				},
				"AdditionalDisputeData": {
					"$ref": "#/definitions/Max1000Text",
					"description": "Additional information related to the dispute."
				},
				"DisputeRejectReason": {
					"items": {
						"$ref": "#/definitions/Max35Text"
					},
					"description": "Reason for rejecting a dispute.",
					"type": "array"
				},
				"ChargebackEligibility": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides transaction chargeback eligibility conditions."
				}
			},
			"type": "object"
		},
		"Exact1NumericText": {
			"description": "Specifies a numeric string with an exact length of1digit.",
			"pattern": "^[0-9]$",
			"type": "string"
		},
		"YesNoIndicator" : {
			"description": "Indicates a \"Yes\" or \"No\" type of answer for an element.",
				
			"type":"boolean"
		},
		"DisputeReference1": {
			"additionalProperties": false,
			"description": "Contains dispute reference details.",
			"properties": {
				"AssignerEntity": {
					"$ref": "#/definitions/PartyType32Code",
					"description": "Name of the entity assigning the dispute reference."
				},
				"OtherAssignerEntity": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other assigner entity."
				},
				"DisputeIdentification": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/DisputeIdentification1"
					},
					"description": "Identification of the dispute.",
					"type": "array"
				}
			},
			"required": ["DisputeIdentification"],
			"type": "object"
		},
		"PartyType32Code": {
			"description": "Type of party.",
		
			"enum":["ISUR"	,"ACQR"	,"AGNT"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"DisputeIdentification1": {
			"additionalProperties": false,
			"description": "Identification of the dispute",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of dispute."
				},
				"Identification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Identification of dispute."
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"TransactionAmounts1": {
			"additionalProperties": false,
			"description": "Amounts of the card transaction.",
			"properties": {
				"AmountQualifier": {
					"$ref": "#/definitions/TypeOfAmount11Code",
					"description": "Qualifier or type of amount.\r\n\r\nISO 8583:93/2003 bit 24"
				},
				"TransactionAmount": {
					"$ref": "#/definitions/TransactionAmount1",
					"description": "Actual amount of the transaction."
				},
				"CardholderBillingAmount": {
					"$ref": "#/definitions/Amount4",
					"description": "Present when the cardholder billing currency differs from the transaction currency expressed in the amount of the transaction. It may be populated by the card scheme or an intermediary processor as normally the acceptor does not know the billing currency for which the cardholder will be debited."
				},
				"ReconciliationAmount": {
					"$ref": "#/definitions/Amount4",
					"description": "Amount used for reconciliation. \r\n\r\nCalculated based on the transaction amount, except when the transaction amount is absent. When transaction amount is absent, the reconciliation amount is calculated on the detailed amount field \r\n"
				},
				"DetailedAmount": {
					"items": {
						"$ref": "#/definitions/DetailedAmount19"
					},
					"description": "Further details of some or all amounts in the transaction amount. \r\n\r\n\r\n",
					"type": "array"
				},
				"OriginalTransactionAmounts": {
					"$ref": "#/definitions/OriginalTransactionAmount1",
					"description": "Amount related to the original transaction.\r\n\r\nISO 8583:87 bit 95\r\nISO 8583:93/2003 bit 30"
				}
			},
			"type": "object"
		},
		"TypeOfAmount11Code": {
			"description": "Qualifies the amount of the transaction.",
		
			"enum":["ACTL"	,"MAXI"	,"DFLT"	,"ESTM"	,"RESD"	,"DPST"	,"PRXY"	],				
			"type": "string"
		},
		"TransactionAmount1": {
			"additionalProperties": false,
			"description": "Actual amount of the transaction.",
			"properties": {
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount of the transaction expressed in the currency of the terminal or as a reversed amount of a previous authorisation.\r\nISO 8583 bit 4."
				},
				"Currency": {
					"$ref": "#/definitions/ISO3NumericCurrencyCode",
					"description": "Currency code associated with the transaction amount.  ISO 4217 \"Codes for the representation of currencies and funds\"\r\n\r\nISO 8583:87/93 bit 49\r\nISO 8583:2003 bit 4"
				}
			},
			"required": ["Amount","Currency"],
			"type": "object"
		},
		"ImpliedCurrencyAndAmount" : {
			"description": "Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot.\nNote: a zero amount is considered a positive amount.",
			"required":["amount"],
			"properties":{
				"amount": {
					
			"oneOf":[
				{ 
			"minimum":  0 , 
					"type":"number"
				},{
					"type": "object",
					"additionalProperties": false,
					"required":["@value","@type"],
					"properties":{
						"@value": {
							"pattern": "^[+-]?[0-9]+(.[0-9]+)?$",
							"type": "string"
						},
						"@type": {
							"enum":["xsd:decimal"],				
							"type": "string"
						}
						
					}
				}
			]
			
				},
				"currency":{"type":"string"}
			},
			"additionalProperties": false,
			"type":"object"
		},
		"ISO3NumericCurrencyCode": {
			"description": "Code allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous numbers",
			"pattern": "^[0-9]{3,3}$",			
			"type": "string"
		},
		"Amount4": {
			"additionalProperties": false,
			"description": "Amount, currency, exchange rate and quotation date.",
			"properties": {
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount exclusive of currency.\r\n\r\n"
				},
				"Currency": {
					"$ref": "#/definitions/ISO3NumericCurrencyCode",
					"description": "Currency code associated with the applicable type of amount.  ISO 4217 \"Codes for the representation of currencies and funds\"."
				},
				"ExchangeRate": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "The factor used in the conversion from one amount to another amount."
				},
				"QuotationDate": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time at which the exchange rate has been quoted."
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"DetailedAmount19": {
			"additionalProperties": false,
			"description": "Breakdown of the transaction amount.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/DetailAmount1Code",
					"description": "Type or class of amount."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional information to specify the type of amount."
				},
				"Amount": {
					"$ref": "#/definitions/Amount5",
					"description": "Detailed amount expressed in the transaction currency."
				},
				"CardholderBillingAmount": {
					"$ref": "#/definitions/Amount5",
					"description": "Detailed amount expressed in the cardholder billing currency."
				},
				"ReconciliationAmount": {
					"$ref": "#/definitions/Amount5",
					"description": "Detailed amount expressed in the reconciliation currency. "
				},
				"Label": {
					"$ref": "#/definitions/Max70Text",
					"description": "Short description of the detailed amount."
				}
			},
			"required": ["Type","Amount"],
			"type": "object"
		},
		"DetailAmount1Code": {
			"description": "Type of detail amount.",
		
			"enum":["CSHB"	,"DCCF"	,"DONN"	,"EXTR"	,"GRTY"	,"OTHN"	,"OTHP"	,"SRCH"	,"TAXT"	,"FORX"	],				
			"type": "string"
		},
		"Amount5": {
			"additionalProperties": false,
			"description": "Signed amount in a given numeric currency",
			"properties": {
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount value."
				},
				"Sign": {
					"$ref": "#/definitions/PlusOrMinusIndicator",
					"description": "Sign of the amount."
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"PlusOrMinusIndicator" : {
			"description": "Indicates a positive or negative value.",
				
			"type":"boolean"
		},
		"OriginalTransactionAmount1": {
			"additionalProperties": false,
			"description": "Amount related to the original transaction.",
			"properties": {
				"AmountQualifier": {
					"$ref": "#/definitions/TypeOfAmount11Code",
					"description": "Qualifies the amount of the transaction."
				},
				"TransactionAmount": {
					"$ref": "#/definitions/TransactionAmount1",
					"description": "Actual amount of the transaction."
				},
				"CardholderBillingAmount": {
					"$ref": "#/definitions/Amount4",
					"description": "Amount to be billed to cardholder."
				},
				"ReconciliationAmount": {
					"$ref": "#/definitions/Amount4",
					"description": "Amount used for reconciliation."
				}
			},
			"required": ["TransactionAmount"],
			"type": "object"
		},
		"AdditionalAmounts1": {
			"additionalProperties": false,
			"description": "Limits and amounts not part of the transaction amount. Not included in reconciliation totals. \r\n\r\nISO 8583 bit 54",
			"properties": {
				"Type": {
					"$ref": "#/definitions/TypeOfAmount12Code",
					"description": "Type or class of amount."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of amount."
				},
				"Amount": {
					"$ref": "#/definitions/Amount14",
					"description": "Amount of one occurrence of the breakdown amount."
				},
				"Label": {
					"$ref": "#/definitions/Max70Text",
					"description": "Short description of the additional amount."
				}
			},
			"required": ["Type","Amount"],
			"type": "object"
		},
		"TypeOfAmount12Code": {
			"description": "Type of amount.",
		
			"enum":["MAXI"	,"DCNT"	,"AMTH"	,"AMTX"	,"AMTN"	,"AMTQ"	,"CUAT"	,"ISCF"	,"OTHN"	,"OTHP"	,"ANTA"	,"RQCH"	,"PDCC"	],				
			"type": "string"
		},
		"Amount14": {
			"additionalProperties": false,
			"description": "Signed amount in a given currency",
			"properties": {
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount value."
				},
				"Currency": {
					"$ref": "#/definitions/ISO3NumericCurrencyCode",
					"description": "Currency code associated with the applicable type of amount.  ISO 4217 \"Codes for the representation of currencies and funds\"."
				},
				"Sign": {
					"$ref": "#/definitions/PlusOrMinusIndicator",
					"description": "Sign of the amount."
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"AdditionalFee1": {
			"additionalProperties": false,
			"description": "Fees not included in the transaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/TypeOfAmount10Code",
					"description": "Type or class of fee."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional information to specify the type of amount of fee."
				},
				"FeeProgram": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of fee program."
				},
				"FeeDescriptor": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of specific fee."
				},
				"Amount": {
					"$ref": "#/definitions/FeeAmount2",
					"description": "Amount of one occurrence of the fee amount."
				},
				"Label": {
					"$ref": "#/definitions/Max140Text",
					"description": "Short description of the fee amount."
				}
			},
			"required": ["Type","Amount"],
			"type": "object"
		},
		"TypeOfAmount10Code": {
			"description": "Type or class of amount.",
		
			"enum":["INTC"	,"FEEP"	,"FEEA"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"FeeAmount2": {
			"additionalProperties": false,
			"description": "Amount, currency, exchange rate and quotation date, sign and label.",
			"properties": {
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount exclusive of currency.\r\n\r\nISO 8583:87 bit 8, 28, 29, 30 & 31\r\nISO 8583:93/2003 bit 8 & 46\r\n"
				},
				"Currency": {
					"$ref": "#/definitions/ISO3NumericCurrencyCode",
					"description": "Currency for the type of amount."
				},
				"ExchangeRate": {
					"$ref": "#/definitions/BaseOneRate",
					"description": "Exchange rate of the currency code associated with the amount. \r\n\r\nISO 8583 bit 9 (for use with reconciliation/settlement amount)\r\nISO 8583 bit 10 (for use with cardholder billing amount)"
				},
				"QuotationDate": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time at which the exchange rate has been quoted."
				},
				"Sign": {
					"$ref": "#/definitions/PlusOrMinusIndicator",
					"description": "Indicates whether the amount value is positive or negative.\r\n\r\nNegative: the receiver of the message owes the fee to the sender.\r\nPositive: the sender of the message owes the fee to the receiver."
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"BaseOneRate" : {
			"description": "Rate expressed as a decimal, for example, 0.7 is 7/10 and 70%.",
			
			"oneOf":[
				{ 
					"type":"number"
				},{
					"type": "object",
					"additionalProperties": false,
					"required":["@value","@type"],
					"properties":{
						"@value": {
							"pattern": "^[+-]?[0-9]+(.[0-9]+)?$",
							"type": "string"
						},
						"@type": {
							"enum":["xsd:decimal"],				
							"type": "string"
						}
						
					}
				}
			]
			
		},
		"DepositDetails1": {
			"additionalProperties": false,
			"description": "Additional functions or services to be performed in conjunction with the transaction.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/CardDepositType1Code",
					"description": "Funding source used for deposit."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other funding source used for deposit."
				},
				"Amount": {
					"$ref": "#/definitions/Amount5",
					"description": "Amount of the deposit."
				}
			},
			"required": ["Type"],
			"type": "object"
		},
		"CardDepositType1Code": {
			"description": "Contains the type of deposit.",
		
			"enum":["CASH"	,"CHEC"	,"ENVL"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"FundingService1": {
			"additionalProperties": false,
			"description": "Funds related service such as a payment or a transfer related to the transaction.",
			"properties": {
				"FundingService": {
					"$ref": "#/definitions/TransferService1",
					"description": "Funding service details."
				},
				"FundingSource": {
					"$ref": "#/definitions/FundingSource2",
					"description": "Source of funding."
				},
				"ClaimInformation": {
					"$ref": "#/definitions/ClaimInformation1",
					"description": "Information for claiming funds."
				}
			},
			"type": "object"
		},
		"TransferService1": {
			"additionalProperties": false,
			"description": "Funds transfer service",
			"properties": {
				"ServiceProvider": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the funding service provider."
				},
				"ServiceName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name of the funding service (for example, MoneyGram, Western Union, etc.)."
				},
				"Reference": {
					"$ref": "#/definitions/Max35Text",
					"description": "Reference to the funding service."
				},
				"BusinessPurpose": {
					"$ref": "#/definitions/Max35Text",
					"description": "Purpose of the transfer. For example: person to person, business-to-business and mobile top-up."
				},
				"Description": {
					"$ref": "#/definitions/Max256Text",
					"description": "Free text that can be used between the sender and the receiver to describe the details of the transfer."
				}
			},
			"type": "object"
		},
		"FundingSource2": {
			"additionalProperties": false,
			"description": "Source of funding",
			"properties": {
				"SourceType": {
					"$ref": "#/definitions/FundingSourceType2Code",
					"description": "Type of source funding used to perform the transfer of funds."
				},
				"OtherSourceType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Any other type of funding source used to perform the transfer of funds."
				},
				"Reference": {
					"$ref": "#/definitions/Max35Text",
					"description": "Reference to the funding source."
				}
			},
			"type": "object"
		},
		"FundingSourceType2Code": {
			"description": "Type of funding source used for a financial service.",
		
			"enum":["SVNG"	,"CRDT"	,"UVRL"	,"EPRS"	,"CURR"	,"CDBT"	,"LCDT"	,"PRPD"	,"CASH"	,"DBAC"	,"OTHN"	,"OTHP"	,"CHQE"	,"LOYL"	],				
			"type": "string"
		},
		"ClaimInformation1": {
			"additionalProperties": false,
			"description": "Information provided to claim funds",
			"properties": {
				"ClaimCredentials": {
					"$ref": "#/definitions/Max500Text",
					"description": "Code presented by the customer to claim funds."
				},
				"Assigner": {
					"$ref": "#/definitions/Max35Text",
					"description": "Entity issuing the claim credential."
				}
			},
			"type": "object"
		},
		"AccountDetails2": {
			"additionalProperties": false,
			"description": "Details of a bank account",
			"properties": {
				"AccountName": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the account as assigned by the account servicing institution in an agreement with the account owner in order to provide an additional means of identification of the account."
				},
				"AccountType": {
					"$ref": "#/definitions/Exact2AlphaNumericText",
					"description": "Type of cardholder account used for the transaction.\r\n\r\nSee ISO 8583 bit 3, Account type codes"
				},
				"AccountIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of an account.\r\n\r\nISO 8583 bit 102 or bit 103"
				}
			},
			"type": "object"
		},
		"AddendumData1": {
			"additionalProperties": false,
			"description": "Component contains data structures applicable to certain merchant verticals that require industry-specific data within transaction messages. ",
			"properties": {
				"PurchaseIdentifierType": {
					"$ref": "#/definitions/PurchaseIdentifierType1Code",
					"description": "Specifies the type of identifier present in the message."
				},
				"OtherPurchaseIdentifierType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Used when Purchase Identifier Type is Other National or Other Private. "
				},
				"PurchaseIdentifier": {
					"$ref": "#/definitions/Max99Text",
					"description": "Contains a value identifying Invoice Data or Purchase Request Data."
				},
				"AdditionalAcceptorData": {
					"$ref": "#/definitions/AdditionalAcceptorData1",
					"description": "Contains additional card acceptor data. "
				},
				"Customer": {
					"$ref": "#/definitions/Customer4",
					"description": "Information about the customer."
				},
				"Sale": {
					"$ref": "#/definitions/Sale1",
					"description": "Details of good and services included in the sale."
				},
				"Fleet": {
					"$ref": "#/definitions/FleetData2",
					"description": "Fleet data pertaining to the payment transaction."
				},
				"Invoice": {
					"$ref": "#/definitions/Invoice1",
					"description": "Invoice data pertaining to the payment transaction."
				},
				"TravelAgency": {
					"$ref": "#/definitions/TravelAgency2",
					"description": "Component supports corporate transactions for travel agency, airline, or railway transactions. Acquirers may submit multiple occurrences of this component. Each occurrence provides detailed travel agency fee data associated with a travel agency, airline, or railway transaction."
				},
				"PassengerTransport": {
					"$ref": "#/definitions/PassengerTransport1",
					"description": "Component supports ticketing transactions for airline, railway, and travel agency transactions to provide passenger ticket information for the cardholder. "
				},
				"VehicleRental": {
					"items": {
						"$ref": "#/definitions/VehicleRentalService1"
					},
					"description": "Component provides detailed vehicle rental information. One occurrence of this component provides rental agreement data reporting for a single vehicle rental transaction.",
					"type": "array"
				},
				"Lodging": {
					"items": {
						"$ref": "#/definitions/Lodging2"
					},
					"description": "Component provides detailed information about lodging accommodations and related expenses for the cardholder. Acquirers can submit multiple occurrences of this component for each lodging transaction, to provide details of one or more folios.",
					"type": "array"
				},
				"ShippingData": {
					"$ref": "#/definitions/ShippingData1",
					"description": "Shipping or Courier Service detail component provides detailed information regarding delivery or courier services. "
				},
				"TelecommunicationServices": {
					"$ref": "#/definitions/TelecomServices1",
					"description": "Telecommunication services component is designed to carry telephony billing data and to enable issuers to supply more transaction information to their consumer and corporate clients pertaining to telecommunications services and related billing information. "
				},
				"TemporaryServices": {
					"items": {
						"$ref": "#/definitions/TemporaryServices1"
					},
					"description": "Temporary Services component provides detailed information regarding the billing for services rendered on a temporary or contract basis. The component provides information such as the employee job performed, timekeeping, and billing rates.",
					"type": "array"
				},
				"Instalment": {
					"$ref": "#/definitions/Instalment3",
					"description": "Data exclusively related to a card issuer financial loan of the payment transaction, or instalment."
				},
				"AdditionalData": {
					"items": {
						"$ref": "#/definitions/AdditionalData1"
					},
					"description": "Contains additional data for the addendum.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"PurchaseIdentifierType1Code": {
			"description": "Identifies the type of identifier used in the Purchase Identifier field. ",
		
			"enum":["OTHN"	,"OTHP"	,"SUIN"	,"RELO"	,"INNU"	,"PUID"	,"RENU"	,"RSNU"	,"TINU"	,"SUOR"	,"CONU"	,"FONU"	,"PRNU"	,"ORNU"	,"CUOR"	,"CUPO"	,"REAG"	,"TNID"	,"TRNU"	],				
			"type": "string"
		},
		"AdditionalAcceptorData1": {
			"additionalProperties": false,
			"description": "Contains additional acceptor data",
			"properties": {
				"AdditionalTransactionReferenceNumber": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains a code that facilitates card acceptor/corporation communication and record keeping."
				},
				"TaxRegistrationIdentification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Identification of the company recognized by the taxation authority.  Used for reporting transaction-related taxes."
				},
				"CorporateTaxIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the company recognized by the taxation authority.  Used for reporting corporate-related taxes."
				},
				"CorporateTaxIdentificationType": {
					"$ref": "#/definitions/CorporateTaxType1Code",
					"description": "Indicates the corporate tax identification type."
				},
				"AdditionalIdentification": {
					"items": {
						"$ref": "#/definitions/AdditionalIdentification1"
					},
					"description": "Contains additional identification information. ",
					"type": "array"
				},
				"Characteristics": {
					"$ref": "#/definitions/AdditionalCharacteristics1",
					"description": "Contains various classifications of business ownership characteristics."
				},
				"AdditionalInformation": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional information about the card acceptor."
				}
			},
			"type": "object"
		},
		"CorporateTaxType1Code": {
			"description": "Indicates the corporate tax identification type.",
		
			"enum":["CORP"	,"SMBS"	,"OTHR"	],				
			"type": "string"
		},
		"AdditionalIdentification1": {
			"additionalProperties": false,
			"description": "Contains additional identification details of additional card acceptor data. ",
			"properties": {
				"Type": {
					"$ref": "#/definitions/AdditionalIdentificationType1Code",
					"description": "Type of additional identification."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other Additional Identification applied to the transaction."
				},
				"Value": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional identification value."
				}
			},
			"required": ["Type","Value"],
			"type": "object"
		},
		"AdditionalIdentificationType1Code": {
			"description": "Contains the additional identification type, for example NAICS, etc.",
		
			"enum":["ATNU"	,"ICSN"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"AdditionalCharacteristics1": {
			"additionalProperties": false,
			"description": "Contains additional characteristics of addendum data.",
			"properties": {
				"BusinessType": {
					"$ref": "#/definitions/AdditionalCharacteristicDetails1",
					"description": "Identifies the specific classification or type of business."
				},
				"Owner": {
					"$ref": "#/definitions/AdditionalCharacteristicDetails1",
					"description": "Identifies specific characteristics about the\r\nbusiness owner."
				},
				"Certification": {
					"$ref": "#/definitions/AdditionalCharacteristicDetails1",
					"description": "Identifies specific characteristics about the business certification type, such as small business, disadvantaged, or other certification type."
				},
				"OwnerEthnicity": {
					"$ref": "#/definitions/AdditionalCharacteristicDetails1",
					"description": "Identifies the racial or ethnic type of\r\nthe majority owner of the business."
				}
			},
			"type": "object"
		},
		"AdditionalCharacteristicDetails1": {
			"additionalProperties": false,
			"description": "Identifies the specific classification or details.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Specific type of business."
				},
				"ProvidedBy": {
					"$ref": "#/definitions/Max35Text",
					"description": "Party that provided the type information."
				}
			},
			"required": ["Type"],
			"type": "object"
		},
		"Max350Text": {
			"description": "Specifies a character string with a maximum length of 350 characters.",
			"minLength": 1,
			"maxLength": 350,
			"type": "string"
		},
		"Customer4": {
			"additionalProperties": false,
			"description": "Information related to a consumer or a company.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/CustomerType2Code",
					"description": "Type of customer."
				},
				"ReferenceNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Reference number provided by a cardholder or customer to card acceptor to facilitate communication and record keeping.  The value may be a reference number, code, or generic number."
				},
				"TaxRegistrationIdentification": {
					"items": {
						"$ref": "#/definitions/Max70Text"
					},
					"description": "Identification of the customer recognized by the taxation authority.",
					"type": "array"
				},
				"AuthorisedContactCompany": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contact at the company."
				},
				"AuthorisedContactName": {
					"$ref": "#/definitions/Max70Text",
					"description": "Corporate individual or company (cardholder or their company) to be contacted for authorised purchases."
				},
				"AuthorisedContactPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Phone number of an individual or\r\ncompany contacted for company authorised purchases."
				},
				"VIPIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Very Important Person indicator. \r\n"
				},
				"CustomerRelationship": {
					"$ref": "#/definitions/Max35Text",
					"description": "Customer relationship identifier."
				}
			},
			"type": "object"
		},
		"CustomerType2Code": {
			"description": "Type of customer.",
		
			"enum":["CPNY"	,"CSMR"	],				
			"type": "string"
		},
		"Sale1": {
			"additionalProperties": false,
			"description": "Details of good and services included in the sale.",
			"properties": {
				"Summary": {
					"$ref": "#/definitions/SaleSummary1",
					"description": "Sale summary information."
				},
				"LineItem": {
					"items": {
						"$ref": "#/definitions/SaleItem2"
					},
					"description": "Sale line item information.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"SaleSummary1": {
			"additionalProperties": false,
			"description": "Summary information about the sale",
			"properties": {
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"LoyaltyProgramme": {
					"$ref": "#/definitions/LoyaltyProgramme2",
					"description": "Contains loyalty programme information. "
				},
				"Adjustment": {
					"items": {
						"$ref": "#/definitions/Adjustment9"
					},
					"description": "Contains adjustment details of the transaction (for example, percentage, adjustment amount, etc.).",
					"type": "array"
				}
			},
			"type": "object"
		},
		"LoyaltyProgramme2": {
			"additionalProperties": false,
			"description": "Loyalty programme information",
			"properties": {
				"ProgrammeType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of loyalty programme (for example, airline, lodging, vehicle and rail etc.)."
				},
				"ProgramIdentification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Loyalty programme identification value."
				},
				"ParticipantIdentification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Loyalty programme participant identification value."
				}
			},
			"type": "object"
		},
		"Adjustment9": {
			"additionalProperties": false,
			"description": "Describes each adjustment made to the original price.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of adjustment."
				},
				"AdditionalType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional information to specify the type of adjustment."
				},
				"Description": {
					"$ref": "#/definitions/Max70Text",
					"description": "Description of the adjustment."
				},
				"Reason": {
					"$ref": "#/definitions/Max35Text",
					"description": "Reason for the adjustment."
				},
				"PromotionCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Promotion or adjustment code."
				},
				"Percentage": {
					"$ref": "#/definitions/PercentageRate",
					"description": "Contains the percentage value of the discount (when applicable)."
				},
				"AdjustmentAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains amount of the adjustment, exclusive of tax."
				},
				"TaxCalculatedOnOriginalAmount": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not tax was calculated on the original amount of the transaction. \r\n\r\nNote that false (or not present) indicates applicable taxes are based on adjusted amount."
				}
			},
			"type": "object"
		},
		"PercentageRate" : {
			"description": "Rate expressed as a percentage, that is, in hundredths, for example, 0.7 is 7/10 of a percent, and 7.0 is 7%.",
			
			"oneOf":[
				{ 
					"type":"number"
				},{
					"type": "object",
					"additionalProperties": false,
					"required":["@value","@type"],
					"properties":{
						"@value": {
							"pattern": "^[+-]?[0-9]+(.[0-9]+)?$",
							"type": "string"
						},
						"@type": {
							"enum":["xsd:decimal"],				
							"type": "string"
						}
						
					}
				}
			]
			
		},
		"SaleItem2": {
			"additionalProperties": false,
			"description": "Item purchased with the transaction",
			"properties": {
				"ProductType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the product type of the sale line item."
				},
				"ProductCode": {
					"$ref": "#/definitions/Max70Text",
					"description": "Product code of the item."
				},
				"ProductCodeType": {
					"$ref": "#/definitions/ProductCodeType1Code",
					"description": "Contains a list of codes used to identify a product."
				},
				"AdditionalProductCode": {
					"$ref": "#/definitions/Max70Text",
					"description": "Additional code related to the product."
				},
				"AdditionalProductCodeType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional type of codification  used to identify a product."
				},
				"ProductCodeModifier": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "Code discriminator between a product code and its format to uniquely identify a specific product (for example, Item or pack of same items)."
				},
				"ProductDescription": {
					"$ref": "#/definitions/Max140Text",
					"description": "Description of the product or item."
				},
				"UnitOfMeasure": {
					"$ref": "#/definitions/UnitOfMeasure1Code",
					"description": "Unit of measure of the item purchased."
				},
				"OtherUnitOfMeasure": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other unit of measure."
				},
				"ProductQuantity": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "Quantity of product or item."
				},
				"NonAdjustedUnitPrice": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Original, non-adjusted cost of one unit of the product or service before discounts and taxes.\r\n\r\n"
				},
				"NonAdjustedTotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Original, non-adjusted total cost of a product or service before discounts and taxes."
				},
				"Adjustment": {
					"items": {
						"$ref": "#/definitions/Adjustment10"
					},
					"description": "Adjustment made to the original price.",
					"type": "array"
				},
				"AdjustedAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total cost of the line item amount, inclusive adjustments and exclusive of taxes."
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"InsuranceAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Cost of the insurance purchased."
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes applying to the good or item.",
					"type": "array"
				},
				"TotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total cost of the line item, inclusive of all applicable adjustments and taxes."
				}
			},
			"type": "object"
		},
		"ProductCodeType1Code": {
			"description": "Type of product codification used to identify a product uniquely.",
		
			"enum":["UPCA"	,"UPCE"	,"EAN8"	,"EA13"	,"PLUP"	,"GTIN"	,"RS14"	,"OTHR"	],				
			"type": "string"
		},
		"UnitOfMeasure1Code": {
			"description": "Unit of measure of the item purchased.",
		
			"enum":["KILO"	,"PIEC"	,"TONS"	,"METR"	,"INCH"	,"YARD"	,"GBGA"	,"GRAM"	,"CMET"	,"SMET"	,"FOOT"	,"MILE"	,"SQIN"	,"SQFO"	,"SQMI"	,"GBOU"	,"USOU"	,"GBPI"	,"USPI"	,"GBQA"	,"USQA"	,"USGA"	,"MMET"	,"KMET"	,"SQYA"	,"ACRE"	,"ARES"	,"SMIL"	,"SCMT"	,"HECT"	,"SQKI"	,"MILI"	,"CELI"	,"LITR"	,"PUND"	],				
			"type": "string"
		},
		"Adjustment10": {
			"additionalProperties": false,
			"description": "Describes each adjustment made to the original price.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of adjustment."
				},
				"AdditionalType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional information to specify the type of adjustment."
				},
				"Description": {
					"$ref": "#/definitions/Max70Text",
					"description": "Description of the adjustment."
				},
				"Reason": {
					"$ref": "#/definitions/Max35Text",
					"description": "Reason for the adjustment."
				},
				"PromotionEligibility": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Identifies when the item is eligible or prohibited from a discount or adjustment."
				},
				"PromotionCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Promotion or adjustment code."
				},
				"PromotionCouponNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "May contain coupon number, discount code, etc."
				},
				"Quantity": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "Identifies the quantity of the item that is adjusted (can be less than the total quantity of the item being purchased)."
				},
				"UnitPrice": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the adjusted unit price (does not include tax)."
				},
				"Percentage": {
					"$ref": "#/definitions/PercentageRate",
					"description": "Contains the percentage value of the discount (when applicable)."
				},
				"AdjustmentAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains amount of the adjustment, exclusive of tax."
				},
				"TaxCalculatedOnOriginalAmount": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not tax was calculated on the original amount of the transaction. \r\n\r\nNote that false (or not present) indicates applicable taxes are based on adjusted amount."
				}
			},
			"type": "object"
		},
		"Tax33": {
			"additionalProperties": false,
			"description": "Description of tax.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/AddendumTaxType1Code",
					"description": "Type of tax."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of tax. Describes the type of tax when Other, Other National, Other Private or Other Taxes Type is selected. "
				},
				"Description": {
					"$ref": "#/definitions/Max35Text",
					"description": "Description of the tax."
				},
				"TaxExemption": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Exemption for this type of tax.\r\n\r\nTrue: Exemption of tax\r\nFalse: No exemption of tax"
				},
				"TaxExemptReason": {
					"$ref": "#/definitions/Max35Text",
					"description": "Reason for tax exemption."
				},
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Tax amount."
				},
				"Rate": {
					"$ref": "#/definitions/PercentageRate",
					"description": "Tax rate applied on original amount."
				}
			},
			"required": ["Type","Amount"],
			"type": "object"
		},
		"AddendumTaxType1Code": {
			"description": "Specifies the specific type of tax applicable to a transaction.",
		
			"enum":["VATB"	,"PROV"	,"NATI"	,"STAT"	,"WITH"	,"KAPA"	,"INPO"	,"STAM"	,"WTAX"	,"INHT"	,"CTAX"	,"EQUL"	,"GIFT"	,"COAX"	,"ALMI"	,"COUN"	,"LEVY"	,"STEX"	,"TRAX"	,"TRAN"	,"VATA"	,"LOCO"	,"EXEC"	,"CUST"	,"OTHR"	,"WITF"	,"WITL"	,"NKAP"	,"PSTX"	,"TOTL"	,"ASNT"	,"BPTX"	,"CITX"	,"CORT"	,"COTX"	,"CPST"	,"CRTX"	,"CSTX"	,"DLTX"	,"LUTX"	,"PPTX"	,"DUTY"	,"EMET"	,"EMIT"	,"EMST"	,"EMRT"	,"EMUT"	,"ESET"	,"FETX"	,"FEXT"	,"ENTX"	,"ENVT"	,"EQTX"	,"FICA"	,"FIMT"	,"FLST"	,"FNST"	,"FRTX"	,"FSFT"	,"FSST"	,"HVAT"	,"FSTX"	,"FUVT"	,"FVAT"	,"FVTS"	,"GRTX"	,"GCAT"	,"HATX"	,"HSTX"	,"HWTX"	,"LITX"	,"LSTX"	,"LTTX"	,"MATX"	,"METX"	,"MITX"	,"MUDE"	,"MUTX"	,"OCTX"	,"OPTX"	,"OTHN"	,"OTHP"	,"OTTX"	,"PHET"	,"POTX"	,"PRTX"	,"QUST"	,"RCSB"	,"RCSD"	,"ROCI"	,"ROTX"	,"ROVI"	,"RVAT"	,"SCTX"	,"SETX"	,"SLST"	,"SLTX"	,"SPFT"	,"SPTG"	,"SPTS"	,"WESV"	,"UUTX"	,"UNSP"	,"THTX"	,"TELT"	,"TDDT"	,"SAUT"	,"SUTX"	,"STTA"	,"STSL"	,"STPT"	,"SSTX"	,"SRTX"	,"SPTX"	,"LOCL"	,"EUTR"	],				
			"type": "string"
		},
		"FleetData2": {
			"additionalProperties": false,
			"description": "Fleet data pertaining to the payment transaction.",
			"properties": {
				"Summary": {
					"$ref": "#/definitions/FleetSummary1",
					"description": "Invoice Summary information."
				},
				"LineItem": {
					"items": {
						"$ref": "#/definitions/FleetLineItem1"
					},
					"description": "Fleet Line Item component is designed to carry detail level fleet data and to enable issuers to supply more transaction information to their consumer and corporate clients pertaining to fleet transactions. ",
					"type": "array"
				}
			},
			"type": "object"
		},
		"FleetSummary1": {
			"additionalProperties": false,
			"description": "Supplies additional transaction information for fleet transactions.",
			"properties": {
				"Driver": {
					"$ref": "#/definitions/Driver1",
					"description": "Contains driver-related information."
				},
				"Vehicle": {
					"$ref": "#/definitions/Vehicle5",
					"description": "Vehicle belonging to the fleet."
				},
				"DriverOrVehicleCard": {
					"$ref": "#/definitions/PlainCardData20",
					"description": "Second card presented for the payment transaction."
				},
				"CardFuelPromptCode": {
					"$ref": "#/definitions/Max1Number",
					"description": "Indicates whether or not fuel or fleet data prompting should occur. "
				},
				"AgentFuelPromptCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Currently known as \"TransactionNumber\". An identification code assigned by an agent.  This code can be used after applying for and awaiting the appropriate prompt value to be defined."
				},
				"TripInformation": {
					"$ref": "#/definitions/TripInformation1",
					"description": "Contains the details related to an individual trip. "
				},
				"LocalAmenity": {
					"items": {
						"$ref": "#/definitions/LocalAmenity1"
					},
					"description": "Indicates the amenities available at the location where the merchant actually performed the transaction.",
					"type": "array"
				},
				"TransactionRelatedData": {
					"items": {
						"$ref": "#/definitions/PaymentTransaction117"
					},
					"description": "Contains information related specifically to the transaction.",
					"type": "array"
				},
				"AdditionalData": {
					"$ref": "#/definitions/AdditionalInformation19",
					"description": "Contains additional fleet summary data."
				}
			},
			"type": "object"
		},
		"Driver1": {
			"additionalProperties": false,
			"description": "Fleet vehicle driver.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of fleet driver."
				},
				"Identification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Fleet driver identification."
				},
				"DrivingLicense": {
					"$ref": "#/definitions/DrivingLicense1",
					"description": "Driving license details."
				},
				"Employer": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the employer information. "
				},
				"EmployeeIdentification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the employee identification number as assigned by the fleet operator. "
				},
				"DepartmentNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the fleet driver's department number as assigned by the fleet operator."
				},
				"AdditionalIdentification": {
					"items": {
						"$ref": "#/definitions/TravelDocument1"
					},
					"description": "Additional identification used for the driver.",
					"type": "array"
				},
				"DateOfBirth": {
					"$ref": "#/definitions/ISODate",
					"description": "Date of birth of vehicle rental driver. "
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional fleet summary-level information. "
				}
			},
			"type": "object"
		},
		"DrivingLicense1": {
			"additionalProperties": false,
			"description": "Details of driving license.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max70Text",
					"description": "Type of driving license."
				},
				"Form": {
					"$ref": "#/definitions/PresentationMedium2Code",
					"description": "Form of driving license."
				},
				"Identification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Identification of the driver license (for example, driver license number)."
				},
				"Assigner": {
					"$ref": "#/definitions/LegalStructure1Code",
					"description": "Authority assigning an identification to a driver license."
				},
				"IssuanceDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date of issuance of the driving license."
				},
				"ExpirationDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Expiration date of the driving license (if and when relevant)."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Country issuing the driver license."
				},
				"State": {
					"$ref": "#/definitions/Max16Text",
					"description": "State issuing the driver license (if and when relevant)."
				},
				"Province": {
					"$ref": "#/definitions/Max16Text",
					"description": "Province issuing the driver license (if and when relevant)."
				},
				"OtherAuthority": {
					"$ref": "#/definitions/Max16Text",
					"description": "Other authority issuing a driver license."
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"PresentationMedium2Code": {
			"description": "Presentation medium type.",
		
			"enum":["PAPR"	,"ELEC"	,"BOTH"	,"BIOM"	],				
			"type": "string"
		},
		"LegalStructure1Code": {
			"description": "Legal structure for assigning an identification.",
		
			"enum":["MUNI"	,"PVIN"	,"STAE"	,"CNTY"	,"NATI"	],				
			"type": "string"
		},
		"TravelDocument1": {
			"additionalProperties": false,
			"description": "Details of travel document used for identification and/or authentication of the customer.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/OfficialDocumentType1Code",
					"description": "Type of travel document."
				},
				"Form": {
					"$ref": "#/definitions/PresentationMedium2Code",
					"description": "Form of travel document."
				},
				"Identification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Identification of travel document (for example, passport number)."
				},
				"Assigner": {
					"$ref": "#/definitions/Max70Text",
					"description": "Party assigning the travel document."
				},
				"IssuanceDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Issuance date of travel document."
				},
				"ExpirationDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Expiration date of travel document (if and when relevant)."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Country issuing the travel document."
				}
			},
			"required": ["Type","Identification"],
			"type": "object"
		},
		"OfficialDocumentType1Code": {
			"description": "Type of official document used for identification or authentication.",
		
			"enum":["ARNU"	,"AUTH"	,"DIPL"	,"DVLC"	,"EURO"	,"IDEN"	,"INTE"	,"INPO"	,"LZPR"	,"PASS"	,"PERM"	,"REFU"	,"VISA"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"Vehicle5": {
			"additionalProperties": false,
			"description": "Attributes of a fleet vehicle.",
			"properties": {
				"VehicleNumber": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Identification number assigned to the vehicle by the fleet operator. This may not be a legal registration."
				},
				"VehicleIdentificationNumber": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Number that uniquely identifies the vehicle as assigned by the vehicle manufacturer."
				},
				"FleetNumber": {
					"$ref": "#/definitions/Max10Text",
					"description": "Fleet number."
				},
				"SubFleetNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Sub fleet number."
				},
				"UnitNumber": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Identification of the unit number of the vehicle in the fleet."
				},
				"TrailerNumber": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Identification number assigned to the trailer."
				},
				"VehicleTag": {
					"$ref": "#/definitions/Max35Text",
					"description": "Registration tag of the vehicle."
				},
				"VehicleTagEntryMode": {
					"$ref": "#/definitions/CardDataReading5Code",
					"description": "Entry mode of the registration tag."
				},
				"ReplacementVehicleIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "True indicates a replacement vehicle."
				},
				"Odometer": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "Odometer reading value indicating the distance travelled by the vehicle (for example, car, van, pickup truck, semi-truck portion of a tractor trailer unit)."
				},
				"Hubometer": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "Hubometer reading value indicating the distance travelled by the trailer (for example,  the semi-trailer portion of a tractor trailer unit)."
				},
				"MaintenanceIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification assigned to the vehicle related to maintenance."
				},
				"OnBoardDiagnostics": {
					"$ref": "#/definitions/OnBoardDiagnostics1",
					"description": "Data captured from on board diagnostic systems. "
				},
				"AdditionalVehicleData": {
					"items": {
						"$ref": "#/definitions/Vehicle2"
					},
					"description": "Additional information related to the vehicle.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"CardDataReading5Code": {
			"description": "Type of reading of the card data.",
		
			"enum":["TAGC"	,"PHYS"	,"BRCD"	,"MGST"	,"CICC"	,"DFLE"	,"CTLS"	,"ECTL"	,"CDFL"	],				
			"type": "string"
		},
		"OnBoardDiagnostics1": {
			"additionalProperties": false,
			"description": "Data captured from on board diagnostic systems",
			"properties": {
				"EngineIdleTime": {
					"$ref": "#/definitions/Max10NumberFraction2",
					"description": "Current amount of time the vehicle engine has run idle (under no load) as determined by the vehicle monitoring system. \r\n\r\nExpressed in hours"
				},
				"EngineTotalIdleTime": {
					"$ref": "#/definitions/Max10NumberFraction2",
					"description": "Total amount of time the vehicle engine has run idle (under no load) since the last reset, as determined by the vehicle monitoring system.\r\n\r\nExpressed in hours"
				},
				"EngineHours": {
					"$ref": "#/definitions/Max10NumberFraction2",
					"description": "Number of hours the engine has been running (including idle time) as determined by the vehicle monitoring system."
				},
				"EngineTotalTime": {
					"$ref": "#/definitions/Max6NumberFraction2",
					"description": "Amount of time elapsed since the previous reset as determined by the vehicle monitoring system.\r\n\r\nExpressed in hours"
				},
				"EngineLoad": {
					"$ref": "#/definitions/Max12NumericText",
					"description": "Engine load measured as determined by the vehicle monitoring system."
				},
				"EngineRPM": {
					"$ref": "#/definitions/Max5NumericText",
					"description": "Maximum revolutions per minute experienced by the crankshaft of the vehicle engine as determined by the vehicle monitoring system."
				},
				"EngineOilTemperature": {
					"$ref": "#/definitions/Max6NumberFraction2",
					"description": "Temperature of the engine oil as determined by the vehicle monitoring system."
				},
				"EngineOilPressure": {
					"$ref": "#/definitions/Max3NumericText",
					"description": "Pressure of the engine oil as determined by the vehicle monitoring system."
				},
				"EngineOilLifeRemaining": {
					"$ref": "#/definitions/Max3NumericText",
					"description": "Time remaining before next oil change expressed as a percentage, as determined by the vehicle monitoring system."
				},
				"CheckEngineWarningStatus": {
					"$ref": "#/definitions/Max35Text",
					"description": "Check engine status as determined by the vehicle monitoring system."
				},
				"FuelTankLevelStart": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Fuel tank start level reading as determined by the vehicle monitoring system."
				},
				"FuelGaugeLevel": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Current fuel tank gauge level reading as determined by the vehicle monitoring system."
				},
				"FuelEconomy": {
					"$ref": "#/definitions/Max6NumberFraction2",
					"description": "Fuel economy expressed in terms of the amount of fuel consumed per unit of travel as determined by the vehicle monitoring system."
				},
				"RefrigerationHours": {
					"$ref": "#/definitions/Max10NumberFraction2",
					"description": "Number of hours the refrigeration unit has been in operation."
				},
				"RefrigerationTemperature": {
					"$ref": "#/definitions/Max6NumberFraction2",
					"description": "Temperature of the refrigeration unit/trailer as determined by the vehicle monitoring system."
				},
				"CoolantTemperature": {
					"$ref": "#/definitions/Max6NumberFraction2",
					"description": "Temperature of the coolant as determined by the vehicle monitoring system."
				},
				"BatteryVoltage": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Voltage of the vehicle battery as determined by the vehicle monitoring system."
				},
				"HardBraking": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Number of occurrences of hard breaking as determined by the vehicle monitoring system."
				},
				"HardAcceleration": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Number of occurrences of hard acceleration as determined by the vehicle monitoring system."
				}
			},
			"type": "object"
		},
		"Max10NumberFraction2" : {
			"description": "Number of objects represented as a decimal number, for example, 0.75 or 45.6.",
			
			"oneOf":[
				{ 
					"type":"number"
				},{
					"type": "object",
					"additionalProperties": false,
					"required":["@value","@type"],
					"properties":{
						"@value": {
							"pattern": "^[+-]?[0-9]+(.[0-9]+)?$",
							"type": "string"
						},
						"@type": {
							"enum":["xsd:decimal"],				
							"type": "string"
						}
						
					}
				}
			]
			
		},
		"Max6NumberFraction2" : {
			"description": "Number of objects represented as a decimal number, for example, 1234.75 or 0.06",
			
			"oneOf":[
				{ 
					"type":"number"
				},{
					"type": "object",
					"additionalProperties": false,
					"required":["@value","@type"],
					"properties":{
						"@value": {
							"pattern": "^[+-]?[0-9]+(.[0-9]+)?$",
							"type": "string"
						},
						"@type": {
							"enum":["xsd:decimal"],				
							"type": "string"
						}
						
					}
				}
			]
			
		},
		"Vehicle2": {
			"additionalProperties": false,
			"description": "Additional information related to a vehicle.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of information related to the vehicle."
				},
				"EntryMode": {
					"$ref": "#/definitions/CardDataReading5Code",
					"description": "Entry mode of the information."
				},
				"Data": {
					"$ref": "#/definitions/Max35Text",
					"description": "Information related to the vehicle."
				}
			},
			"required": ["Data"],
			"type": "object"
		},
		"PlainCardData20": {
			"additionalProperties": false,
			"description": "Sensitive data associated with a payment card.",
			"properties": {
				"DriverOrVehicleIdentification": {
					"$ref": "#/definitions/Max20Text",
					"description": "Identification of the driver or vehicle."
				},
				"AdditionalCardData": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional card specific data."
				}
			},
			"type": "object"
		},
		"Max20Text": {
			"description": "Specifies a character string with a maximum length of 20 characters.",
			"minLength": 1,
			"maxLength": 20,
			"type": "string"
		},
		"Max1Number" : {
			"description": "Number (max 9) of objects represented as an integer.",
			
			"oneOf":[
				{ 
					"type":"number"
				},{
					"type": "object",
					"additionalProperties": false,
					"required":["@value","@type"],
					"properties":{
						"@value": {
							"pattern": "^[+-]?[0-9]+(.[0-9]+)?$",
							"type": "string"
						},
						"@type": {
							"enum":["xsd:decimal"],				
							"type": "string"
						}
						
					}
				}
			]
			
		},
		"TripInformation1": {
			"additionalProperties": false,
			"description": "Contains the details related to an individual trip. ",
			"properties": {
				"TripNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification number of the trip."
				},
				"JobNumber": {
					"$ref": "#/definitions/Max10Text",
					"description": "Contains an indicator identifying the job or task identifier of the individual. "
				},
				"WorkOrder": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the work order or purchase order number. "
				},
				"InvoiceNumber": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the invoice number. "
				},
				"BillingIdentification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the billing identification number. "
				},
				"ControlNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification number assigned by an agent. "
				},
				"DeliveryTicketNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Delivery Ticket Number for the trip information."
				}
			},
			"type": "object"
		},
		"LocalAmenity1": {
			"additionalProperties": false,
			"description": "Contains additional information about the fuel location, such as hours of operation and Interstate Access/Exit Number, etc.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/LocationAmenity1Code",
					"description": "Type of additional service available."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other additional service available at the location. "
				},
				"AvailableIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not a specific type of amenity is available at this location."
				}
			},
			"required": ["Type"],
			"type": "object"
		},
		"LocationAmenity1Code": {
			"description": "Codes pertaining to the amenities available at the location where the merchant actually performed the transaction.",
		
			"enum":["TSSA"	,"TSHA"	,"VHPA"	,"MRLA"	,"VMRA"	,"CRWA"	,"AVLA"	,"PAPA"	,"AFLA"	,"VSWA"	,"OTHN"	,"OTHP"	,"TFHA"	,"EWAA"	,"DISA"	,"AADA"	,"CVSA"	,"TSRA"	],				
			"type": "string"
		},
		"PaymentTransaction117": {
			"additionalProperties": false,
			"description": "Payment transaction invoiced to customer.",
			"properties": {
				"PurchaseType": {
					"$ref": "#/definitions/FleetPurchaseType1Code",
					"description": "List of codes representing type of fleet purchases."
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"DiscountTotal": {
					"$ref": "#/definitions/FleetDiscountTotals1",
					"description": "Discount applied to the transaction."
				},
				"TaxTotal": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Total taxes related to the products or services. ",
					"type": "array"
				},
				"TotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total amount of the transaction, inclusive of all applicable taxes and fees. "
				}
			},
			"type": "object"
		},
		"FleetPurchaseType1Code": {
			"description": "List of codes representing type of fleet purchases.",
		
			"enum":["FUEL"	,"NONF"	,"FANF"	],				
			"type": "string"
		},
		"FleetDiscountTotals1": {
			"additionalProperties": false,
			"description": "Contains the discount information pertaining to the fleet transaction. ",
			"properties": {
				"TotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total amount."
				},
				"FuelAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Fuel amount."
				},
				"NonFuelAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Non-fuel amount."
				}
			},
			"type": "object"
		},
		"AdditionalInformation19": {
			"additionalProperties": false,
			"description": "Additional information relevant to the destination.",
			"properties": {
				"EnteredDataNumeric": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Key-entered numeric data."
				},
				"EnteredDataAlphaNumeric": {
					"$ref": "#/definitions/Max350Text",
					"description": "Key-entered alphanumeric data."
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional fleet summary data. "
				}
			},
			"type": "object"
		},
		"FleetLineItem1": {
			"additionalProperties": false,
			"description": "Supplies additional transaction information for fleet transactions.",
			"properties": {
				"FuelIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the line item represents a fuel or non-fuel product or service.\r\n\r\nTrue = Fuel item\r\nFalse = Non-fuel item"
				},
				"ServiceType": {
					"$ref": "#/definitions/FleetServiceType1Code",
					"description": "Type of service received at the acceptor location. "
				},
				"FuelBrandCode": {
					"$ref": "#/definitions/Max4Text",
					"description": "Code that identifies the brand of the fuel purchased. "
				},
				"FleetProductCode": {
					"$ref": "#/definitions/Max4Text",
					"description": "Product code of fleet product or service being purchased."
				},
				"FleetProductCategory": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains a code that identifies a category of fleet products or services. "
				},
				"FleetProductQualifier": {
					"$ref": "#/definitions/Max6Text",
					"description": "Contains a code that identifies the product qualifier of the fleet product or service. "
				},
				"FleetProductCodeAssigner": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains a code that identifies the product code assigner."
				},
				"UnitPriceTaxIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not tax is included in unit price.\r\n\r\nTrue: includes tax \r\nFalse: does not include tax.   \r\n"
				},
				"UnitPrice": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Unit price of the fleet line item."
				},
				"UnitOfMeasure": {
					"$ref": "#/definitions/UnitOfMeasure1Code",
					"description": "Unit of measure of the item purchased."
				},
				"OtherUnitOfMeasure": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other unit of measure."
				},
				"ProductQuantity": {
					"$ref": "#/definitions/Max12NumericText",
					"description": "Quantity of product or item."
				},
				"DiscountAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the discount amount applied to the fleet transaction (includes coupons)."
				},
				"NonTaxableIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not amount of fleet purchase is taxable. "
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes related to the products or services. ",
					"type": "array"
				},
				"TotalAmountExcludingTax": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total amount excluding tax."
				},
				"TotalAmountIncludingTax": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total amount including tax."
				}
			},
			"required": ["FuelIndicator"],
			"type": "object"
		},
		"FleetServiceType1Code": {
			"description": "Contains the list of fleet service type codes.",
		
			"enum":["FLSV"	,"SLSV"	,"HSDI"	],				
			"type": "string"
		},
		"Max4Text": {
			"description": "Specifies a character string with a maximum length of 4 characters.",
			"minLength": 1,
			"maxLength": 4,
			"type": "string"
		},
		"Max6Text": {
			"description": "Specifies a character string with a maximum length of 6 characters.",
			"minLength": 1,
			"maxLength": 6,
			"type": "string"
		},
		"Invoice1": {
			"additionalProperties": false,
			"description": "Invoice data pertaining to the payment transaction.",
			"properties": {
				"Summary": {
					"$ref": "#/definitions/InvoiceSummary1",
					"description": "Invoice summary information."
				},
				"LineItem": {
					"items": {
						"$ref": "#/definitions/InvoiceLineItem1"
					},
					"description": "Line item information.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"InvoiceSummary1": {
			"additionalProperties": false,
			"description": "Summary information about the sale",
			"properties": {
				"InvoiceNumber": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the invoice number."
				},
				"Seller": {
					"$ref": "#/definitions/PartyIdentification206",
					"description": "Supplier or the provider of the goods or services."
				},
				"Buyer": {
					"$ref": "#/definitions/PartyIdentification206",
					"description": "Buyer or company buying the goods or services."
				},
				"InvoiceDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Effective billing date."
				},
				"InvoiceCreationDateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Contains the date and time the electronic invoice was created."
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"FreightAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the freight charges for the entire purchase. "
				},
				"TaxTotal": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Contains the total tax amount for the entire purchase. ",
					"type": "array"
				},
				"TaxReclaimMethod": {
					"$ref": "#/definitions/TaxReclaimMethod1Code",
					"description": "Code that identifies the disposition of the tax reclaim invoice."
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Contains additional details."
				}
			},
			"type": "object"
		},
		"PartyIdentification206": {
			"additionalProperties": false,
			"description": "Identification of a party.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the customer."
				},
				"Identification": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Identification of the customer."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the customer."
				},
				"Contact": {
					"$ref": "#/definitions/Contact3",
					"description": "Contact information related to the customer."
				},
				"TaxRegistrationIdentification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Identification of the customer recognized by the taxation authority."
				},
				"AdditionalInformation": {
					"$ref": "#/definitions/Max1000Text",
					"description": "Additional information about the seller. "
				}
			},
			"type": "object"
		},
		"Contact3": {
			"additionalProperties": false,
			"description": "Details of a contact person.",
			"properties": {
				"CentralPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Central phone number for the contact."
				},
				"PropertyPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Property phone number for the contact."
				},
				"TollFreePhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Toll-free phone number for the contact."
				},
				"Email": {
					"$ref": "#/definitions/Max256Text",
					"description": "Email address of contact."
				},
				"FaxNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Fax phone number."
				},
				"URLAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Universal Resource Locator (URL) address."
				},
				"Language": {
					"$ref": "#/definitions/LanguageCode",
					"description": "Language of the contact."
				}
			},
			"type": "object"
		},
		"TaxReclaimMethod1Code": {
			"description": "Contains Tax Reclaim options",
		
			"enum":["INPS"	,"INSU"	,"INPP"	,"OTHR"	],				
			"type": "string"
		},
		"InvoiceLineItem1": {
			"additionalProperties": false,
			"description": "Item purchased with the transaction",
			"properties": {
				"Date": {
					"$ref": "#/definitions/ISODate",
					"description": "Invoice date."
				},
				"OrderDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Invoice order date."
				},
				"ContractNumber": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the corporate contract number."
				},
				"ShippingDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Shipping date of the product or the date services rendered. "
				},
				"RebillingIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Rebilling indicator. "
				},
				"MedicalServicesIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the invoice line item represents a medical service."
				},
				"ShipToIndustryCode": {
					"$ref": "#/definitions/Max50Text",
					"description": "Contains the health industry number to which the medical services are being shipped (for example, Medical Services ship to Health Industry Number)."
				},
				"ProductCode": {
					"$ref": "#/definitions/Max70Text",
					"description": "Product code of the item."
				},
				"ProductQualifier": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains a code that identifies the product number qualifier of the product (for example, medical services)."
				},
				"Description": {
					"$ref": "#/definitions/Max256Text",
					"description": "May contain further clarifying data, such as event name, etc."
				},
				"TypeOfSupply": {
					"$ref": "#/definitions/Max10Text",
					"description": "Indicates whether the purchase is categorized\r\nas goods or services."
				},
				"UnitOfMeasure": {
					"$ref": "#/definitions/UnitOfMeasure1Code",
					"description": "Unit of measure of the item purchased."
				},
				"OtherUnitOfMeasure": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other unit of measure."
				},
				"UnitPrice": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the price for one unit of the product or service."
				},
				"ProductQuantity": {
					"$ref": "#/definitions/DecimalNumber",
					"description": "Quantity of product or item."
				},
				"Adjustment": {
					"$ref": "#/definitions/Adjustment11",
					"description": "Total line item amount, inclusive of adjustments and exclusive of taxes."
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"InsuranceAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Cost of the insurance purchased."
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes related to the products or services. ",
					"type": "array"
				},
				"UniqueVATInvoiceReference": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies the value-added tax (VAT) invoice or tax receipt."
				},
				"TotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total amount of line item, inclusive of any applicable adjustments and taxes."
				},
				"CreditIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the line item is a credit amount."
				},
				"ZeroCostToCustomerIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the line item carries a cost. \r\n\r\nTrue : Line item does not have any cost associated to the customer.\r\nFalse : Line item has cost associated to the customer."
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional data."
				}
			},
			"type": "object"
		},
		"Max50Text": {
			"description": "Specifies a character string with a maximum length of 50 characters.",
			"minLength": 1,
			"maxLength": 50,
			"type": "string"
		},
		"Adjustment11": {
			"additionalProperties": false,
			"description": "Describes each adjustment made to the original price.",
			"properties": {
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the adjusted amount (for example, discounts)."
				},
				"CreditIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the line item is a credit amount."
				},
				"Reason": {
					"$ref": "#/definitions/Max35Text",
					"description": "Reason for the adjustment."
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"TravelAgency2": {
			"additionalProperties": false,
			"description": "Travel agency component provides details of travel agency, airline, or railway transactions. ",
			"properties": {
				"Company": {
					"$ref": "#/definitions/PartyIdentification207",
					"description": "Information describing the travel agency or party providing travel-related services. "
				},
				"TravelPackage": {
					"items": {
						"$ref": "#/definitions/TravelAgencyPackage1"
					},
					"description": "Provides detailed information about the travel package, excluding specific itinerary data. ",
					"type": "array"
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Provides additional travel details."
				}
			},
			"type": "object"
		},
		"PartyIdentification207": {
			"additionalProperties": false,
			"description": "Identification of a party.",
			"properties": {
				"Code": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains an agency code or name."
				},
				"Assigner": {
					"$ref": "#/definitions/Max35Text",
					"description": "Assigner of the code."
				},
				"IATACode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the International Air Transport Association (IATA) code identifying the company that purchased the ticket. "
				},
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the company."
				},
				"ShortName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Short name of the company."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the customer."
				},
				"Contact": {
					"$ref": "#/definitions/Contact6",
					"description": "Contact information related to the customer."
				}
			},
			"type": "object"
		},
		"Contact6": {
			"additionalProperties": false,
			"description": "Details of a contact person.",
			"properties": {
				"HomePhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Home phone number of contact."
				},
				"BusinessPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Business phone number of contact."
				},
				"MobilePhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Mobile phone number of contact."
				},
				"OtherPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Other phone number of contact."
				},
				"PersonalEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Personal email address of contact."
				},
				"BusinessEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Business email address of contact."
				},
				"OtherEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Other email address of contact."
				},
				"HomeFaxNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Home fax number, as defined by telecom services."
				},
				"BusinessFaxNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Business fax number, as defined by telecom services."
				},
				"URLAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Universal Resource Locator (URL) address."
				},
				"Language": {
					"$ref": "#/definitions/LanguageCode",
					"description": "Language of the contact."
				}
			},
			"type": "object"
		},
		"TravelAgencyPackage1": {
			"additionalProperties": false,
			"description": "Provides detailed information about the travel package, excluding specific itinerary data.",
			"properties": {
				"ReservationNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Reservation number or identifier. "
				},
				"TravelPackageType": {
					"$ref": "#/definitions/Max70Text",
					"description": "Describes the type of travel offering provided by the travel agency or partner."
				},
				"NumberInParty": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Number of people included in the travel arrangements. "
				},
				"CustomerReference": {
					"items": {
						"$ref": "#/definitions/CustomerReference1"
					},
					"description": "Contains Customer Reference Values provided for this transaction and used for various reference processing at the customer site. These values represent information most prevalently provided by travel agencies for transactions booked against a lodged account or central travel account.",
					"type": "array"
				},
				"DataSource": {
					"$ref": "#/definitions/Max35Text",
					"description": "Indicates the source of enhanced data that is matched to the transaction."
				},
				"DeliveryOrderNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains a customer invoice number for a rail sale to a corporate account."
				},
				"CreditCardSlipNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains a slip number from the credit card slip."
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"InsuranceAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Cost of the insurance purchased."
				},
				"Fee": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Travel agency fee amount."
				}
			},
			"type": "object"
		},
		"Max10NumericText": {
			"description": "Specifies a numeric string with a maximum length of 10 digits.",
			"pattern": "^[0-9]{1,10}$",
			"type": "string"
		},
		"CustomerReference1": {
			"additionalProperties": false,
			"description": "Contains customer reference values provided for this transaction and used for various reference processing at the\r\ncustomer site. These values represent information most prevalently provided by travel agencies for transactions booked against a lodged account or central travel account.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Defines the content of the value provided in the Customer Reference detail."
				},
				"Detail": {
					"$ref": "#/definitions/Max70Text",
					"description": "Subfield is a free-form text field containing customer reference value details about the transaction."
				}
			},
			"type": "object"
		},
		"PassengerTransport1": {
			"additionalProperties": false,
			"description": "Passenger ticket information for the cardholder. ",
			"properties": {
				"Summary": {
					"$ref": "#/definitions/PassengerTransportSummary1",
					"description": "Component supports ticketing transactions for airline, railway, and travel agency transactions to provide passenger ticket information for the cardholder. Acquirers can submit one occurrence of this component for each airline, railway, or travel agency transaction to provide general ticket information."
				},
				"TripLeg": {
					"items": {
						"$ref": "#/definitions/TripLeg1"
					},
					"description": "Component supports ticketing transactions for airline, railway, and travel agency transactions to provide passenger ticket information for the cardholder. Acquirers can submit multiple occurrences of this component for each airline, railway, or travel agency transaction to provide general ticket information.",
					"type": "array"
				},
				"AncillaryPurchase": {
					"items": {
						"$ref": "#/definitions/AncillaryPurchase1"
					},
					"description": "Contains additional charges related to or during transit (for example, baggage fee, in-flight purchase). These are separate from the original ticket purchase.",
					"type": "array"
				},
				"HiredVehicleDetails": {
					"items": {
						"$ref": "#/definitions/HiredVehicle1"
					},
					"description": "Vehicle for hire for passenger transport - excludes vehicles driven by a renter.  Examples include, but are not limited to, taxi, chauffered limousine, boats.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"PassengerTransportSummary1": {
			"additionalProperties": false,
			"description": "Passenger ticket summary information for the cardholder. ",
			"properties": {
				"DocumentNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Unique identification number of the document."
				},
				"Reservation": {
					"$ref": "#/definitions/ReservationDetails3",
					"description": "Reservation number or identifier. "
				},
				"TravelAuthorisationCode": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains a code provided to a travel agent by a company to authorise ticket issuance. "
				},
				"TicketIssuer": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name of the issuing ticket agent. "
				},
				"OpenTicketIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the ticket is open or restricted."
				},
				"CustomerReference": {
					"items": {
						"$ref": "#/definitions/CustomerReference1"
					},
					"description": "Contains Customer Reference Values provided for this transaction and used for various reference processing at the customer site. These values represent information most prevalently provided by travel agencies for transactions booked against a lodged account or central travel account.",
					"type": "array"
				},
				"Passenger": {
					"items": {
						"$ref": "#/definitions/Customer5"
					},
					"description": "Contains the details of the passenger.",
					"type": "array"
				},
				"Departure": {
					"$ref": "#/definitions/DepartureOrArrival1",
					"description": "Contains departure location, date and time. "
				},
				"Duration": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Duration of the trip in days."
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"TotalAmount": {
					"$ref": "#/definitions/AmountDetails1",
					"description": "Total amount."
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"LoyaltyProgramme": {
					"$ref": "#/definitions/LoyaltyProgramme2",
					"description": "Loyalty programme details. "
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional user-defined data pertaining to the transportation."
				}
			},
			"type": "object"
		},
		"ReservationDetails3": {
			"additionalProperties": false,
			"description": "Contains the reservation details",
			"properties": {
				"System": {
					"$ref": "#/definitions/Max4Text",
					"description": "Computerised reservation system used to make the reservation and purchase the ticket."
				},
				"ReservationNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Value that uniquely identifies the reservation. "
				},
				"OriginalSystem": {
					"$ref": "#/definitions/Max4Text",
					"description": "System code that identifies the original reservation system used to make the reservation and purchase the ticket. "
				},
				"OriginalReservationNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Value that identifies the original reservation generated during the original reservation and purchase of the ticket. "
				}
			},
			"type": "object"
		},
		"Customer5": {
			"additionalProperties": false,
			"description": "Details of the customer",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the customer."
				},
				"Identification": {
					"$ref": "#/definitions/PartyIdentification208",
					"description": "Details of the party identification."
				},
				"CustomerFileReferenceNumber": {
					"$ref": "#/definitions/Max70Text",
					"description": "Number or code assigned by an airline, company or other party to track or uniquely identify a person, department or project.\r\n"
				},
				"Age": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Age of the customer."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address details of the customer."
				},
				"Contact": {
					"$ref": "#/definitions/Contact6",
					"description": "Contact information related to the customer."
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"PartyIdentification208": {
			"additionalProperties": false,
			"description": "Identification of a party.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max4Text",
					"description": "Type of identification."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of identification."
				},
				"Identification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Identification of the party."
				},
				"Assigner": {
					"$ref": "#/definitions/Max35Text",
					"description": "Entity in charge of assigning an identification to a party."
				}
			},
			"required": ["Type","Identification"],
			"type": "object"
		},
		"DepartureOrArrival1": {
			"additionalProperties": false,
			"description": "Contains departure or arrival information.",
			"properties": {
				"Location": {
					"$ref": "#/definitions/Max70Text",
					"description": "Departure or arrival location (for example, city, airport code, station id, etc). "
				},
				"Description": {
					"$ref": "#/definitions/Max256Text",
					"description": "Specific explanation of the location or directions. "
				},
				"Date": {
					"$ref": "#/definitions/ISODate",
					"description": "Departure or arrival date."
				},
				"Time": {
					"$ref": "#/definitions/ISOTime",
					"description": "Departure or arrival time. "
				}
			},
			"type": "object"
		},
		"AmountDetails1": {
			"additionalProperties": false,
			"description": "Describes each adjustment made to the original price.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/TypeOfAmount18Code",
					"description": "Code that describes the type of amount or fee."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Description of other type of amount or fee."
				},
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the amount."
				},
				"CreditIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the amount is a credit or debit. "
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes related to the products or services. ",
					"type": "array"
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"TypeOfAmount18Code": {
			"description": "Identification or qualification of the type of amount.",
		
			"enum":["AMTH"	,"EXTR"	,"OTHN"	,"OTHP"	,"BAGG"	,"CHTC"	,"DATA"	,"EXTK"	,"EXTF"	,"FARE"	,"FDBV"	,"INSU"	,"MISC"	,"PHNE"	,"PRPY"	,"TOTL"	],				
			"type": "string"
		},
		"TripLeg1": {
			"additionalProperties": false,
			"description": "Supplies additional transaction information for travel transactions.",
			"properties": {
				"SequenceNumber": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Identifies the specific occurrence of trip leg data. "
				},
				"Ticket": {
					"$ref": "#/definitions/Ticket1",
					"description": "Details of the ticket."
				},
				"Document": {
					"items": {
						"$ref": "#/definitions/DocumentReference1"
					},
					"description": "Provides the document type and reference information.",
					"type": "array"
				},
				"ProcedureReference": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains identification of the rail server procedure or the order in which service was booked or cancellation was done."
				},
				"TransportType": {
					"$ref": "#/definitions/TransportType1Code",
					"description": "Type of transportation."
				},
				"OtherTransportType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of transportation."
				},
				"CommodityCode": {
					"$ref": "#/definitions/Max4Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"Carrier": {
					"$ref": "#/definitions/CarrierIdentification1",
					"description": "Identification of transportation carrier."
				},
				"RouteNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Route number as specified by the transportation carrier (for example, flight number, bus number, train route or number, etc.)"
				},
				"ServiceClass": {
					"$ref": "#/definitions/Max35Text",
					"description": "Indicates the service class (for example, coach or first class)."
				},
				"Departure": {
					"$ref": "#/definitions/DepartureOrArrival1",
					"description": "Contains departure location, date and time. "
				},
				"Arrival": {
					"$ref": "#/definitions/DepartureOrArrival1",
					"description": "Contains arrival location, date and time. "
				},
				"Duration": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Duration of the trip."
				},
				"StopOverIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicator that specifies whether the mode of transportation was a direct or non-direct route on the same ticket number."
				},
				"NonDirectRouteCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Indicates a non-direct route between the origin and the destination. "
				},
				"FairBasisCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Code that transportation companies assign to a particular ticket type, such as business class or discounted or non-refundable tickets. "
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"TripLegAmount": {
					"items": {
						"$ref": "#/definitions/AmountDetails1"
					},
					"description": "Contains trip leg amount information. ",
					"type": "array"
				},
				"CreditReasonCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Indicates reason for the credit to the cardholder.  Includes: ancillary purchase cancelled, passenger transport ticket and related ancillary purchase cancelled, etc."
				},
				"ProcedureIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains identification of the rail server procedure or the order in which the service was booked or a cancellation was completed. "
				},
				"LoyaltyProgramme": {
					"$ref": "#/definitions/LoyaltyProgramme2",
					"description": "Loyalty programme details. "
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional user-defined data pertaining to the transportation."
				}
			},
			"type": "object"
		},
		"Ticket1": {
			"additionalProperties": false,
			"description": "Contains ticket details. ",
			"properties": {
				"TicketNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the ticket number. "
				},
				"TicketIssuer": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Name of the issuing ticket agent. "
				},
				"TicketIssueDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date the ticket was issued."
				},
				"TicketIssueLocation": {
					"$ref": "#/definitions/Max140Text",
					"description": "Location where ticket was issued."
				},
				"ConjunctionTicketNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Number of a ticket that contains additional coupons for an itinerary that contains more than four segments. "
				},
				"RestrictedTicketIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not restrictions apply to the ticket.\r\n\r\nTrue = Restrictions apply\r\nFalse = Restrictions do not apply"
				},
				"OpenTicketIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the ticket is open-ended. \r\n\r\nTrue = Ticket is open-ended\r\nFalse = Ticket is not open-ended"
				},
				"Restrictions": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the specific restriction applicable to the ticket."
				},
				"ExchangedTicketIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the ticket was exchanged (reissued or new ticket generated). \r\n\r\nTrue = Ticket was exchanged\r\nFalse = Ticket was not exchanged"
				},
				"ExchangedTicketNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the original ticket number that was replaced by the new ticket number. "
				},
				"RecordLocatorNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Ticket record locator number."
				},
				"Reservation": {
					"$ref": "#/definitions/ReservationDetails3",
					"description": "Reservation number or identifier. "
				}
			},
			"type": "object"
		},
		"DocumentReference1": {
			"additionalProperties": false,
			"description": "Contains Document Reference Values provided for this transaction and used for various document processing at the\r\ncustomer site.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Describes the type of document."
				},
				"Reference": {
					"$ref": "#/definitions/Max70Text",
					"description": "Reference is a free-form text field containing customer reference information (for example, a document number)."
				}
			},
			"type": "object"
		},
		"TransportType1Code": {
			"description": "Contains the transportation type code list",
		
			"enum":["RAIL"	,"SHIP"	,"AIRR"	,"BUSS"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"CarrierIdentification1": {
			"additionalProperties": false,
			"description": "Identification of transportation carrier.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the transportation carrier."
				},
				"Code": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies the operator (company providing service)."
				},
				"IATACode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the International Air Transport Association (IATA) code identifying the company that purchased the ticket. "
				}
			},
			"type": "object"
		},
		"AncillaryPurchase1": {
			"additionalProperties": false,
			"description": "Contains additional charges related to or during transit (e.g., baggage fee, in-flight purchase). These are separate from the original ticket purchase.",
			"properties": {
				"AncillaryDocumentNumber": {
					"$ref": "#/definitions/Max15Text",
					"description": "Contains the form number assigned by the carrier for the transaction. "
				},
				"RelatedDocumentNumber": {
					"$ref": "#/definitions/Max15Text",
					"description": "Document number of related transport details."
				},
				"ServiceCategoryCode": {
					"$ref": "#/definitions/Max4Text",
					"description": "Contains an ancillary category code for the primary type of service that has been provided. "
				},
				"ServiceSubCategoryCode": {
					"$ref": "#/definitions/Max4Text",
					"description": "Contains ancillary service sub category code."
				},
				"ServiceProviderServiceType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Proprietary service type code assigned by the service provider."
				},
				"CreditReasonCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Indicates reason for the credit to the cardholder.  Includes: ancillary purchase cancelled, passenger transport ticket and related ancillary purchase cancelled, etc."
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"Amount": {
					"$ref": "#/definitions/Amount5",
					"description": "Ancillary purchase amount."
				},
				"Fee": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Subfield contains the ancillary fee amount."
				},
				"Tax": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes related to the products or services. ",
					"type": "array"
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional user-defined data pertaining to the transportation."
				}
			},
			"required": ["Tax"],
			"type": "object"
		},
		"Max15Text": {
			"description": "Specifies a character string with a maximum length of 15 characters.",
			"minLength": 1,
			"maxLength": 15,
			"type": "string"
		},
		"HiredVehicle1": {
			"additionalProperties": false,
			"description": "Vehicle for hire for passenger transport - excludes vehicles driven by a renter.  Examples include, but are not limited to, taxi, chauffered limousine, boats.",
			"properties": {
				"CompanyType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Defines the type of company or vehicle being hired (for example, private, taxi, chauffeur service, rideshare)."
				},
				"CompanyName": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the name of the company that provided the hired vehicle services. "
				},
				"TypeOfVehicle": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the type of vehicle that was hired (for example, limousine, black, SUV). "
				},
				"VehicleIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the identifier assigned to the vehicle."
				},
				"DriverIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the identifier assigned to the driver."
				},
				"DriverTaxIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the tax identifier assigned to the driver."
				},
				"Destination": {
					"$ref": "#/definitions/Destination2",
					"description": "Destination of the hired vehicle. "
				}
			},
			"type": "object"
		},
		"Destination2": {
			"additionalProperties": false,
			"description": "Contains the details of the destination. ",
			"properties": {
				"NameAndLocation": {
					"$ref": "#/definitions/Max99Text",
					"description": "Name and location of the destination."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Specific address of the destination."
				}
			},
			"type": "object"
		},
		"VehicleRentalService1": {
			"additionalProperties": false,
			"description": "Vehicle rental service provides detailed vehicle rental information.",
			"properties": {
				"VehicleRentalCompany": {
					"$ref": "#/definitions/VehicleRentalCompany1",
					"description": "Company in charge of a vehicle rental service."
				},
				"Customer": {
					"$ref": "#/definitions/VehicleRentalCustomer1",
					"description": "Customer renting a vehicle."
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"RentalAgreement": {
					"$ref": "#/definitions/VehicleRentalAgreement1",
					"description": "Agreement (contract) related to a vehicle rental service."
				},
				"RentalInvoice": {
					"$ref": "#/definitions/VehicleRentalInvoice1",
					"description": "Invoice related to a vehicle rental service."
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional user-defined data pertaining to the vehicle rental. "
				}
			},
			"type": "object"
		},
		"VehicleRentalCompany1": {
			"additionalProperties": false,
			"description": "Company in charge of a vehicle rental service.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the vehicle rental company."
				},
				"Identification": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Identification of the vehicle rental company."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the vehicle rental company."
				},
				"Contact": {
					"$ref": "#/definitions/Contact3",
					"description": "Contact details at vehicle rental company location."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Country of the vehicle rental company.\r\nISO 3166"
				},
				"Type": {
					"$ref": "#/definitions/CarRentalActivity1Code",
					"description": "Type of vehicle rental activity."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of vehicle rental activity. "
				}
			},
			"type": "object"
		},
		"CarRentalActivity1Code": {
			"description": "Type of car rental activity.",
		
			"enum":["CARS"	,"GLBL"	,"INDV"	,"PETP"	,"OTHR"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"VehicleRentalCustomer1": {
			"additionalProperties": false,
			"description": "Customer renting a vehicle.",
			"properties": {
				"RenterName": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the vehicle rental customer."
				},
				"CorporateName": {
					"$ref": "#/definitions/Max70Text",
					"description": "Corporate name of the vehicle rental customer."
				},
				"CorporateIdentifier": {
					"$ref": "#/definitions/Max35Text",
					"description": "Corporate identifier of the vehicle rental customer."
				},
				"Assigner": {
					"$ref": "#/definitions/CustomerAssigner1Code",
					"description": "Party assigning an identification to a vehicle rental customer."
				},
				"PrimaryDriver": {
					"items": {
						"$ref": "#/definitions/DriverInParty1"
					},
					"description": "Vehicle rental driver.",
					"type": "array"
				},
				"AdditionalDriver": {
					"items": {
						"$ref": "#/definitions/DriverInParty1"
					},
					"description": "Type of identification of the additional vehicle rental customer.",
					"type": "array"
				},
				"LoyaltyProgramme": {
					"$ref": "#/definitions/LoyaltyProgramme2",
					"description": "Loyalty programme details. "
				}
			},
			"required": ["RenterName","CorporateIdentifier"],
			"type": "object"
		},
		"CustomerAssigner1Code": {
			"description": "Party assigning an identification to a customer.",
		
			"enum":["TRAY"	,"AUTH"	,"CUST"	,"CRCY"	,"ONFL"	,"OTHR"	],				
			"type": "string"
		},
		"DriverInParty1": {
			"additionalProperties": false,
			"description": "Driver in a car rental party",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of vehicle rental driver."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of driver in party."
				},
				"Contact": {
					"$ref": "#/definitions/Contact6",
					"description": "Contact details of driver in party."
				},
				"DateOfBirth": {
					"$ref": "#/definitions/ISODate",
					"description": "Date of birth of vehicle rental driver."
				},
				"Age": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Age of driver."
				},
				"DriverCredential": {
					"items": {
						"$ref": "#/definitions/TravelDocument1"
					},
					"description": "Credential used by the driver for identification.",
					"type": "array"
				},
				"DrivingLicense": {
					"$ref": "#/definitions/DrivingLicense1",
					"description": "Driving license details."
				}
			},
			"type": "object"
		},
		"VehicleRentalAgreement1": {
			"additionalProperties": false,
			"description": "Agreement (contract) related to a vehicle rental service.",
			"properties": {
				"AgreementNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the original vehicle rental agreement, invoice or contract number."
				},
				"AdjustedIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates that an adjustment was made to a vehicle rental charge (for example, additional charges added). "
				},
				"RentalLocation": {
					"$ref": "#/definitions/Address1",
					"description": "Contains the vehicle rental location. "
				},
				"PickupLocation": {
					"items": {
						"$ref": "#/definitions/Address1"
					},
					"description": "Used when different than rental location",
					"type": "array"
				},
				"CheckOutDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date the vehicle was picked-up by the customer.  In the case of a no-show transaction or a prepaid transaction, this contains the scheduled pickup date."
				},
				"CheckOutTime": {
					"$ref": "#/definitions/ISOTime",
					"description": "Time the vehicle was picked-up by the customer.  In the case of a no-show transaction or a prepaid transaction, this contains the scheduled pickup time."
				},
				"ReturnLocation": {
					"$ref": "#/definitions/Address1",
					"description": "Location to which vehicle was returned."
				},
				"CheckInDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date when the vehicle was returned to the rental agency."
				},
				"CheckInTime": {
					"$ref": "#/definitions/ISOTime",
					"description": "Time when the vehicle was returned to the rental agency."
				},
				"Duration": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Duration of rental in days."
				},
				"VehicleClassDetails": {
					"$ref": "#/definitions/Vehicle4",
					"description": "Contains the details of the vehicle classification."
				},
				"TravelDistance": {
					"$ref": "#/definitions/Distance1",
					"description": "Distance travelled during vehicle rental."
				},
				"RentalRate": {
					"items": {
						"$ref": "#/definitions/RentalRate1"
					},
					"description": "Vehicle rental rate.",
					"type": "array"
				},
				"RentalDetails": {
					"$ref": "#/definitions/RentalDetails1",
					"description": "Vehicle rental details."
				},
				"VehicleRegistrationNumber": {
					"$ref": "#/definitions/Max70Text",
					"description": "Registration number of vehicle."
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"AdditionalAmount": {
					"items": {
						"$ref": "#/definitions/Amount9"
					},
					"description": "Contains the details of additional amount for a specific vehicle rental service type. ",
					"type": "array"
				},
				"EstimatedTax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes related to the products or services. ",
					"type": "array"
				},
				"DiscountProgramme": {
					"items": {
						"$ref": "#/definitions/Discount3"
					},
					"description": "Discount applied to the vehicle rental.",
					"type": "array"
				},
				"LoyaltyProgramme": {
					"items": {
						"$ref": "#/definitions/LoyaltyProgramme1"
					},
					"description": "Loyalty programme details.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"Vehicle4": {
			"additionalProperties": false,
			"description": "Attributes of vehicle.",
			"properties": {
				"Class": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the classification of the vehicle (for example, economy, intermediate, luxury, etc.)"
				},
				"Make": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Brand or manufacturer of the vehicle."
				},
				"Model": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Product line of vehicle within the make. "
				},
				"RegistrationNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Registration number of vehicle."
				}
			},
			"type": "object"
		},
		"Distance1": {
			"additionalProperties": false,
			"description": "Distance between a start and a return car rental period.",
			"properties": {
				"UnitOfMeasure": {
					"$ref": "#/definitions/UnitOfMeasure10Code",
					"description": "Unit of measure used to compute the distance."
				},
				"OdometerStart": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Odometer reading at start of rental (at the time of vehicle check-out). "
				},
				"OdometerReturn": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Odometer reading at return of rental (at the time of vehicle check-in). "
				},
				"TotalDistance": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Total distance expressed in unit of measure."
				},
				"FreeDistance": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Maximum free miles or kilometres for the car rental period."
				},
				"Rate": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Defines the rate in relation to a specific distance. "
				}
			},
			"type": "object"
		},
		"UnitOfMeasure10Code": {
			"description": "Unit of measure expressed in miles and kilometres.",
		
			"enum":["MILE"	,"KMET"	],				
			"type": "string"
		},
		"RentalRate1": {
			"additionalProperties": false,
			"description": "Vehicle rental rate",
			"properties": {
				"Period": {
					"$ref": "#/definitions/PeriodUnit3Code",
					"description": "Unit of measure used to compute the rental rate."
				},
				"OtherPeriod": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other unit of measure used to compute the rental rate."
				},
				"Rate": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Rate applied to the vehicle rental for the specified period. "
				},
				"PeriodCount": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Duration of the period for which the rental rate is calculated. "
				}
			},
			"type": "object"
		},
		"PeriodUnit3Code": {
			"description": "Type of period unit to be used.",
		
			"enum":["DAYS"	,"WEEK"	,"MNTH"	,"YEAR"	,"EXDY"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"RentalDetails1": {
			"additionalProperties": false,
			"description": "Details of car rental service.",
			"properties": {
				"RentalIdentification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Identification of the car rental service."
				},
				"RentalDateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time of registration of car rental service as  per folio."
				},
				"RentalStart": {
					"$ref": "#/definitions/ServiceStartEnd1",
					"description": "Details of the vehicle at the start of the rental period."
				},
				"RentalReturn": {
					"$ref": "#/definitions/ServiceStartEnd1",
					"description": "Details of the vehicle at the end of the rental period."
				},
				"RentalTimePeriod": {
					"items": {
						"$ref": "#/definitions/PeriodUnit2Code"
					},
					"description": "Time period for the whole duration of rental.",
					"type": "array"
				},
				"TimePeriodUnit": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Time period expressed in a number of units (for example, 1 week, 3 days, etc.)."
				},
				"TimePeriodRate": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Rate for the time period."
				},
				"Currency": {
					"$ref": "#/definitions/ISO3NumericCurrencyCode",
					"description": "Currency code applied for the rental."
				}
			},
			"type": "object"
		},
		"ServiceStartEnd1": {
			"additionalProperties": false,
			"description": "Start or end of service.",
			"properties": {
				"Location": {
					"$ref": "#/definitions/Max35Text",
					"description": "Location of service (for example, Paris CDG, Paris Gare du Nord, etc.). "
				},
				"LocationCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Location code assigned to an airport or to a service location (for example, CDG, YUL, etc.)."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of service."
				},
				"Contact": {
					"$ref": "#/definitions/Contact2",
					"description": "Contact details at location."
				},
				"DateAndTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time of service."
				},
				"TimeSegment": {
					"$ref": "#/definitions/TimeSegment1Code",
					"description": "Period of day pertaining to the service location."
				},
				"JourneyInformation": {
					"$ref": "#/definitions/JourneyInformation1",
					"description": "Journey information related to the vehicle rental."
				}
			},
			"type": "object"
		},
		"Contact2": {
			"additionalProperties": false,
			"description": "Details of a contact person.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name by which a party is known and which is usually used to identify that party."
				},
				"HomePhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Home phone number of contact."
				},
				"BusinessPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Business phone number of contact."
				},
				"MobilePhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Mobile phone number of contact."
				},
				"OtherPhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Other phone number of contact."
				},
				"PersonalEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Personal email address of contact."
				},
				"BusinessEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Business email address of contact."
				},
				"OtherEmailAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Other email address of contact."
				},
				"HomeFaxNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Collection of information that identifies a home FAX number, as defined by telecom services."
				},
				"BusinessFaxNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Collection of information that identifies a home FAX number, as defined by telecom services."
				},
				"URLAddress": {
					"$ref": "#/definitions/Max256Text",
					"description": "Universal Resource Locator (URL) address."
				},
				"Language": {
					"$ref": "#/definitions/ISO2ALanguageCode",
					"description": "Language of the contact."
				}
			},
			"type": "object"
		},
		"TimeSegment1Code": {
			"description": "Time period of the day.",
		
			"enum":["AMBN"	,"PMAN"	],				
			"type": "string"
		},
		"JourneyInformation1": {
			"additionalProperties": false,
			"description": "Information about the journey before or after the rental.",
			"properties": {
				"JourneyType": {
					"$ref": "#/definitions/JourneyType1Code",
					"description": "Type of journey."
				},
				"JourneyData": {
					"$ref": "#/definitions/Max35Text",
					"description": "Data related to the type of journey selected (for example, AF1234 when FlightNumber selected)."
				},
				"DateAndTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time related to the journey type selected."
				}
			},
			"type": "object"
		},
		"JourneyType1Code": {
			"description": "Type of journey related to a car rental reservation.",
		
			"enum":["EARL"	,"LATE"	,"ONTM"	,"COAC"	,"TRAN"	,"FLGT"	,"VESS"	,"OTHR"	],				
			"type": "string"
		},
		"PeriodUnit2Code": {
			"description": "Time expressed in period units.",
		
			"enum":["DAYS"	,"WEEK"	,"MNTH"	,"OTHR"	,"YEAR"	,"HFDA"	,"HOUR"	,"MINU"	],				
			"type": "string"
		},
		"Amount9": {
			"additionalProperties": false,
			"description": "Describes each adjustment made to the original price.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/CarRentalServiceType2Code",
					"description": "Code that describes the type of amount or fee."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Description of other type of amount or fee."
				},
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the amount."
				},
				"CreditIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the amount is a credit or debit. "
				},
				"CustomerNotifiedIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the customer was notified about additional amounts. "
				}
			},
			"type": "object"
		},
		"CarRentalServiceType2Code": {
			"description": "Car rental service in addition to main car rental.",
		
			"enum":["BAST"	,"GPSY"	,"ENTE"	,"GARA"	,"FUEL"	,"INSU"	,"ONEW"	,"NOSH"	,"PARK"	,"PHON"	,"LATE"	,"TOWI"	,"SMOK"	,"FINE"	,"CLEA"	,"ADJM"	,"AUTH"	,"DMGS"	,"DLVR"	,"DPOF"	,"EXTC"	,"EXDY"	,"EXDI"	,"EXHR"	,"LIIN"	,"LDIN"	,"MISC"	,"NAVI"	,"OTHN"	,"OTHP"	,"PRIN"	,"PFIN"	,"REGD"	,"TOLL"	],				
			"type": "string"
		},
		"Discount3": {
			"additionalProperties": false,
			"description": "Contains the details of a discount applied to the transaction. ",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Describes the type of discount applied to the transaction."
				},
				"Value": {
					"$ref": "#/definitions/Max35Text",
					"description": "Monetary value of the discount applied to the transaction."
				}
			},
			"required": ["Value"],
			"type": "object"
		},
		"LoyaltyProgramme1": {
			"additionalProperties": false,
			"description": "Loyalty programme used for partial payment in loyalty value (debit) and computation of loyalty value gained on the monetary value paid by the customer (credit).",
			"properties": {
				"ProgrammeEligibilityIndicator": {
					"items": {
						"$ref": "#/definitions/TrueFalseIndicator"
					},
					"description": "Eligibility for loyalty.\r\n\r\nTrue: Eligible for loyalty\r\nFalse: Not eligible for loyalty\r\nDefault: False.",
					"type": "array"
				},
				"ProgrammeIssuer": {
					"$ref": "#/definitions/Max35Text",
					"description": "Entity issuing the loyalty programme."
				},
				"LoyaltyMember": {
					"$ref": "#/definitions/LoyaltyMember1",
					"description": "Details about the member of the loyalty programme"
				}
			},
			"type": "object"
		},
		"LoyaltyMember1": {
			"additionalProperties": false,
			"description": "Details about a member of a loyalty programme.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name of the member of the loyalty programme."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the loyalty member."
				},
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the member of the loyalty programme."
				},
				"MemberStatus": {
					"$ref": "#/definitions/Max35Text",
					"description": "Status of the loyalty programme member for the programme."
				},
				"ExpirationDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Expiration date of the loyalty programme."
				},
				"LoyaltyValue": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Value expressed in type of value for the loyalty programme."
				},
				"LoyaltyValueType": {
					"$ref": "#/definitions/LoyaltyValueType1Code",
					"description": "Type of value used for the loyalty programme."
				},
				"OtherLoyaltyValueType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of loyalty value used for the programme."
				},
				"ValueToCredit": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Value to be credited on the account of the loyalty programme member. Computed on the monetary part actually paid by the customer for the service."
				},
				"ValueToDebit": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Value to be debited from the account of the loyalty programme member. Computed on the monetary part actually redeemed by the customer for the service."
				},
				"Balance": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Value on the account of the loyalty programme member after credit (computation on actual payment in monetary value) and debit (redemption in loyalty value)."
				}
			},
			"type": "object"
		},
		"LoyaltyValueType1Code": {
			"description": "Type of value used for a loyalty programme.",
		
			"enum":["POIN"	,"MILE"	,"MONE"	,"PRIV"	,"OTHR"	],				
			"type": "string"
		},
		"VehicleRentalInvoice1": {
			"additionalProperties": false,
			"description": "Invoice related to a vehicle rental service.",
			"properties": {
				"NoShowIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates that the cardholder failed to pick up the vehicle and was therefore charged a no-show fee; vehicle was not actually rented. "
				},
				"AdjustedIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates that an adjustment was made to a vehicle rental charge (for example, additional charges added). "
				},
				"ReturnLocation": {
					"$ref": "#/definitions/Address1",
					"description": "Location to which vehicle was returned."
				},
				"CheckOutDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date the vehicle was picked-up by the customer.  In the case of a no-show transaction or a prepaid transaction, this contains the scheduled pickup date."
				},
				"CheckOutTime": {
					"$ref": "#/definitions/ISOTime",
					"description": "Time the vehicle was picked-up by the customer.  In the case of a no-show transaction or a prepaid transaction, this contains the scheduled pickup time."
				},
				"CheckInDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date when the vehicle was returned to the rental agency."
				},
				"CheckInTime": {
					"$ref": "#/definitions/ISOTime",
					"description": "Time when the vehicle was returned to the rental agency."
				},
				"Duration": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Duration of rental in days."
				},
				"VehicleClassInvoiced": {
					"$ref": "#/definitions/Vehicle4",
					"description": "Contains the details of the vehicle class invoiced to the renter regardless of the class of vehicle actually provided. "
				},
				"VehicleClassProvided": {
					"$ref": "#/definitions/Vehicle4",
					"description": "Contains the details of the vehicle class of the vehicle actually provided to the renter at the time of vehicle pick-up. This may be an upgrade class of vehicle, above that invoiced to the renter. "
				},
				"TravelDistance": {
					"$ref": "#/definitions/Distance1",
					"description": "Distance travelled during vehicle rental."
				},
				"RentalCharge": {
					"items": {
						"$ref": "#/definitions/RentalRate1"
					},
					"description": "Vehicle rental charge.",
					"type": "array"
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"AdditionalAmount": {
					"items": {
						"$ref": "#/definitions/Amount9"
					},
					"description": "Contains the details of additional amount for a specific vehicle rental service type. ",
					"type": "array"
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes related to the products or services. ",
					"type": "array"
				}
			},
			"type": "object"
		},
		"Lodging2": {
			"additionalProperties": false,
			"description": "Lodging provides summary information about lodging accommodations and related expenses for the cardholder. ",
			"properties": {
				"Summary": {
					"$ref": "#/definitions/LodgingSummary1",
					"description": "Component provides summary information about lodging accommodations and related expenses for the cardholder. One occurrence of this component provides lodging accommodation reporting for a single lodging folio, such as a single stay at a lodging facility with one check-in and one check-out."
				},
				"LineItem": {
					"items": {
						"$ref": "#/definitions/LodgingLineItem1"
					},
					"description": "Component provides detailed information about lodging accommodations and related expenses for the cardholder. Acquirers can submit multiple occurrences of this component for each lodging transaction, to provide details of one or more folios. ",
					"type": "array"
				}
			},
			"type": "object"
		},
		"LodgingSummary1": {
			"additionalProperties": false,
			"description": "Data pertaining to a lodging transaction. ",
			"properties": {
				"FolioNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the lodging company's invoice or billing ID reference number, referred to as a folio number. "
				},
				"Property": {
					"$ref": "#/definitions/LodgingProperty1",
					"description": "Details of the lodging property. "
				},
				"Customer": {
					"$ref": "#/definitions/Customer5",
					"description": "Contains customer details."
				},
				"NumberOfRooms": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Number of rooms within the reservation. "
				},
				"Room": {
					"items": {
						"$ref": "#/definitions/LodgingRoom1"
					},
					"description": "Contains the room details. ",
					"type": "array"
				},
				"Duration": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Duration of stay in days."
				},
				"Arrival": {
					"$ref": "#/definitions/DepartureOrArrival2",
					"description": "Lodging transaction details."
				},
				"Departure": {
					"$ref": "#/definitions/DepartureOrArrival1",
					"description": "Contains departure details. "
				},
				"NoShowIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates that the cardholder failed to arrive at the property and was therefore charged a no-show fee; property was not actually rented. "
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"InsuranceAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount of insurance."
				},
				"TotalTax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes related to the products or services. ",
					"type": "array"
				},
				"TotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the total amount of lodging expenses."
				},
				"AuthorisedAmount": {
					"items": {
						"$ref": "#/definitions/AuthorisedAmount1"
					},
					"description": "Contains Authorised amount details.",
					"type": "array"
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"LoyaltyProgramme": {
					"items": {
						"$ref": "#/definitions/LoyaltyProgramme2"
					},
					"description": "Loyalty programme details. ",
					"type": "array"
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional user-defined data pertaining to the lodging. "
				}
			},
			"type": "object"
		},
		"LodgingProperty1": {
			"additionalProperties": false,
			"description": "Company in charge of a lodging establishment",
			"properties": {
				"Type": {
					"$ref": "#/definitions/LodgingActivity1Code",
					"description": "Type of accommodations."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of lodging establishment when Other National or Other Private is selected as a type code. "
				},
				"PrestigiousProperty": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifier that describes the lodging establishment as a prestigious property. "
				},
				"Name": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name of the property."
				},
				"Identification": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Identification of the lodging company."
				},
				"Location": {
					"$ref": "#/definitions/Location3",
					"description": "Address of the property."
				},
				"Assigner": {
					"$ref": "#/definitions/CompanyAssigner2Code",
					"description": "Party in charge of assigning the identification."
				},
				"Contact": {
					"$ref": "#/definitions/Contact3",
					"description": "Contact details at property."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Country of the property.\r\nISO 3166"
				},
				"FireSafetyActIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the lodging facility complies with the US Hotel and Motel Fire Safety Act of 1990 (PL101-391) or similar legislation.\r\n\r\nTrue = in compliance\r\nFalse = not in compliance"
				}
			},
			"required": ["Identification"],
			"type": "object"
		},
		"LodgingActivity1Code": {
			"description": "Lodging type of activity.",
		
			"enum":["APTM"	,"BEBR"	,"CRUI"	,"HOTL"	,"MOTL"	,"HOST"	,"COTT"	,"LODG"	,"ROAB"	,"TOSH"	,"HOME"	,"OTHN"	,"OTHP"	,"RESO"	],				
			"type": "string"
		},
		"Location3": {
			"additionalProperties": false,
			"description": "Location information.",
			"properties": {
				"LocationCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the location code."
				},
				"LocationName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Name (label) of the location."
				},
				"Description": {
					"$ref": "#/definitions/Max256Text",
					"description": "Specific explanation of the location or directions. "
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Contains the address details. "
				},
				"LocalTimeZone": {
					"$ref": "#/definitions/Max70Text",
					"description": "Local time zone."
				},
				"LocalCurrency": {
					"$ref": "#/definitions/ISO3NumericCurrencyCode",
					"description": "Local currency."
				}
			},
			"type": "object"
		},
		"CompanyAssigner2Code": {
			"description": "Party in charge of assigning an identification to a company.",
		
			"enum":["ASSO"	,"CPNY"	,"TRAG"	,"AUTH"	,"LEII"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"LodgingRoom1": {
			"additionalProperties": false,
			"description": "Room details",
			"properties": {
				"RoomType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Type of room (for example, club/lounge level room). "
				},
				"RoomLocation": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the room location information (for example,ocean view, lake view, level, etc.) "
				},
				"BedType": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contain the type of bed in room (for example, single, double, king, etc.) "
				},
				"GuestsPerRoom": {
					"$ref": "#/definitions/Max3NumericText",
					"description": "Contains the number of guests in the room. "
				},
				"AdultsInRoom": {
					"$ref": "#/definitions/Max3NumericText",
					"description": "Contains the number of adult guests in the room. "
				},
				"ChildrenInRoom": {
					"$ref": "#/definitions/Max3NumericText",
					"description": "Contains the number of child guests in the room. "
				},
				"DailyRoomRate": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Daily rate being charged for the room."
				}
			},
			"type": "object"
		},
		"DepartureOrArrival2": {
			"additionalProperties": false,
			"description": "Contains departure or arrival information.",
			"properties": {
				"CarrierCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Code indicating the name of the passenger transport carrier (for example, United Airlines, Lufthansa, JetBlue, etc.) "
				},
				"RouteNumber": {
					"$ref": "#/definitions/Max35NumericText",
					"description": "Route number (for example, flight number, bus number, train route or number, etc.)"
				},
				"Date": {
					"$ref": "#/definitions/ISODate",
					"description": "Departure or arrival date."
				},
				"Time": {
					"$ref": "#/definitions/ISOTime",
					"description": "Departure or arrival time. "
				}
			},
			"type": "object"
		},
		"AuthorisedAmount1": {
			"additionalProperties": false,
			"description": "Provides the amount reserved to cover the anticipated charges associated with the lodging stay.",
			"properties": {
				"DateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Date and time of the amount authorized"
				},
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the amount."
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Contains additional information about the authorized amount."
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"LodgingLineItem1": {
			"additionalProperties": false,
			"description": "Lodging line item details",
			"properties": {
				"Date": {
					"$ref": "#/definitions/ISODate",
					"description": "Date of the charge for the product or service associated with the line item. "
				},
				"Time": {
					"$ref": "#/definitions/ISOTime",
					"description": "Time of the charge for the product or service associated with the line item. "
				},
				"Type": {
					"$ref": "#/definitions/LodgingService1Code",
					"description": "Type of product or service associated with the line item. "
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of product or service associated with the line item. "
				},
				"PostCheckOutIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the charge originated following the checkout. "
				},
				"CreditIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the line item is a credit amount."
				},
				"UnitAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the cost for one unit of the product or service."
				},
				"Duration": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Duration of the trip."
				},
				"SubTotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Subtotal amount of line item.  (e.g. total nightly rate, etc.)"
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Taxes related to the products or services. ",
					"type": "array"
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional data."
				}
			},
			"type": "object"
		},
		"LodgingService1Code": {
			"description": "Type of lodging service.",
		
			"enum":["ACCO"	,"AUDI"	,"BANQ"	,"BREK"	,"BUSS"	,"CONC"	,"EARA"	,"EARD"	,"ENTR"	,"FCAA"	,"GAME"	,"GARA"	,"GIFT"	,"HEAL"	,"INTE"	,"LAUN"	,"LONG"	,"MINI"	,"NOSH"	,"PARK"	,"PHON"	,"REST"	,"SPAS"	,"THRD"	,"TRAN"	,"VODS"	,"OTHR"	,"RMSE"	],				
			"type": "string"
		},
		"ShippingData1": {
			"additionalProperties": false,
			"description": "Shipping or Courier Service delivery. ",
			"properties": {
				"InvoiceNumber": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the invoice number."
				},
				"InvoiceCreationDateTime": {
					"$ref": "#/definitions/ISODateTime",
					"description": "Contains the date and time the electronic invoice was created."
				},
				"ServiceDescriptorCode": {
					"$ref": "#/definitions/Max40Text",
					"description": "Contains a card acceptor designated code for the shipping service provided."
				},
				"IncentiveAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the amount of any incentives applied to the transaction. "
				},
				"MiscellaneousExpenses": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the amount of any miscellaneous expenses applicable to the transaction. "
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"InsuranceAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount of insurance."
				},
				"NetAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the net amount of shipping expenses."
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Contains the total tax amount for the entire purchase. ",
					"type": "array"
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"NumberOfPackages": {
					"$ref": "#/definitions/Max6NumericText",
					"description": "Contains the total number of packages being shipped or sent by the service provider."
				},
				"Package": {
					"items": {
						"$ref": "#/definitions/ShippingPackage1"
					},
					"description": "Contains the details of the package being shipped. ",
					"type": "array"
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Contains additional shipping data."
				}
			},
			"type": "object"
		},
		"Max40Text": {
			"description": "Specifies a character string with a maximum length of 40 characters.",
			"minLength": 1,
			"maxLength": 40,
			"type": "string"
		},
		"ShippingPackage1": {
			"additionalProperties": false,
			"description": "Contains the details of the package",
			"properties": {
				"TrackingNumber": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the identification number for the packages being shipped and is also used for pickup number. "
				},
				"Supplier": {
					"$ref": "#/definitions/PartyIdentification209",
					"description": "Supplier or provider of the delivery services."
				},
				"PickupTime": {
					"$ref": "#/definitions/ISOTime",
					"description": "Contains the time the package is picked up."
				},
				"Delivery": {
					"$ref": "#/definitions/DeliveryInformation3",
					"description": "Delivery information. "
				},
				"Weight": {
					"$ref": "#/definitions/UnitOfMeasure1",
					"description": "Weight details."
				},
				"Product": {
					"items": {
						"$ref": "#/definitions/Product7"
					},
					"description": "Contains the product details.",
					"type": "array"
				},
				"InsuranceIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not insurance was purchased. "
				},
				"InsuranceAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount of insurance."
				}
			},
			"type": "object"
		},
		"PartyIdentification209": {
			"additionalProperties": false,
			"description": "Identification of a party",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the party."
				},
				"Identification": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Contains identification details."
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Address of the customer."
				},
				"Contact": {
					"$ref": "#/definitions/Contact6",
					"description": "Contact information related to the customer."
				},
				"Instructions": {
					"$ref": "#/definitions/Max350Text",
					"description": "Special instructions. "
				}
			},
			"type": "object"
		},
		"DeliveryInformation3": {
			"additionalProperties": false,
			"description": "Delivery information",
			"properties": {
				"DeliveryNoteNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the number identifying an individual delivery note. "
				},
				"Address": {
					"$ref": "#/definitions/Address1",
					"description": "Delivery address."
				},
				"Contact": {
					"$ref": "#/definitions/Contact6",
					"description": "Contact for delivery."
				},
				"Instructions": {
					"$ref": "#/definitions/Max350Text",
					"description": "Special instructions. "
				},
				"Date": {
					"$ref": "#/definitions/ISODate",
					"description": "Contains the package delivery date."
				},
				"Time": {
					"$ref": "#/definitions/ISOTime",
					"description": "Contains the package delivery time."
				}
			},
			"type": "object"
		},
		"UnitOfMeasure1": {
			"additionalProperties": false,
			"description": "Amount of money for which goods or services are offered, sold, or bought.",
			"properties": {
				"UnitOfMeasure": {
					"$ref": "#/definitions/UnitOfMeasure1Code",
					"description": "Unit of measure of the item being shipped."
				},
				"OtherUnitOfMeasure": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other unit of measure."
				},
				"NumberOfUnits": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Number of units."
				}
			},
			"type": "object"
		},
		"Product7": {
			"additionalProperties": false,
			"description": "Product related to the transaction",
			"properties": {
				"ProductCode": {
					"$ref": "#/definitions/Max70Text",
					"description": "Product code of the item."
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				}
			},
			"type": "object"
		},
		"TelecomServices1": {
			"additionalProperties": false,
			"description": "Telecom services carries telephony billing data.",
			"properties": {
				"Summary": {
					"$ref": "#/definitions/TelecomServicesSummary1",
					"description": "Telecom Services Summary component is designed to carry summary level telephony billing data and to enable issuers to supply more transaction information to their consumer and corporate clients pertaining to telecommunications services and related billing information. "
				},
				"LineItem": {
					"items": {
						"$ref": "#/definitions/TelecomServicesLineItem1"
					},
					"description": "Telecom Services Line Item component is designed to carry detail level telephony billing data and to enable issuers to supply more transaction information to their consumer and corporate clients pertaining to telecommunications services and related billing information. ",
					"type": "array"
				}
			},
			"type": "object"
		},
		"TelecomServicesSummary1": {
			"additionalProperties": false,
			"description": "Telecom services summary component carries summary level telephony billing data. \r\n\r\n",
			"properties": {
				"Customer": {
					"$ref": "#/definitions/Customer6",
					"description": "Contains the details of the customer. Also known as the user of the service."
				},
				"BillingStatementPeriodStart": {
					"$ref": "#/definitions/ISODate",
					"description": "Contains the billing period start date for telecommunication or related services."
				},
				"BillingStatementPeriodEnd": {
					"$ref": "#/definitions/ISODate",
					"description": "Contains the billing period end date for telecommunication or related services."
				},
				"BillingEvent": {
					"items": {
						"$ref": "#/definitions/Amount10"
					},
					"description": "Summary of the charges associated with the billing event. ",
					"type": "array"
				},
				"TotalTax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Total of taxes applicable to the billing amount.",
					"type": "array"
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional user-defined data pertaining to the shipment."
				}
			},
			"type": "object"
		},
		"Customer6": {
			"additionalProperties": false,
			"description": "Details of the customer",
			"properties": {
				"AccountNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Customer account number with the service provider."
				},
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Name of the customer."
				},
				"PhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Customer's primary contact phone number. "
				}
			},
			"type": "object"
		},
		"Amount10": {
			"additionalProperties": false,
			"description": "Contains the details of the billing amount",
			"properties": {
				"Description": {
					"$ref": "#/definitions/Max35Text",
					"description": "Description of the amount details."
				},
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the amount."
				},
				"CreditIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the amount is a credit or debit. "
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Tax applicable to the billing amount.",
					"type": "array"
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"TelecomServicesLineItem1": {
			"additionalProperties": false,
			"description": "Telecom services line item carries detail level telephony billing data. \r\n\r\n",
			"properties": {
				"StartDateTime": {
					"$ref": "#/definitions/ISODate",
					"description": "Contains the start date and time of the phone call."
				},
				"TimePeriod": {
					"$ref": "#/definitions/Max35Text",
					"description": "Describes the period (such as peak or off peak) of the phone call."
				},
				"Duration": {
					"$ref": "#/definitions/ISOTime",
					"description": "Duration of phone call expressed in HHMMSS format. "
				},
				"CallFrom": {
					"$ref": "#/definitions/TelecomCallDetails1",
					"description": "Contains the location description for the originator of the telephone call and the number from which the call was made."
				},
				"CallTo": {
					"$ref": "#/definitions/TelecomCallDetails1",
					"description": "Contains the location description for the destination of the telephone call and the number to which the call was made."
				},
				"Charge": {
					"items": {
						"$ref": "#/definitions/Amount11"
					},
					"description": "Contains the amount pertaining to the telephony billing event.",
					"type": "array"
				},
				"TotalTax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Total of taxes applicable to the billing amount",
					"type": "array"
				},
				"TotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total amount applicable to the billing event. "
				},
				"Description": {
					"$ref": "#/definitions/Max256Text",
					"description": "Description of the telecommunications services line item details"
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional user-defined data pertaining to the telecommunications services."
				}
			},
			"type": "object"
		},
		"TelecomCallDetails1": {
			"additionalProperties": false,
			"description": "Structured call details with address.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/TelephonyCallType1Code",
					"description": "Contains call type values."
				},
				"OtherType": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains other call type values."
				},
				"PhoneNumber": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Origination or destination phone number."
				},
				"City": {
					"$ref": "#/definitions/Max35Text",
					"description": "City from which or to which the call was made."
				},
				"State": {
					"$ref": "#/definitions/Max16Text",
					"description": "State from which or to which the call was made."
				},
				"Province": {
					"$ref": "#/definitions/Max35Text",
					"description": "Province from which or to which the call was made."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Country from which or to which the call was made."
				}
			},
			"type": "object"
		},
		"TelephonyCallType1Code": {
			"description": "Indicates the call type",
		
			"enum":["OGPC"	,"VCML"	,"ICPC"	,"PAGE"	,"OTHN"	,"OTHP"	,"TFPC"	,"OTCL"	],				
			"type": "string"
		},
		"Amount11": {
			"additionalProperties": false,
			"description": "Contains amount details for a specific type of charge.",
			"properties": {
				"TypeOfCharge": {
					"$ref": "#/definitions/TypeOfAmount19Code",
					"description": "Type of telephone charge."
				},
				"OtherTypeOfCharge": {
					"$ref": "#/definitions/Max35Text",
					"description": "Description of other type of charge."
				},
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the amount."
				},
				"CreditIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the amount is a credit or debit. "
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"TypeOfAmount19Code": {
			"description": "Identification or qualification of the type of amount.",
		
			"enum":["OTHN"	,"OTHP"	,"CONN"	,"INSU"	,"LNDS"	,"MISC"	,"USGE"	],				
			"type": "string"
		},
		"TemporaryServices1": {
			"additionalProperties": false,
			"description": "Information regarding the billing for services rendered on a temporary or contract basis. The component provides information such as the employee job performed, timekeeping, and billing rates.",
			"properties": {
				"ContractingCompany": {
					"$ref": "#/definitions/TemporaryServicesCompany1",
					"description": "Contains the details of the contracting company that has requested temporary services. "
				},
				"TemporaryEmployee": {
					"$ref": "#/definitions/PartyIdentification210",
					"description": "Contains information about the individual working in a temporary capacity."
				},
				"Job": {
					"$ref": "#/definitions/TemporaryServicesJob1",
					"description": "Contains the details of the job or task of the individual working in a temporary capacity."
				},
				"FlatRateIndicator": {
					"$ref": "#/definitions/TrueFalseIndicator",
					"description": "Indicates whether or not the fee for the individual working in a temporary capacity is a flat\r\nrate."
				},
				"DiscountAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the discount amount. "
				},
				"SummaryCommodityIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group."
				},
				"Labor": {
					"$ref": "#/definitions/TemporaryServicesLabor1",
					"description": "Contains the details of the labour performed and associated duration and billing rate. "
				},
				"MiscellaneousExpenses": {
					"items": {
						"$ref": "#/definitions/Amount13"
					},
					"description": "Contains miscellaneous expense details.",
					"type": "array"
				},
				"SubtotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Subtotal amount exclusive of tax."
				},
				"Tax": {
					"items": {
						"$ref": "#/definitions/Tax33"
					},
					"description": "Contains the amount of taxes assessed for temporary services.",
					"type": "array"
				},
				"AdditionalData": {
					"$ref": "#/definitions/Max350Text",
					"description": "Additional user-defined data pertaining to the temporary services. "
				}
			},
			"type": "object"
		},
		"TemporaryServicesCompany1": {
			"additionalProperties": false,
			"description": "Contains company related information for Temporary Services.",
			"properties": {
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the name of the individual at the contracting company that has requested temporary services."
				},
				"Department": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the name of the department at the contracting company in which the temporary staff will be working. "
				},
				"Identification": {
					"$ref": "#/definitions/PartyIdentification197",
					"description": "Identification of the temporary services company."
				},
				"Supervisor": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the name of the individual at the contracting company that is supervising the temporary staff. "
				}
			},
			"type": "object"
		},
		"PartyIdentification210": {
			"additionalProperties": false,
			"description": "Identification of a party.",
			"properties": {
				"PersonalIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the personal ID associated with the individual working in a temporary capacity."
				},
				"EmployeeIdentification": {
					"$ref": "#/definitions/PhoneNumber",
					"description": "Contains the company-provided ID associated with the individual working in a temporary capacity."
				},
				"Name": {
					"$ref": "#/definitions/Max70Text",
					"description": "Contains the name of the individual working in a temporary capacity."
				},
				"ProfessionalLevel": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the professional level of the individual working in a temporary capacity."
				}
			},
			"type": "object"
		},
		"TemporaryServicesJob1": {
			"additionalProperties": false,
			"description": "Contains the details of the job or task of the individual working in a temporary capacity.",
			"properties": {
				"JobCode": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identifies the job or task being performed by the individual working in a temporary capacity."
				},
				"Description": {
					"$ref": "#/definitions/Max256Text",
					"description": "Contains the description of the job or task of the individual working in a temporary capacity."
				},
				"StartDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Contains the start date of the job. "
				},
				"Duration": {
					"$ref": "#/definitions/Max5NumericText",
					"description": "Duration of the job expressed in number of days. "
				},
				"EndDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Contains the end date of the job. "
				}
			},
			"type": "object"
		},
		"TemporaryServicesLabor1": {
			"additionalProperties": false,
			"description": "Contains the details of the labour performed and associated duration and billing rate. ",
			"properties": {
				"TimeSheetNumber": {
					"$ref": "#/definitions/Max35Text",
					"description": "Contains the time sheet identification number."
				},
				"WeekEnding": {
					"$ref": "#/definitions/Max10NumericText",
					"description": "Contains the date of the end of the billing cycle. "
				},
				"Charge": {
					"items": {
						"$ref": "#/definitions/Amount12"
					},
					"description": "Contains details of the amount charged. ",
					"type": "array"
				}
			},
			"type": "object"
		},
		"Amount12": {
			"additionalProperties": false,
			"description": "Contains amount details for a specific type of charge.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/TemporaryServicesCharge1Code",
					"description": "Type of hours worked. "
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of hours worked. "
				},
				"Rate": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the rate per hour. "
				},
				"Hours": {
					"$ref": "#/definitions/Max6NumericText",
					"description": "Contains the number of hours worked. "
				}
			},
			"type": "object"
		},
		"TemporaryServicesCharge1Code": {
			"description": "Charge types for temporary services",
		
			"enum":["HOLI"	,"ONCL"	,"HAZD"	,"OTHN"	,"OTHP"	,"OVRT"	,"NITE"	,"REGL"	,"WKND"	],				
			"type": "string"
		},
		"Amount13": {
			"additionalProperties": false,
			"description": "Contains the details of the billing amount",
			"properties": {
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Describes the amount type. "
				},
				"Description": {
					"$ref": "#/definitions/Max35Text",
					"description": "Additional information about the amount. "
				},
				"Amount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Contains the amount."
				}
			},
			"required": ["Amount"],
			"type": "object"
		},
		"Instalment3": {
			"additionalProperties": false,
			"description": "Data exclusively related to a card issuer financial loan of the payment transaction, or instalment.",
			"properties": {
				"PaymentSequenceNumber": {
					"$ref": "#/definitions/Number",
					"description": "Indicates the occurrence of a single instalment payment within a series of instalment payments. "
				},
				"Plan": {
					"items": {
						"$ref": "#/definitions/Plan1"
					},
					"description": "Attributes of the instalment plan.",
					"type": "array"
				}
			},
			"type": "object"
		},
		"Plan1": {
			"additionalProperties": false,
			"description": "Attributes of the instalment plan.",
			"properties": {
				"PlanIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the instalment plan."
				},
				"PlanOwner": {
					"$ref": "#/definitions/PlanOwner1Code",
					"description": "List of plan owners."
				},
				"OtherPlanOwner": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other plan owner, used when PlanOwner is OtherNational or OtherPrivate."
				},
				"InstalmentPaymentType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Instalment payment type."
				},
				"PeriodUnit": {
					"$ref": "#/definitions/Frequency12Code",
					"description": "Period unit between consecutive payments."
				},
				"NumberOfPeriods": {
					"$ref": "#/definitions/Number",
					"description": "Number of period units between consecutive payments."
				},
				"InterestRate": {
					"items": {
						"$ref": "#/definitions/InterestRateDetails1"
					},
					"description": "Details of the interest rate.",
					"type": "array"
				},
				"FirstPaymentDate": {
					"$ref": "#/definitions/ISODate",
					"description": "Date of the first payment."
				},
				"FirstAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount of the first payment when different from the subsequent payments."
				},
				"SubsequentAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Amount of subsequent payments."
				},
				"TotalNumberOfPayments": {
					"$ref": "#/definitions/Number",
					"description": "Total number of instalment payments.\r\n\r\nISO 8583 bit 59"
				},
				"InstalmentCurrency": {
					"$ref": "#/definitions/ISO3NumericCurrencyCode",
					"description": "Currency code associated with the instalment amount.  ISO 4217 \"Codes for the representation of currencies and funds\"."
				},
				"GracePeriod": {
					"$ref": "#/definitions/GracePeriod1",
					"description": "Contains grace period details."
				},
				"AmountDetails": {
					"items": {
						"$ref": "#/definitions/InstalmentAmountDetails1"
					},
					"description": "Contains the amount details of an instalment plan.",
					"type": "array"
				},
				"GrandTotalAmount": {
					"$ref": "#/definitions/ImpliedCurrencyAndAmount",
					"description": "Total amount of the instalment including charges, insurance and taxes in addition to the funded amount."
				}
			},
			"type": "object"
		},
		"PlanOwner1Code": {
			"description": "Contains list of plan owners",
		
			"enum":["ACQR"	,"ACCP"	,"ISSR"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"Frequency12Code": {
			"description": "Specifies the regularity of an event.",
		
			"enum":["YEAR"	,"MNTH"	,"QURT"	,"MIAN"	,"WEEK"	,"DAIL"	,"TEND"	,"FRTN"	],				
			"type": "string"
		},
		"InterestRateDetails1": {
			"additionalProperties": false,
			"description": "Details of the interest rate",
			"properties": {
				"Type": {
					"$ref": "#/definitions/InterestRate1Code",
					"description": "Interest rate applicable to the instalment."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of interest applied to the instalment, when Type is OtherNational or OtherPrivate."
				},
				"Period": {
					"$ref": "#/definitions/InstalmentPeriod1Code",
					"description": "Contains instalment period"
				},
				"Rate": {
					"$ref": "#/definitions/BaseOneRate",
					"description": "Rate expressed as a decimal, example, 0.7 is 7/10 and 70%."
				}
			},
			"required": ["Period","Rate"],
			"type": "object"
		},
		"InterestRate1Code": {
			"description": "Contains the list of interest rates.",
		
			"enum":["GSRT"	,"NTRT"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"InstalmentPeriod1Code": {
			"description": "Instalment period.",
		
			"enum":["MNTH"	,"ANNU"	],				
			"type": "string"
		},
		"GracePeriod1": {
			"additionalProperties": false,
			"description": "Grace period applicable to an instalment plan.",
			"properties": {
				"Time": {
					"$ref": "#/definitions/Max3NumericText",
					"description": "Grace period time relative to the grace period unit type. "
				},
				"UnitType": {
					"$ref": "#/definitions/GracePeriodUnitType1Code",
					"description": "Grace period unit type."
				},
				"OtherUnitType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Grace period other unit type."
				}
			},
			"required": ["Time","UnitType"],
			"type": "object"
		},
		"GracePeriodUnitType1Code": {
			"description": "Contains the details of the grace period applicable to the instalment.",
		
			"enum":["MNTH"	,"PMTS"	,"DAYS"	,"WEKS"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"InstalmentAmountDetails1": {
			"additionalProperties": false,
			"description": "Instalment amount details",
			"properties": {
				"Type": {
					"$ref": "#/definitions/InstalmentAmountDetailsType1Code",
					"description": "Grace period unit type."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Grace period other unit type."
				},
				"SubType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Grace period sub type. "
				},
				"Amount": {
					"$ref": "#/definitions/Amount5",
					"description": "Detailed instalment amount."
				},
				"Percentage": {
					"$ref": "#/definitions/PercentageRate",
					"description": "Rate expressed as a percentage, that is, in hundredths, example, 0.7 is 7/10 of a percent, and 7.0 is 7%."
				}
			},
			"type": "object"
		},
		"InstalmentAmountDetailsType1Code": {
			"description": "Contains the details of the grace period applicable to the instalment.",
		
			"enum":["INSU"	,"RQST"	,"TAXX"	,"EXPN"	,"OTHN"	,"OTHP"	,"OTHC"	,"FUNA"	,"FEES"	,"AFCO"	],				
			"type": "string"
		},
		"ProcessingResult1": {
			"additionalProperties": false,
			"description": "Outcome of the processing of the transaction.",
			"properties": {
				"ApprovalData": {
					"$ref": "#/definitions/ApprovalData1",
					"description": "Data pertaining to the approval of the transaction."
				},
				"ResultData": {
					"$ref": "#/definitions/ResultData1",
					"description": "Result of the processing."
				},
				"OriginalResultData": {
					"$ref": "#/definitions/ResultData1",
					"description": "Outcome of a previous processing, for example, in response to a duplicate request."
				},
				"ActionRequired": {
					"$ref": "#/definitions/YesNoIndicator",
					"description": "Action required flag.\r\n\r\nDefault: False: Action Not Required.\r\nTrue: Action Required."
				},
				"Action": {
					"items": {
						"$ref": "#/definitions/Action9"
					},
					"description": "Set of actions to be performed.\r\n\r\nISO 8583 bit 39",
					"type": "array"
				},
				"AdditionalAction": {
					"items": {
						"$ref": "#/definitions/AdditionalAction1"
					},
					"description": "Additional action to perform.",
					"type": "array"
				},
				"AdditionalInformation": {
					"items": {
						"$ref": "#/definitions/AdditionalInformation20"
					},
					"description": "Additional information relevant for the destination.\r\n\r\nISO 8583 bit 44",
					"type": "array"
				}
			},
			"type": "object"
		},
		"ApprovalData1": {
			"additionalProperties": false,
			"description": "Data pertaining to the approval of the transaction.",
			"properties": {
				"ApprovalEntity": {
					"$ref": "#/definitions/ApprovalEntity1",
					"description": "Entity that has delivered or declined the card payment authorisation (the party may be unidentified)."
				},
				"ApprovalCode": {
					"$ref": "#/definitions/Exact6AlphaNumericText",
					"description": "Value assigned by the approval entity indicating approval.\r\nISO 8583:93/2003 bit 38"
				}
			},
			"type": "object"
		},
		"ApprovalEntity1": {
			"additionalProperties": false,
			"description": "Entity that has delivered or declined the card payment authorisation (the party may be unidentified).",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Identification of the entity.\r\n\r\nISO 8583:93/2003 bit 58"
				},
				"Type": {
					"$ref": "#/definitions/PartyType26Code",
					"description": "Type of entity having declined or delivered the card payment authorisation."
				},
				"OtherType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of party."
				},
				"Assigner": {
					"$ref": "#/definitions/PartyType9Code",
					"description": "Entity in charge of assigning the identification."
				},
				"Country": {
					"$ref": "#/definitions/Min2Max3AlphaText",
					"description": "Country of the entity declining or delivering the authorisation.\r\nISO 3166-1 alpha-2 or alpha-3.\r\n\r\nISO 8583:93 bit 70"
				},
				"ShortName": {
					"$ref": "#/definitions/Max35Text",
					"description": "Short name of the entity delivering or declining the authorisation."
				}
			},
			"required": ["Type"],
			"type": "object"
		},
		"PartyType26Code": {
			"description": "Type of entity acting as a Payment Initiation Service Provider.",
		
			"enum":["DLIS"	,"CISS"	,"ACCP"	,"ACQR"	,"ICCA"	,"AGNT"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"PartyType9Code": {
			"description": "Type of entity.",
		
			"enum":["CISS"	,"ACQR"	,"ACQP"	,"CISP"	,"CSCH"	,"SCHP"	],				
			"type": "string"
		},
		"Exact6AlphaNumericText": {
			"description": "Specifies an alphanumeric string with a length of 6 characters.",
			"pattern": "^[a-zA-Z0-9\\s]{6}$",
			"type": "string"
		},
		"ResultData1": {
			"additionalProperties": false,
			"description": "Result of the processing.",
			"properties": {
				"Result": {
					"$ref": "#/definitions/Response8Code",
					"description": "Generic result of the processing.\r\n\r\nISO 8583 bit 39"
				},
				"OtherResult": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of result of the processing."
				},
				"ResultDetails": {
					"$ref": "#/definitions/Exact2AlphaNumericText",
					"description": "Detailed results of the processing.\r\n\r\nISO 8583:1987 bit 39, response code list"
				},
				"OtherResultDetails": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other result details of the processing."
				},
				"AdditionalResultInformation": {
					"items": {
						"$ref": "#/definitions/AdditionalData1"
					},
					"description": "Additional result information to be conveyed.",
					"type": "array"
				}
			},
			"required": ["ResultDetails"],
			"type": "object"
		},
		"Response8Code": {
			"description": "Response codes.",
		
			"enum":["TECH"	,"UNPR"	,"PRCS"	,"OTHN"	,"OTHP"	,"REJT"	,"UNRV"	],				
			"type": "string"
		},
		"Action9": {
			"additionalProperties": false,
			"description": "Set of actions to be performed.",
			"properties": {
				"Destination": {
					"$ref": "#/definitions/PartyType20Code",
					"description": "Destination of the action."
				},
				"ActionType": {
					"$ref": "#/definitions/ActionType11Code",
					"description": "Action type to be performed."
				},
				"OtherActionType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other action type to be performed."
				},
				"ActionInformation": {
					"$ref": "#/definitions/Max70Text",
					"description": "Additional information to the type of action to be performed (for example, channel to be used for additional verification or authentication)."
				}
			},
			"type": "object"
		},
		"PartyType20Code": {
			"description": "Card domain type of party.",
		
			"enum":["CISS"	,"ACCP"	,"ACQR"	,"AGNT"	,"CRDH"	],				
			"type": "string"
		},
		"ActionType11Code": {
			"description": "Action associated with a result.",
		
			"enum":["CPTR"	,"TRCK"	,"OTHN"	,"OTHP"	,"CHDV"	,"CNTI"	,"CNIS"	,"CNTA"	,"VIPM"	,"TRXR"	,"CNAS"	,"SIGN"	],				
			"type": "string"
		},
		"AdditionalAction1": {
			"additionalProperties": false,
			"description": "Additional action to perform.",
			"properties": {
				"Type": {
					"$ref": "#/definitions/ActionType10Code",
					"description": "Type of additional action to perform."
				},
				"Destination": {
					"$ref": "#/definitions/PartyType21Code",
					"description": "Destination of the additional action to perform."
				},
				"OtherDestination": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other destination of action."
				},
				"DestinationType": {
					"$ref": "#/definitions/ActionDestination1Code",
					"description": "Type of destination of the additional action to perform."
				},
				"OtherDestinationType": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of destination."
				},
				"DestinationAddress": {
					"$ref": "#/definitions/Max70Text",
					"description": "Physical destination address of the additional action to perform (for example, URL, mobile phone number, IP address, file name, etc.)."
				},
				"Format": {
					"$ref": "#/definitions/OutputFormat4Code",
					"description": "Format of the message associated with the additional action to perform."
				},
				"OtherFormat": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of format for action data."
				},
				"Content": {
					"$ref": "#/definitions/Content1",
					"description": "Content of or reference to the message."
				}
			},
			"type": "object"
		},
		"ActionType10Code": {
			"description": "Type of additional action to be performed.",
		
			"enum":["DISP"	,"PRNT"	,"ACTV"	,"DEAC"	,"FUPD"	,"SNDM"	],				
			"type": "string"
		},
		"PartyType21Code": {
			"description": "Contains destination party type.",
		
			"enum":["ACCP"	,"CRDH"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"ActionDestination1Code": {
			"description": "Destination of action to be performed.",
		
			"enum":["PECR"	,"MOBL"	,"POFS"	,"FILE"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"OutputFormat4Code": {
			"description": "Output of message format.",
		
			"enum":["TEXT"	,"MREF"	,"HTML"	,"FLNM"	,"OTHN"	,"OTHP"	,"SMSI"	,"URLI"	],				
			"type": "string"
		},
		"Content1": {
			"additionalProperties": false,
			"description": "Content of or reference to the content of a message.",
			"properties": {
				"Value": {
					"$ref": "#/definitions/Max20KText",
					"description": "Value of the content of or the reference to the message."
				},
				"Signature": {
					"$ref": "#/definitions/Max140Binary",
					"description": "Digital signature of the content of or the reference to the message."
				},
				"CertificateIdentification": {
					"$ref": "#/definitions/Max70Text",
					"description": "Signing certificate identification."
				}
			},
			"required": ["Value"],
			"type": "object"
		},
		"Max20KText": {
			"description": "Specifies a character string with a maximum length of 20 000 characters.",
			"minLength": 1,
			"maxLength": 20000,
			"type": "string"
		},
		"AdditionalInformation20": {
			"additionalProperties": false,
			"description": "Additional information relevant to the destination.",
			"properties": {
				"Recipient": {
					"$ref": "#/definitions/PartyType22Code",
					"description": "Recipient of the additional information to display, print, send or store."
				},
				"OtherRecipient": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of recipient of action data."
				},
				"Target": {
					"items": {
						"$ref": "#/definitions/UserInterface6Code"
					},
					"description": "Target of the additional information to print, display, send or store.",
					"type": "array"
				},
				"OtherTarget": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other type of target for action data."
				},
				"Format": {
					"$ref": "#/definitions/OutputFormat4Code",
					"description": "Format of the additional information."
				},
				"OtherFormat": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other output format."
				},
				"Type": {
					"$ref": "#/definitions/Max35Text",
					"description": "Defines the type of the value."
				},
				"Value": {
					"$ref": "#/definitions/Max20KText",
					"description": "Content of or reference to the message."
				}
			},
			"required": ["Value"],
			"type": "object"
		},
		"PartyType22Code": {
			"description": "Recipient of the additional information.",
		
			"enum":["MERC"	,"AGNT"	,"CRDH"	,"OTHN"	,"OTHP"	],				
			"type": "string"
		},
		"UserInterface6Code": {
			"description": "Interface for the destination of a message.",
		
			"enum":["CDSP"	,"CRCP"	,"MDSP"	,"MRCP"	,"CRDO"	,"CHAP"	,"FILE"	,"MRAP"	,"MRIN"	],				
			"type": "string"
		},
		"Max10KHexBinaryText": {
			"description": "Specifies a character string with a maximum length of 10000 binary bytes (20000 hexadecimal text characters).\r\n\r\nUsed only for hex binary data only, supports only characters A-F and 0-9.",
			"pattern": "^([0-9A-F][0-9A-F]){1,10000}  $",
			"type": "string"
		},
		"ProtectedData1": {
			"additionalProperties": false,
			"description": "Contains protected data and the attributes used to protect the data.",
			"properties": {
				"ContentType": {
					"$ref": "#/definitions/ContentType3Code",
					"description": "Type of data protection."
				},
				"EnvelopedData": {
					"$ref": "#/definitions/EnvelopedData6",
					"description": "Consists of an encrypted content of any type and encrypted content-encryption keys for one or more recipients.  The combination of the encrypted content and one encrypted content-encryption key for a recipient is a \"digital   envelope\" for that recipient."
				},
				"EncryptedData": {
					"$ref": "#/definitions/EncryptedData1",
					"description": "Contains encrypted data and the attributes used to encrypt the data using the ISO 13492 methods for data encryption.  The encryption key is not included in the message with this method."
				}
			},
			"required": ["ContentType"],
			"type": "object"
		},
		"ContentType3Code": {
			"description": "Identification of the type of protection for a protected data.",
		
			"enum":["EVLP"	,"IFSE"	],				
			"type": "string"
		},
		"EnvelopedData6": {
			"additionalProperties": false,
			"description": "Encrypted data with encryption key.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"Recipient": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/Recipient7Choice"
					},
					"description": "Session key or identification of the protection key used by the recipient.",
					"type": "array"
				},
				"EncryptedContent": {
					"$ref": "#/definitions/EncryptedContent5",
					"description": "Encrypted data with an encryption key."
				}
			},
			"required": ["Recipient"],
			"type": "object"
		},
		"Recipient7Choice": {
			"description": "Transport key or key encryption key (KEK) for the recipient.",
			"oneOf":[
				{
					"type": "object",
					"additionalProperties": false,
					"required":["KeyTransport"],
					"properties":{
				"KeyTransport": {
					"$ref": "#/definitions/KeyTransport6",
					"description": "Encryption key using previously distributed asymmetric public key."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["KEK"],
					"properties":{
				"KEK": {
					"$ref": "#/definitions/KEK6",
					"description": "Key encryption key using previously distributed symmetric key."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["KeyIdentifier"],
					"properties":{
				"KeyIdentifier": {
					"$ref": "#/definitions/KEKIdentifier6",
					"description": "Identification of a protection key without a session key, shared and previously exchanged between the initiator and the recipient."
				}}
				}
			],
			"type": "object"
		},
		"KeyTransport6": {
			"additionalProperties": false,
			"description": "Key encryption key (KEK), encrypted with a previously distributed asymmetric public key.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"RecipientIdentification": {
					"$ref": "#/definitions/Recipient5Choice",
					"description": "Identification of a cryptographic asymmetric key for the recipient."
				},
				"KeyEncryptionAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification27",
					"description": "Algorithm to encrypt the key encryption key (KEK)."
				},
				"EncryptedKey": {
					"$ref": "#/definitions/Max5000Binary",
					"description": "Encrypted key encryption key (KEK)."
				}
			},
			"required": ["RecipientIdentification","KeyEncryptionAlgorithm","EncryptedKey"],
			"type": "object"
		},
		"AlgorithmIdentification27": {
			"additionalProperties": false,
			"description": "Cryptographic algorithms and parameters for the protection of transported keys by an asymmetric key.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm7Code",
					"description": "Asymmetric encryption algorithm of a transport key."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter13",
					"description": "Parameters of the encryption algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Parameter13": {
			"additionalProperties": false,
			"description": "Parameters of the asymmetric encryption algorithm.",
			"properties": {
				"DigestAlgorithm": {
					"$ref": "#/definitions/Algorithm20Code",
					"description": "Identification of the digest algorithm."
				},
				"MaskGeneratorAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification26",
					"description": "Mask generator function cryptographic algorithm and parameters."
				}
			},
			"type": "object"
		},
		"Algorithm20Code": {
			"description": "Identification of a digest algorithm.",
		
			"enum":["HS25"	,"HS38"	,"HS51"	],				
			"type": "string"
		},
		"AlgorithmIdentification26": {
			"additionalProperties": false,
			"description": "Mask generator function cryptographic algorithm and parameters.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm8Code",
					"description": "Mask generator function cryptographic algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Algorithm5Code",
					"description": "Parameters associated to the mask generator function cryptographic algorithm"
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Algorithm5Code": {
			"description": "Cryptographic algorithms for digests.",
		
			"enum":["HS25"	,"HS38"	,"HS51"	],				
			"type": "string"
		},
		"KEK6": {
			"additionalProperties": false,
			"description": "Key encryption key (KEK), using previously distributed symmetric key.",
			"properties": {
				"Version": {
					"$ref": "#/definitions/Number",
					"description": "Version of the data structure."
				},
				"KEKIdentification": {
					"$ref": "#/definitions/KEKIdentifier6",
					"description": "Identification of the key encryption key (KEK)."
				},
				"KeyEncryptionAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification28",
					"description": "Algorithm to encrypt the key encryption key (KEK)."
				},
				"EncryptedKey": {
					"$ref": "#/definitions/Max500Binary",
					"description": "Encrypted key encryption key (KEK)."
				}
			},
			"required": ["KEKIdentification","KeyEncryptionAlgorithm"],
			"type": "object"
		},
		"KEKIdentifier6": {
			"additionalProperties": false,
			"description": "Identification of a key encryption key (KEK), using previously distributed symmetric key.",
			"properties": {
				"KeyIdentification": {
					"$ref": "#/definitions/Max140Text",
					"description": "Identification of the cryptographic key."
				},
				"KeyVersion": {
					"$ref": "#/definitions/Max140Text",
					"description": "Version of the cryptographic key."
				},
				"SequenceNumber": {
					"$ref": "#/definitions/Number",
					"description": "Number of usages of the cryptographic key."
				},
				"DerivationIdentification": {
					"$ref": "#/definitions/Min5Max16Binary",
					"description": "Identification used for derivation of a unique key from a master key provided for the data protection."
				}
			},
			"required": ["KeyIdentification"],
			"type": "object"
		},
		"AlgorithmIdentification28": {
			"additionalProperties": false,
			"description": "Cryptographic algorithm and parameters for the protection of the transported key.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm13Code",
					"description": "Identification of the algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter14",
					"description": "Parameters associated to the encryption algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Algorithm13Code": {
			"description": "Cryptographic algorithms for the protection of transported keys.",
		
			"enum":["UKPT"	,"E3DC"	,"EA2C"	,"DKP9"	,"UKA1"	,"EA5C"	,"EA9C"	],				
			"type": "string"
		},
		"Parameter14": {
			"additionalProperties": false,
			"description": "Parameters associated to a cryptographic encryption algorithm.",
			"properties": {
				"EncryptionFormat": {
					"$ref": "#/definitions/EncryptionFormat3Code",
					"description": "Format of data before encryption, if the format is not plaintext or implicit."
				},
				"InitialisationVector": {
					"$ref": "#/definitions/Max500Binary",
					"description": "Initialisation vector of a cipher block chaining (CBC) mode encryption."
				},
				"BytePadding": {
					"$ref": "#/definitions/BytePadding1Code",
					"description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit."
				}
			},
			"type": "object"
		},
		"EncryptionFormat3Code": {
			"description": "Format of data before encryption, if the format is not plaintext or implicit.",
		
			"enum":["TR31"	,"TR34"	,"CBCE"	,"CTCE"	],				
			"type": "string"
		},
		"EncryptedContent5": {
			"additionalProperties": false,
			"description": "Encrypted data with an encryption key.",
			"properties": {
				"ContentType": {
					"$ref": "#/definitions/ContentType2Code",
					"description": "Type of data which have been encrypted."
				},
				"ContentEncryptionAlgorithm": {
					"$ref": "#/definitions/AlgorithmIdentification25",
					"description": "Algorithm used to encrypt the data."
				},
				"EncryptedDataElement": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/EncryptedDataElement1"
					},
					"description": "Encrypted data, result of the content encryption.",
					"type": "array"
				}
			},
			"required": ["ContentType","ContentEncryptionAlgorithm","EncryptedDataElement"],
			"type": "object"
		},
		"AlgorithmIdentification25": {
			"additionalProperties": false,
			"description": "Cryptographic algorithm and parameters for encryptions with a symmetric cryptographic key.",
			"properties": {
				"Algorithm": {
					"$ref": "#/definitions/Algorithm23Code",
					"description": "Identification of the encryption algorithm."
				},
				"Parameter": {
					"$ref": "#/definitions/Parameter7",
					"description": "Parameters associated with the CBC (Chain Block Chaining) encryption algorithm."
				}
			},
			"required": ["Algorithm"],
			"type": "object"
		},
		"Algorithm23Code": {
			"description": "Cryptographic algorithms for encryptions with a symmetric cryptographic key.",
		
			"enum":["E3DC"	,"EA2C"	,"EA5C"	,"EA9C"	,"EA2R"	,"EA9R"	,"EA5R"	,"E3DR"	,"E36C"	,"E36R"	,"SD5C"	],				
			"type": "string"
		},
		"EncryptedDataElement1": {
			"additionalProperties": false,
			"description": "Structure to encrypt data elements.",
			"properties": {
				"Identification": {
					"$ref": "#/definitions/ExternalEncryptedElementIdentification1Code",
					"description": "Identifies the element that has been encrypted.\r\nThese codes have the same value as the tag assignments shown in ISO 13492 for the data encryption dataset.  The codes are variable in length and conform to ISO/IEC 8825-1."
				},
				"OtherIdentification": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other identification scheme for identifying the element that has been encrypted."
				},
				"EncryptedData": {
					"$ref": "#/definitions/EncryptedData1Choice",
					"description": "Encrypted data element."
				},
				"ClearTextDataFormat": {
					"$ref": "#/definitions/EncryptedDataFormat1Code",
					"description": "Format of the raw data prior to encryption."
				},
				"OtherClearTextDataFormat": {
					"$ref": "#/definitions/Max35Text",
					"description": "Other national or private format of the raw data prior to encryption."
				}
			},
			"required": ["EncryptedData"],
			"type": "object"
		},
		"ExternalEncryptedElementIdentification1Code": {
			"description": "Specifies the element that has been encrypted, as published in an external data to encrypt type code set.\r\nExternal code sets can be downloaded from www.iso20022.org.\r\n\r\nThese codes have the same value as the tag assignments shown in ISO 13492 for the data encryption dataset.  The codes are variable in length and conform to ISO/IEC 8825-1.",
			"pattern": "^([0-9A-F][0-9A-F]){1,3}$",			
			"type": "string"
		},
		"EncryptedData1Choice": {
			"description": "Choice between binary and hexadicimal binary for encrypted data of the transaction.",
			"oneOf":[
				{
					"type": "object",
					"additionalProperties": false,
					"required":["BinaryData"],
					"properties":{
				"BinaryData": {
					"$ref": "#/definitions/Max100KBinary",
					"description": "BASE-64 encoded encrypted data."
				}}
				},
				{
					"type": "object",
					"additionalProperties": false,
					"required":["HexadecimalBinaryValue"],
					"properties":{
				"HexadecimalBinaryValue": {
					"$ref": "#/definitions/Max9999HexBinaryText",
					"description": "Hexadecimal binary encoded encrypted data."
				}}
				}
			],
			"type": "object"
		},
		"EncryptedDataFormat1Code": {
			"description": "Format used for encrypted data.",
		
			"enum":["ASCI"	,"HEXF"	,"BINF"	,"OTHN"	,"OTHP"	,"EBCD"	],				
			"type": "string"
		},
		"EncryptedData1": {
			"additionalProperties": false,
			"description": "Contains encrypted data and the attributes used to encrypt the data using the ISO 13492 methods for data encryption.  The encryption key is not included in the message with this method.",
			"properties": {
				"Control": {
					"$ref": "#/definitions/Exact1HexBinaryText",
					"description": "Identifies the key management scheme and associated control field format.\r\nSee ISO 13492 Control field for values."
				},
				"KeySetIdentifier": {
					"$ref": "#/definitions/Max8NumericText",
					"description": "Number that uniquely identifies a key or a group of related keys that are all different but have certain characteristics in common.\r\nSee ISO 13492 Key-set identifier for usage."
				},
				"DerivedInformation": {
					"$ref": "#/definitions/Max32HexBinaryText",
					"description": "Contains Derived Info or Device ID and Transaction Counter.\r\nSee ISO 13492 Derived information or Device ID and Transaction Counter for more information."
				},
				"Algorithm": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Defines the algorithm used for encryption.\r\nSee ISO 13492 Algorithm field for values."
				},
				"KeyLength": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Specifies the length of the encryption key.\r\nSee ISO 13492 Key length field for value to use."
				},
				"KeyProtection": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Mechanism used to provide key confidentiality and integrity. Identifies encryption attribute used for the data encryption operation.\r\nSee ISO 13492 Key protection field for values."
				},
				"KeyIndex": {
					"$ref": "#/definitions/Max5NumericText",
					"description": "Identifies a unique key within a key set when multiple keys exist with the same key set identifier.\r\nSee ISO 13492 Key index for more information."
				},
				"PaddingMethod": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Identifies the padding method used prior to encipherment of the data.\r\nSee ISO 13492 Padding method field for values."
				},
				"EncryptedDataFormat": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Identifies the format of the structured data when the encrypted data block contains more than one data element.\r\nSee ISO 13492 Encrypted data format field for values."
				},
				"EncryptedDataElement": {
					"minItems":1,
					"items": {
						"$ref": "#/definitions/EncryptedDataElement1"
					},
					"description": "Encrypted data element information.",
					"type": "array"
				}
			},
			"required": ["EncryptedDataElement"],
			"type": "object"
		},
		"SupplementaryData1": {
			"additionalProperties": false,
			"description": "Additional information that can not be captured in the structured fields and/or any other specific block.",
			"properties": {
				"PlaceAndName": {
					"$ref": "#/definitions/Max350Text",
					"description": "Unambiguous reference to the location where the supplementary data must be inserted in the message instance.\r\nIn the case of XML, this is expressed by a valid XPath."
				},
				"Envelope": {
					"$ref": "#/definitions/SupplementaryDataEnvelope1",
					"description": "Technical element wrapping the supplementary data."
				}
			},
			"required": ["Envelope"],
			"type": "object"
		},
		"SupplementaryDataEnvelope1" : {
			"description": "Technical component that contains the validated supplementary data information. This technical envelope allows to segregate the supplementary data information from any other information.",
				
			"type":"object"
		},
		"ContentInformationType20": {
			"additionalProperties": false,
			"description": "General cryptographic message syntax (CMS) containing encrypted data.",
			"properties": {
				"MACData": {
					"$ref": "#/definitions/MACData1",
					"description": "Type of data protection.\r\n\r\nISO 8583:87 bit 53 or 110\r\nISO 8583:93 bit 53 or 111\r\nISO 8583:2003 bit 53 or 50"
				},
				"MAC": {
					"$ref": "#/definitions/Max8HexBinaryText",
					"description": "Message Authentication Code data.\r\n\r\nBinary, length of 8\r\n\r\nISO 8583 bit 64 or bit 128\r\n"
				}
			},
			"required": ["MACData","MAC"],
			"type": "object"
		},
		"MACData1": {
			"additionalProperties": false,
			"description": "Attributes of a cardholder PIN.\r\n\r\nISO 8583:87 bit 53 or 110\r\nISO 8583:93 bit 53 or 111\r\nISO 8583:2003 bit 53 or 50",
			"properties": {
				"Control": {
					"$ref": "#/definitions/Exact1HexBinaryText",
					"description": "Identifies the key management scheme and associated structure of the remainder of the data element.\r\n\r\nISO 13492\r\nBinary, length of 1\r\n"
				},
				"KeySetIdentifier": {
					"$ref": "#/definitions/Max8NumericText",
					"description": "key-set identifier is a number that uniquely identifies a group of related keys that are all different but have certain characteristics in common.\r\nISO 13492\r\n\r\nlengths of 6 or 8"
				},
				"DerivedInformation": {
					"$ref": "#/definitions/Max32HexBinaryText",
					"description": "Random number or counter in order to have a unique key per transaction. for example, UKPT PIN encryption or the transaction counter.\r\n\r\nISO 13492\r\n \r\nBinary, lengths of 5, 8, 16 or 32 "
				},
				"Algorithm": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Selects the encryption algorithm used to encipher the keys contained in the associated key management data element.\r\nISO 13492\r\n"
				},
				"KeyLength": {
					"$ref": "#/definitions/Max4NumericText",
					"description": "Specifies the length of the keys being transported, not the encrypting key.\r\nISO 13492"
				},
				"KeyProtection": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Mechanism used to provide key confidentiality and integrity. \r\nISO 13492\r\n"
				},
				"KeyIndex": {
					"$ref": "#/definitions/Max5NumericText",
					"description": "Identifies a unique key set when multiple keys with the same key set identifier are used. for example, key rotation.\r\n\r\nISO 13492\r\n\r\nLength of 2 or 5"
				},
				"PaddingMethod": {
					"$ref": "#/definitions/Max2NumericText",
					"description": "Identifies the padding method used for MAC.\r\n\r\nISO 13492"
				},
				"InitialisationVector": {
					"$ref": "#/definitions/Max32HexBinaryText",
					"description": "Initialisation vector for CBC.\r\n\r\nISO 13492\r\n\r\nBinary, lengths of  8, 16 or 32 "
				}
			},
			"required": ["Control","KeySetIdentifier","Algorithm"],
			"type": "object"
		},
		"Max8HexBinaryText": {
			"description": "Specifies a character string with a maximum length of 8 binary bytes (16 hexadecimal text characters).\r\n\r\nUsed only for hex binary data only, supports only characters A-F and 0-9.",
			"pattern": "^([0-9A-F][0-9A-F]){1,8}$",
			"type": "string"
		},
		"cain.001.001.02-AuthorisationInitiationV02":{
			"additionalProperties": false,
			"description": "AuthorisationInitiation message is sent by an acquirer or an agent to an issuer to request approval of a card transaction by the issuer or to inform the issuer about the completion of the authorisation. It can also be sent by an issuer to an acquirer or agent to advise about the result of an authorisation already performed.\r\n\r\n",
			"properties": {
				"@type": { "type":"string" },
				"@name": {
					"type": "string"
				},
				"@businessArea": {
					"type": "string"
				},
				"@messageFunctionality": {
					"type": "string"
				},
				"@flavour": {
					"type": "string"
				},
				"@version": {
					"type": "string"
				},
		
				"Header": {
					"$ref": "#/definitions/Header42",
					"description": "Information related to the management of the protocol."
				},
				"Body": {
					"$ref": "#/definitions/AuthorisationInitiation1",
					"description": "Information related to the authorisation initiation."
				},
				"SecurityTrailer": {
					"$ref": "#/definitions/ContentInformationType20",
					"description": "Trailer of the message containing a MAC."
				}
			},
			"required": [
		"Header","Body"],
			"type": "object"
		}
	}
}
